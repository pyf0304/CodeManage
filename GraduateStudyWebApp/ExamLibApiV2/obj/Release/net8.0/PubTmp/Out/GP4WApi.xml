<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GP4WApi</name>
    </assembly>
    <members>
        <member name="T:GP4WApi.clsQxPrjUserRelation4SynchExWApi">
            <summary>
            工程用户关系4同步(QxPrjUserRelation4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelation4SynchExWApi.arrQxPrjUserRelation4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelation4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchExWApi.AddNewRecordEx(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="T:GP4WApi.clsQxServer4SynchExWApi">
            <summary>
            同步服务器(QxServer4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxServer4SynchExWApi.arrQxServer4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxServer4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelation4SynchExWApi">
            <summary>
            用户角色关系4同步(QxUserRoleRelation4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelation4SynchExWApi.arrQxUserRoleRelation4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelation4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchExWApi.AddNewRecordEx(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="T:GP4WApi.clsQxUsers4SynchExWApi">
            <summary>
            用户4同步(QxUsers4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsers4SynchExWApi.arrQxUsers4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsers4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUsers4SynchExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUsers4SynchExWApi.AddNewRecordEx(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelation4SynchExWApi">
            <summary>
            v工程用户关系4同步(vQxPrjUserRelation4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelation4SynchExWApi.arrvQxPrjUserRelation4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelation4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRoleRelation4SynchExWApi">
            <summary>
            v用户角色关系4同步(vQxUserRoleRelation4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRoleRelation4SynchExWApi.arrvQxUserRoleRelation4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRoleRelation4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUsers4SynchExWApi">
            <summary>
            v用户4同步(vQxUsers4Synch)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsers4SynchExWApi.arrvQxUsers4SynchObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsers4SynchExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxViewInfoExWApi">
            <summary>
            界面(QxViewInfo)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewInfoExWApi.arrQxViewInfoObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewInfoExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxViewPotenceExWApi">
            <summary>
            界面权限(QxViewPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewPotenceExWApi.arrQxViewPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxViewInfoExWApi">
            <summary>
            v界面信息(vQxViewInfo)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxViewInfoExWApi.arrvQxViewInfoObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxViewInfoExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxViewPotenceExWApi">
            <summary>
            v界面权限(vQxViewPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxViewPotenceExWApi.arrvQxViewPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxViewPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsErrorInformationExWApi">
            <summary>
            错误(ErrorInformation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsErrorInformationExWApi.arrErrorInformationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsErrorInformationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPageDispModeExWApi">
            <summary>
            页面显示模式(QxPageDispMode)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPageDispModeExWApi.arrQxPageDispModeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPageDispModeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjMenuSetExWApi">
            <summary>
            菜单集(QxPrjMenuSet)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjMenuSetExWApi.arrQxPrjMenuSetObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjMenuSetExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetExWApi.GetFirstIDByMenuSetName(System.String,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.AutoGC6Cs_WS:Gen_4Ws_GetFirstID_S)
            </summary>
            <param name = "strMenuSetName">菜单集名</param>
            <param name = "strQxPrjId">工程Id</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjMenusExWApi">
            <summary>
            工程菜单(QxPrjMenus)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjMenusExWApi.arrQxPrjMenusObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjMenusExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxPrjMenusExWApi.GetUpMenuObjListByMenuSetId(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxPrjMenusExWApi.GetSubMenuObjListByMenuSetId(System.String,System.String)" -->
        <member name="T:GP4WApi.clsQxRoleMenusExWApi">
            <summary>
            角色菜单(QxRoleMenus)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxRoleMenusExWApi.arrQxRoleMenusObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxRoleMenusExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserMenuDetailExWApi">
            <summary>
            用户菜单(QxUserMenuDetail)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenuDetailExWApi.arrQxUserMenuDetailObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenuDetailExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserMenusExWApi">
            <summary>
            用户菜单(QxUserMenus)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenusExWApi.arrQxUserMenusObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenusExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenuSetExWApi">
            <summary>
            v菜单集(vQxPrjMenuSet)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenuSetExWApi.arrvQxPrjMenuSetObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenuSetExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenusExWApi">
            <summary>
            v工程菜单(vQxPrjMenus)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenusExWApi.arrvQxPrjMenusObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenusExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_LeafExWApi">
            <summary>
            v三层菜单(vQxPrjMenus_Leaf)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_LeafExWApi.arrvQxPrjMenus_LeafObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_LeafExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_SubExWApi">
            <summary>
            v子层菜单(vQxPrjMenus_Sub)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_SubExWApi.arrvQxPrjMenus_SubObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_SubExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_UpExWApi">
            <summary>
            v顶层菜单(vQxPrjMenus_Up)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_UpExWApi.arrvQxPrjMenus_UpObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjMenus_UpExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenusExWApi">
            <summary>
            v角色菜单(vQxRoleMenus)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRoleMenusExWApi.arrvQxRoleMenusObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRoleMenusExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusExWApi.GetObjLstEx(GeneralPlatform.Entity.stuRoleMenuPara)">
            <summary>
            根据条件获取角色菜单对象列表
            </summary>
            <param name="strRoleId">提供的条件</param>
            <param name="strPrjId">提供的条件</param>
            <param name="strMenuSetId">提供的条件</param>
            <param name="bolIsUpMenuId">提供的条件</param>
            <returns>返回：角色菜单对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusExWApi.GetObjLstByRoleIdsEx(GeneralPlatform.Entity.stuRoleMenuByRoleIdsPara)">
            <summary>
            根据条件获取角色菜单对象列表
            </summary>
            <param name="sstrRoleId">提供的条件</param>
            <param name="strPrjId">提供的条件</param>
            <param name="strMenuSetId">提供的条件</param>
            <param name="bolIsUpMenuId">提供的条件</param>
            <returns>返回：角色菜单对象列表</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetUpMenuObjList(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetUpMenuObjList(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetSubMenuObjList(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetSubMenuObjList(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetUpMenuObjList(System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetSubMenuObjList(System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetUpMenuObjListByMenuSetId(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsvQxRoleMenusExWApi.GetSubMenuObjListByMenuSetId(System.String,System.String)" -->
        <member name="M:GP4WApi.clsvQxRoleMenusExWApi.GetSubMenuObjListByRoleIds(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            获取当前角色列表的子层菜单列表，以List[clsvQxRoleMenusEN]的形式返回
            </summary>
            <param name="arrRoleId">角色Id 列表</param>
            <param name="strPrjId">工程Id</param>
            <param name="strMenuSetId">菜单集Id</param>
            <returns>以List[clsvQxRoleMenusEN]形式表示的子层菜单列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusExWApi.GetUpMenuObjListByRoleIds(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            获取当前角色列表的顶层菜单列表，以List[clsvQxRoleMenusEN]的形式返回
            </summary>
            <param name="arrRoleId">角色Id 列表</param>
            <param name="strPrjId">工程Id</param>
            <param name="strMenuSetId">菜单集Id</param>
            <returns>以List[clsvQxRoleMenusEN]形式表示的顶层菜单列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusExWApi.LogErrorS(System.Exception,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="objException">异常对象</param>
            <param name="strModuleName">模块名称</param>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenus_SimExWApi">
            <summary>
            v角色菜单_Sim(vQxRoleMenus_Sim)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRoleMenus_SimExWApi.arrvQxRoleMenus_SimObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRoleMenus_SimExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPotenceTypeExWApi">
            <summary>
            权限类型(QxPotenceType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPotenceTypeExWApi.arrQxPotenceTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPotenceTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjPotenceExWApi">
            <summary>
            工程权限(QxPrjPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjPotenceExWApi.arrQxPrjPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxRelaOfPotenceAndSymbolExWApi">
            <summary>
            权限编程标志关系表(QxRelaOfPotenceAndSymbol)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxRelaOfPotenceAndSymbolExWApi.arrQxRelaOfPotenceAndSymbolObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxRelaOfPotenceAndSymbolExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceSymbolForRoleExWApi">
            <summary>
            vPotenceSymbolForRole(vQxPotenceSymbolForRole)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPotenceSymbolForRoleExWApi.arrvQxPotenceSymbolForRoleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPotenceSymbolForRoleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceTypeExWApi">
            <summary>
            v权限类型(vQxPotenceType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPotenceTypeExWApi.arrvQxPotenceTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPotenceTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjPotenceExWApi">
            <summary>
            v工程权限(vQxPrjPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjPotenceExWApi.arrvQxPrjPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxRelaOfPotenceAndSymbolExWApi">
            <summary>
            v权限编程标志关系表(vQxRelaOfPotenceAndSymbol)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRelaOfPotenceAndSymbolExWApi.arrvQxRelaOfPotenceAndSymbolObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxRelaOfPotenceAndSymbolExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxCodeTypeExWApi">
            <summary>
            代码类型(QxCodeType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxCodeTypeExWApi.arrQxCodeTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxCodeTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjFileRelaExWApi">
            <summary>
            项目相关文件(QxPrjFileRela)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjFileRelaExWApi.arrQxPrjFileRelaObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjFileRelaExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjSite4DownLoadExWApi">
            <summary>
            文件下载站点(QxPrjSite4DownLoad)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjSite4DownLoadExWApi.arrQxPrjSite4DownLoadObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjSite4DownLoadExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadDetailLogExWApi">
            <summary>
            用户下载日志细节(QxUserDownLoadDetailLog)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadDetailLogExWApi.arrQxUserDownLoadDetailLogObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadDetailLogExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadLogExWApi">
            <summary>
            用户下载日志(QxUserDownLoadLog)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadLogExWApi.arrQxUserDownLoadLogObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadLogExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjFileRelaExWApi">
            <summary>
            v项目相关文件(vQxPrjFileRela)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjFileRelaExWApi.arrvQxPrjFileRelaObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjFileRelaExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjSite4DownLoadExWApi">
            <summary>
            v文件下载站点(vQxPrjSite4DownLoad)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjSite4DownLoadExWApi.arrvQxPrjSite4DownLoadObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjSite4DownLoadExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserDownLoadDetailLogExWApi">
            <summary>
            v用户下载日志细节(vQxUserDownLoadDetailLog)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserDownLoadDetailLogExWApi.arrvQxUserDownLoadDetailLogObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserDownLoadDetailLogExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserDownLoadLogExWApi">
            <summary>
            v用户下载日志(vQxUserDownLoadLog)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserDownLoadLogExWApi.arrvQxUserDownLoadLogObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserDownLoadLogExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsDataBaseTypeExWApi">
            <summary>
            数据库类型(DataBaseType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsDataBaseTypeExWApi.arrDataBaseTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsDataBaseTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxFuncModuleExWApi">
            <summary>
            功能模块(QxFuncModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModuleExWApi.arrQxFuncModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objQxFuncModule_AgcENS">源对象</param>
            <returns>目标对象=>clsQxFuncModule_AgcEN:objQxFuncModule_AgcENT</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxFuncModule_AgcExWApi">
            <summary>
            功能模块_Agc(QxFuncModule_Agc)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModule_AgcExWApi.arrQxFuncModule_AgcObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModule_AgcExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcExWApi.EditRecordEx(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjDataBaseExWApi">
            <summary>
            数据库对象(QxPrjDataBase)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjDataBaseExWApi.arrQxPrjDataBaseObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjDataBaseExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjModuleExWApi">
            <summary>
            项目模块表(QxPrjModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjModuleExWApi.arrQxPrjModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxProjectsExWApi">
            <summary>
            工程表(QxProjects)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxProjectsExWApi.arrQxProjectsObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxProjectsExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModuleExWApi">
            <summary>
            v功能模块(vQxFuncModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxFuncModuleExWApi.arrvQxFuncModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxFuncModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objvQxFuncModule_AgcENS">源对象</param>
            <returns>目标对象=>clsvQxFuncModule_AgcEN:objvQxFuncModule_AgcENT</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModule_AgcExWApi">
            <summary>
            v功能模块_Agc(vQxFuncModule_Agc)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxFuncModule_AgcExWApi.arrvQxFuncModule_AgcObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxFuncModule_AgcExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcExWApi.EditRecordEx(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjDataBaseExWApi">
            <summary>
            v数据库对象(vQxPrjDataBase)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjDataBaseExWApi.arrvQxPrjDataBaseObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjDataBaseExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjModuleExWApi">
            <summary>
            v项目模块表(vQxPrjModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjModuleExWApi.arrvQxPrjModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objFuncModuleENS">源对象</param>
            <returns>目标对象=>clsFuncModuleEN:objFuncModuleENT</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objFuncModuleEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsFuncModuleExWApi">
            <summary>
            功能模块(FuncModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsFuncModuleExWApi.arrFuncModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsFuncModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleExWApi.EditRecordEx(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsvFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objvFuncModuleENS">源对象</param>
            <returns>目标对象=>clsvFuncModuleEN:objvFuncModuleENT</returns>
        </member>
        <member name="T:GP4WApi.clsvFuncModuleExWApi">
            <summary>
            v功能模块(vFuncModule)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvFuncModuleExWApi.arrvFuncModuleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvFuncModuleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleExWApi.EditRecordEx(GeneralPlatform.Entity.clsvFuncModuleEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="T:GP4WApi.clsQxApplicationTypeExWApi">
            <summary>
            应用程序类型(QxApplicationType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxApplicationTypeExWApi.arrQxApplicationTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxApplicationTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentTypeExWApi">
            <summary>
            部门类型(QxDepartmentType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentTypeExWApi.arrQxDepartmentTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSubjectTypeExWApi">
            <summary>
            学科类型(SubjectType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectTypeExWApi.arrSubjectTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsTSysParaExWApi">
            <summary>
            系统参数(TSysPara)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTSysParaExWApi.arrTSysParaObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTSysParaExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objExportExcel4UsersENS">源对象</param>
            <returns>目标对象=>clsExportExcel4UsersEN:objExportExcel4UsersENT</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objExportExcel4UsersEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsExportExcel4UsersExWApi">
            <summary>
            导出Excel用户字段(ExportExcel4Users)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcel4UsersExWApi.arrExportExcel4UsersObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcel4UsersExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersExWApi.EditRecordEx(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="T:GP4WApi.clsExportExcelSetExWApi">
            <summary>
            导出Excel设置(ExportExcelSet)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcelSetExWApi.arrExportExcelSetObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcelSetExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserCodePathExWApi">
            <summary>
            用户生成路径(QxUserCodePath)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserCodePathExWApi.arrQxUserCodePathObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserCodePathExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSetFieldVisibilityExWApi">
            <summary>
            设置字段可视性(SetFieldVisibility)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSetFieldVisibilityExWApi.arrSetFieldVisibilityObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSetFieldVisibilityExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvExportExcel4UsersExWApi">
            <summary>
            v导出Excel用户字段表(vExportExcel4Users)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvExportExcel4UsersExWApi.arrvExportExcel4UsersObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvExportExcel4UsersExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvExportExcelSetExWApi">
            <summary>
            v导出Excel设置(vExportExcelSet)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvExportExcelSetExWApi.arrvExportExcelSetObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvExportExcelSetExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserCodePathExWApi">
            <summary>
            v用户生成路径(vQxUserCodePath)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserCodePathExWApi.arrvQxUserCodePathObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserCodePathExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvSetFieldVisibilityExWApi">
            <summary>
            v设置字段可视性(vSetFieldVisibility)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvSetFieldVisibilityExWApi.arrvSetFieldVisibilityObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvSetFieldVisibilityExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsXzSchoolExWApi">
            <summary>
            学校(XzSchool)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsXzSchoolExWApi.arrXzSchoolObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsXzSchoolExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objQxPrjTabENS">源对象</param>
            <returns>目标对象=>clsQxPrjTabEN:objQxPrjTabENT</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objQxPrjTabEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjTabExWApi">
            <summary>
            工程表(QxPrjTab)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjTabExWApi.arrQxPrjTabObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjTabExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabExWApi.EditRecordEx(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objSQLDSTypeENS">源对象</param>
            <returns>目标对象=>clsSQLDSTypeEN:objSQLDSTypeENT</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objSQLDSTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsSQLDSTypeExWApi">
            <summary>
            Sql数据源类型(SQLDSType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSQLDSTypeExWApi.arrSQLDSTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSQLDSTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeExWApi.EditRecordEx(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objTabStateENS">源对象</param>
            <returns>目标对象=>clsTabStateEN:objTabStateENT</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objTabStateEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsTabStateExWApi">
            <summary>
            表状态(TabState)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabStateExWApi.arrTabStateObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabStateExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateExWApi.EditRecordEx(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objTabTypeENS">源对象</param>
            <returns>目标对象=>clsTabTypeEN:objTabTypeENT</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objTabTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsTabTypeExWApi">
            <summary>
            表类型(TabType)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabTypeExWApi.arrTabTypeObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabTypeExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeExWApi.EditRecordEx(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabExWApi_Static.CopyToEx(GeneralPlatform.Entity.clsvQxPrjTabEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_CopyToEx)
            </summary>
            <param name = "objvQxPrjTabENS">源对象</param>
            <returns>目标对象=>clsvQxPrjTabEN:objvQxPrjTabENT</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabExWApi_Static.EditRecordEx(GeneralPlatform.Entity.clsvQxPrjTabEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_Static_EditRecordEx)
            </summary>
            <param name = "objvQxPrjTabEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjTabExWApi">
            <summary>
            v工程表(vQxPrjTab)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjTabExWApi.arrvQxPrjTabObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjTabExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabExWApi.EditRecordEx(GeneralPlatform.Entity.clsvQxPrjTabEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_EditRecordEx)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabExWApi.#ctor">
            <summary>
            构造函数
            (AutoGCLib.WA_AccessEx4CSharp:Gen_4WAEx_ClassConstructor1)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentInfoExWApi">
            <summary>
            部门(QxDepartmentInfo)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentInfoExWApi.arrQxDepartmentInfoObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentInfoExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjUserRelationExWApi">
            <summary>
            工程用户关系(QxPrjUserRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelationExWApi.arrQxPrjUserRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupRelationExWApi">
            <summary>
            用户/组关系(QxUserGroupRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupRelationExWApi.arrQxUserGroupRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupsExWApi">
            <summary>
            用户组(QxUserGroups)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupsExWApi.arrQxUserGroupsObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupsExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserIdentityExWApi">
            <summary>
            用户权限身份表(QxUserIdentity)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserIdentityExWApi.arrQxUserIdentityObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserIdentityExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserLoginNameExWApi">
            <summary>
            用户登录名(QxUserLoginName)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserLoginNameExWApi.arrQxUserLoginNameObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserLoginNameExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelationExWApi">
            <summary>
            用户角色关系(QxUserRoleRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelationExWApi.arrQxUserRoleRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserRolesExWApi">
            <summary>
            角色(QxUserRoles)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRolesExWApi.arrQxUserRolesObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRolesExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUsersExWApi">
            <summary>
            用户(QxUsers)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsersExWApi.arrQxUsersObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsersExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.SynDataToOtherServer(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetRoleIdLstByUserId(System.String,System.String)">
            <summary>
            获取用户的所有子对象列表
            </summary>
            <param name="strUserId">当前用户</param>
            <param name="strPrjId">当前工程</param>
            <returns>扩展用户对象，包括子对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetRoleNameLstByUserId(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strUserId"></param>
            <param name="strPrjId"></param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetPotenceIdLstByUserId(System.String,System.String)">
            <summary>
            获取用户的所有子对象列表
            </summary>
            <param name="strUserId">当前用户</param>
            <param name="strPrjId">当前工程</param>
            <returns>扩展用户对象，包括子对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetPotenceNameLstByUserId(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strUserId"></param>
            <param name="strPrjId"></param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.IsHavePotenceName(System.String,System.String,System.String)">
            <summary>
            是否包含某权限名称
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strPotenceName">给定的权限名称</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.IsHavePotenceId(System.String,System.String,System.String)">
            <summary>
            是否包含某权限Id
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strPotenceId">给定的权限ID</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetQxPrjPotenceObjByPotenceName(System.String,System.String,System.String)">
            <summary>
            是否包含某权限名称
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strPotenceName">给定的权限名称</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetQxPrjPotenceObjByPotenceName4CurrRole(System.String,System.String,System.String,System.String)">
            <summary>
            获取当前角色中包含某权限名称的权限对象
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strRoleId">角色ID</param>
            <param name="strPotenceName">给定的权限名称</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetSymbolIdLstByPotenceId(System.String,System.String,System.String)">
            <summary>
            获取用户的有关某权限的标志ID列表
            </summary>
            <param name="strUserId">当前用户</param>
            <param name="strPotenceId">权限ID</param>
            <param name="strPrjId">当前工程</param>
            <returns>扩展用户对象，包括子对象列表</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxUsersExWApi.GetSymbolNameLstByPotenceId(System.String,System.String,System.String)" -->
        <member name="M:GP4WApi.clsQxUsersExWApi.GetSymbolIdLstByPotenceName(System.String,System.String,System.String)">
            <summary>
            获取用户的有关某权限的标志ID列表
            </summary>
            <param name="strUserId">当前用户</param>
            <param name="strPotenceName">权限名称</param>
            <param name="strPrjId">当前工程</param>
            <returns>扩展用户对象，包括子对象列表</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxUsersExWApi.GetSymbolNameLstByPotenceName(System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxUsersExWApi.GetSymbolNameLstByPotenceName4CurrRoleId(System.String,System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GP4WApi.clsQxUsersExWApi.GetSymbolNameLstByPotenceName4CurrRoleId2(System.String,System.String,System.String)" -->
        <member name="M:GP4WApi.clsQxUsersExWApi.IsHavePotenceNameAndSymbol(System.String,System.String,System.String,System.String)">
            <summary>
            是否包含某权限名称
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strPotenceName">给定的权限名称</param>
            <param name="strSymbolName">权限标志</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.IsHavePotenceNameAndSymbol4CurrRole(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            是否包含某权限名称
            </summary>
            <param name="strPrjId">工程ID</param>
            <param name="strUserId">用户ID</param>
            <param name="strRoleId">角色ID</param>
            <param name="strPotenceName">给定的权限名称</param>
            <param name="strSymbolName">权限标志</param>
            <returns>是否包含？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.Change_QxUserPassword(GeneralPlatform.Entity.stuChangePasswordPara)">
            <summary>
            修改给定用户的系统口令
            </summary>
            <param name="strUserId">用户Id</param>
            <param name="strOldPassword">用户当前的密码，用以验证</param>
            <param name="strNewPassword">用户需要修改的新密码</param>
            <returns>修改成功，返回true，失败返回false</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.Change_QxUserPassword2(GeneralPlatform.Entity.stuChangePasswordPara)">
            <summary>
            修改给定用户的系统口令
            </summary>
            <param name="strUserId">用户Id</param>
            <param name="strNewPassword">用户需要修改的新密码</param>
            <returns>修改成功，返回true，失败返回false</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetEnterSchoolDateByUserId(System.String)">
            <summary>
            根据用户Id（UserId）获取入校年月
            </summary>
            <param name="strUserId">用户ID</param>
            <returns>入校年月</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetEnterSchoolYearByUserId(System.String)">
            <summary>
            根据用户Id（UserId）获取入校年
            </summary>
            <param name="strUserId">用户ID</param>
            <returns>入校年</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetUserNameByUserId(System.String)">
            <summary>
            根据用户Id（UserId）获取用户名
            </summary>
            <param name="strUserId">用户ID</param>
            <returns>用户名</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.AddNewUsers(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            添加新的用户
            </summary>
            <param name="objUsers">用户对象</param>
            <param name="strPrjId">工程ID</param>
            <param name="strRoleId">角色ID</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.AddNewUsersAndUpdate(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            添加新的用户, 如果存在相同的用户，就修改信息，这样可以初始化口令
            </summary>
            <param name="objUsers">用户对象</param>
            <param name="strPrjId">工程ID</param>
            <param name="strRoleId">角色ID</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.AddPrjUserRelation(System.String,System.String)">
            <summary>
            建立工程用户关系
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strPrjId">工程ID</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.AddUserRoleRelation(System.String,System.String)">
            <summary>
            建立用户角色关系
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strRoleId">工程ID</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.CreateUserRoleRelation(System.String,System.String,System.String)">
            <summary>
            为用户设置角色
            </summary>
            <param name="strUserId">当前用户</param>
            <param name="strRoleId">当前角色</param>
            <param name="strPrjId">当前工程</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsQxUsersExWApi.GetManager2IdByDepartmentId(System.String)">
            <summary>
            根据部门ID获取该部门的二级管理员ID
            </summary>
            <param name="strDepartmentId">部门ID</param>
            <returns>二级管理员ID？</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserStateExWApi">
            <summary>
            用户状态(QxUserState)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserStateExWApi.arrQxUserStateObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserStateExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUsers_SchoolExWApi">
            <summary>
            用户_学校(QxUsers_School)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsers_SchoolExWApi.arrQxUsers_SchoolObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUsers_SchoolExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSubjectRelationExWApi">
            <summary>
            隶属关系(SubjectRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectRelationExWApi.arrSubjectRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsUserDefaValueExWApi">
            <summary>
            用户缺省值(UserDefaValue)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsUserDefaValueExWApi.arrUserDefaValueObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsUserDefaValueExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoByUserNumExWApi">
            <summary>
            v部门信息By用户数(vQxDepartmentInfoByUserNum)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxDepartmentInfoByUserNumExWApi.arrvQxDepartmentInfoByUserNumObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxDepartmentInfoByUserNumExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoExWApi">
            <summary>
            v部门(vQxDepartmentInfo)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxDepartmentInfoExWApi.arrvQxDepartmentInfoObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxDepartmentInfoExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelationByRoleExWApi">
            <summary>
            v工程用户关系ByRole(vQxPrjUserRelationByRole)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelationByRoleExWApi.arrvQxPrjUserRelationByRoleObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelationByRoleExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelationExWApi">
            <summary>
            v工程用户关系(vQxPrjUserRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelationExWApi.arrvQxPrjUserRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxPrjUserRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserLoginNameExWApi">
            <summary>
            vUserLoginName(vQxUserLoginName)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserLoginNameExWApi.arrvQxUserLoginNameObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserLoginNameExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRoleRelationExWApi">
            <summary>
            v用户角色关系(vQxUserRoleRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRoleRelationExWApi.arrvQxUserRoleRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRoleRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesByMenuNumExWApi">
            <summary>
            v角色By菜单数(vQxUserRolesByMenuNum)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByMenuNumExWApi.arrvQxUserRolesByMenuNumObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByMenuNumExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesByPotenceNumExWApi">
            <summary>
            v角色By权限数(vQxUserRolesByPotenceNum)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByPotenceNumExWApi.arrvQxUserRolesByPotenceNumObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByPotenceNumExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesByUserNumExWApi">
            <summary>
            v角色By用户数(vQxUserRolesByUserNum)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByUserNumExWApi.arrvQxUserRolesByUserNumObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesByUserNumExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesExWApi">
            <summary>
            v角色(vQxUserRoles)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesExWApi.arrvQxUserRolesObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserRolesExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUsersExWApi">
            <summary>
            v用户(vQxUsers)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsersExWApi.arrvQxUsersObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsersExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUsers_SchoolExWApi">
            <summary>
            vUsers_School(vQxUsers_School)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsers_SchoolExWApi.arrvQxUsers_SchoolObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUsers_SchoolExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvSubjectRelationExWApi">
            <summary>
            v隶属关系(vSubjectRelation)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvSubjectRelationExWApi.arrvSubjectRelationObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvSubjectRelationExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupPotenceExWApi">
            <summary>
            用户权限关系(QxUserGroupPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupPotenceExWApi.arrQxUserGroupPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxUserGroupPotenceExWApi">
            <summary>
            v用户权限关系(vQxUserGroupPotence)
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserGroupPotenceExWApi.arrvQxUserGroupPotenceObjLst_Cache">
            <summary>
            静态的对象列表,用于缓存,针对记录较少,作为参数表可以使用
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsvQxUserGroupPotenceExWApi.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            (AutoGCLib.WA_AccessEx4CSharp:GeneCode)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            获取唯一性条件串--QxPrjUserRelation4Synch(工程用户关系4同步), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:IpAddress_QxPrjId_UserId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjUserRelation4SynchWApi">
            <summary>
            工程用户关系4同步(QxPrjUserRelation4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelation4SynchWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.DelQxPrjUserRelation4Synchs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.DelQxPrjUserRelation4SynchsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjUserRelation4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN,GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjUserRelation4SynchENS">源对象</param>
            <param name = "objQxPrjUserRelation4SynchENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelation4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjUserRelation4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjUserRelation4Synch">
            <summary>
            工程用户关系4同步(QxPrjUserRelation4Synch)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjUserRelation4Synch.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxServer4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetServerId(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strServerId">服务器Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetServerName(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strServerName">服务器名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetWebApiAddress(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strWebApiAddress">WApi地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetIsSelf(GeneralPlatform.Entity.clsQxServer4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSelf">是否当前服务器</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetInUse(GeneralPlatform.Entity.clsQxServer4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxServer4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.Update(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxServer4SynchEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            获取唯一性条件串--QxServer4Synch(同步服务器), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:ServerName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxServer4SynchEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxServer4SynchEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxServer4SynchEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxServer4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxServer4SynchWApi">
            <summary>
            同步服务器(QxServer4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxServer4SynchWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.BindDdl_ServerId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.BindCbo_ServerId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjByServerId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strServerId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjLstByServerIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrServerId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.DelQxServer4Synchs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.DelQxServer4SynchsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.AddNewRecord(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.UpdateRecord(GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxServer4SynchEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxServer4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.CopyTo(GeneralPlatform.Entity.clsQxServer4SynchEN,GeneralPlatform.Entity.clsQxServer4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxServer4SynchENS">源对象</param>
            <param name = "objQxServer4SynchENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxServer4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxServer4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxServer4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxServer4Synch">
            <summary>
            同步服务器(QxServer4Synch)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxServer4Synch.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.Update(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            获取唯一性条件串--QxUserRoleRelation4Synch(用户角色关系4同步), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:IpAddress_UserId_RoleId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelation4SynchWApi">
            <summary>
            用户角色关系4同步(QxUserRoleRelation4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelation4SynchWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.DelQxUserRoleRelation4Synchs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.DelQxUserRoleRelation4SynchsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserRoleRelation4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.CopyTo(GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN,GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserRoleRelation4SynchENS">源对象</param>
            <param name = "objQxUserRoleRelation4SynchENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelation4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserRoleRelation4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserRoleRelation4Synch">
            <summary>
            用户角色关系4同步(QxUserRoleRelation4Synch)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserRoleRelation4Synch.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelation4SynchWApi">
            <summary>
            v工程用户关系4同步(vQxPrjUserRelation4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN,GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjUserRelation4SynchENS">源对象</param>
            <param name = "objvQxPrjUserRelation4SynchENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelation4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelation4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxViewInfoWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewId(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewName(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewCnName(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewCnName">界面中文名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetFileName(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetFilePath(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strFilePath">文件路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetDefaMenuName(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDefaMenuName">缺省菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewTypeCode(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewTypeCode">界面类型码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetDataBaseName(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseName">数据库名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewFunction(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewFunction">界面功能</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetViewDetail(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewDetail">界面详细信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetModuleId(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strModuleId">模块号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.Update(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxViewInfoEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            获取唯一性条件串--QxViewInfo(界面), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:ViewName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxViewInfoEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxViewInfoEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxViewInfoEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxViewInfoEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxViewInfoEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxViewInfoWApi">
            <summary>
            界面(QxViewInfo)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewInfoWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.BindDdl_ViewId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.BindCbo_ViewId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjByViewId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strViewId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjLstByViewIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrViewId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.DelQxViewInfos(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.DelQxViewInfosByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.AddNewRecord(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.UpdateRecord(GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxViewInfoEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxViewInfoEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.CopyTo(GeneralPlatform.Entity.clsQxViewInfoEN,GeneralPlatform.Entity.clsQxViewInfoEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxViewInfoENS">源对象</param>
            <param name = "objQxViewInfoENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxViewInfoEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewInfoWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxViewInfoEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxViewInfo">
            <summary>
            界面(QxViewInfo)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxViewInfo.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxViewPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetmId(GeneralPlatform.Entity.clsQxViewPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetViewId(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetLevel(GeneralPlatform.Entity.clsQxViewPotenceEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "intLevel">等级</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.Update(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxViewPotenceEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            获取唯一性条件串--QxViewPotence(界面权限), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:ViewId_PotenceId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxViewPotenceEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxViewPotenceEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxViewPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxViewPotenceWApi">
            <summary>
            界面权限(QxViewPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxViewPotenceWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.DelQxViewPotences(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.DelQxViewPotencesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.AddNewRecord(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxViewPotenceEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.UpdateRecord(GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxViewPotenceEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxViewPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.CopyTo(GeneralPlatform.Entity.clsQxViewPotenceEN,GeneralPlatform.Entity.clsQxViewPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxViewPotenceENS">源对象</param>
            <param name = "objQxViewPotenceENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxViewPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxViewPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxViewPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxViewPotence">
            <summary>
            界面权限(QxViewPotence)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxViewPotence.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxViewInfoWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewId(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewCnName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewCnName">界面中文名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetFileName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetFilePath(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strFilePath">文件路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetDefaMenuName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDefaMenuName">缺省菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewTypeCode(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewTypeCode">界面类型码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetDataBaseName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseName">数据库名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewFunction(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewFunction">界面功能</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetViewDetail(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strViewDetail">界面详细信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetModuleId(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strModuleId">模块号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetModuleName(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strModuleName">模块名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxViewInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewInfoEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxViewInfoEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxViewInfoWApi">
            <summary>
            v界面信息(vQxViewInfo)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.BindDdl_ViewId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.BindCbo_ViewId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjByViewId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strViewId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjLstByViewIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrViewId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.CopyTo(GeneralPlatform.Entity.clsvQxViewInfoEN,GeneralPlatform.Entity.clsvQxViewInfoEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxViewInfoENS">源对象</param>
            <param name = "objvQxViewInfoENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxViewInfoEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewInfoWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxViewInfoEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxViewPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetViewId(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetViewName(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetLevel(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "intLevel">等级</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetModuleId(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strModuleId">模块号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetModuleName(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strModuleName">模块名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxViewPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxViewPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxViewPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxViewPotenceWApi">
            <summary>
            v界面权限(vQxViewPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.CopyTo(GeneralPlatform.Entity.clsvQxViewPotenceEN,GeneralPlatform.Entity.clsvQxViewPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxViewPotenceENS">源对象</param>
            <param name = "objvQxViewPotenceENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxViewPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxViewPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxViewPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsErrorInformationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetErrorID(GeneralPlatform.Entity.clsErrorInformationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "lngErrorID">ErrorID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetPageName(GeneralPlatform.Entity.clsErrorInformationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "strPageName">PageName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetFunctionName(GeneralPlatform.Entity.clsErrorInformationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "strFunctionName">FunctionName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetErrorInformation(GeneralPlatform.Entity.clsErrorInformationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "strErrorInformation">ErrorInformation</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetCreateTime(GeneralPlatform.Entity.clsErrorInformationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "strCreateTime">建立时间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.SetUserId(GeneralPlatform.Entity.clsErrorInformationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objErrorInformationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.Update(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objErrorInformationEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            获取唯一性条件串--ErrorInformation(错误), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PageName_FunctionName_UserId_CreateTime
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objErrorInformationEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objErrorInformationEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsErrorInformationEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objErrorInformationEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsErrorInformationWApi">
            <summary>
            错误(ErrorInformation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsErrorInformationWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.CheckPropertyNew(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjByErrorID(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngErrorID">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjLstByErrorIDLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrErrorID">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.DelErrorInformations(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.DelErrorInformationsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.AddNewRecord(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objErrorInformationEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.UpdateRecord(GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.UpdateWithCondition(GeneralPlatform.Entity.clsErrorInformationEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objErrorInformationEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.CopyTo(GeneralPlatform.Entity.clsErrorInformationEN,GeneralPlatform.Entity.clsErrorInformationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objErrorInformationENS">源对象</param>
            <param name = "objErrorInformationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsErrorInformationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsErrorInformationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsErrorInformationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4ErrorInformation">
            <summary>
            错误(ErrorInformation)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4ErrorInformation.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsPageDispModeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.SetPageDispModeENName(GeneralPlatform.Entity.clsPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeENName">页面显示模式英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.SetMemo(GeneralPlatform.Entity.clsPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.Update(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objPageDispModeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objPageDispModeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objPageDispModeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsPageDispModeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objPageDispModeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumPageDispModeWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GP4WApi.enumPageDispModeWA.PopupBox_01">
            <summary>
            弹出框
            </summary>
        </member>
        <member name="F:GP4WApi.enumPageDispModeWA.Right_02">
            <summary>
            右边
            </summary>
        </member>
        <member name="F:GP4WApi.enumPageDispModeWA.Below_03">
            <summary>
            下边
            </summary>
        </member>
        <member name="F:GP4WApi.enumPageDispModeWA.Left_04">
            <summary>
            左边
            </summary>
        </member>
        <member name="F:GP4WApi.enumPageDispModeWA.FullPage_05">
            <summary>
            全页
            </summary>
        </member>
        <member name="T:GP4WApi.clsPageDispModeWApi">
            <summary>
            页面显示模式(PageDispMode)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsPageDispModeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.BindDdl_PageDispModeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjByPageDispModeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPageDispModeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetPageDispModeNameByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetNameByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstByPageDispModeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPageDispModeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstByPageDispModeIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrPageDispModeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.DelPageDispModes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.DelPageDispModesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.AddNewRecord(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.UpdateRecord(GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsPageDispModeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objPageDispModeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.CopyTo(GeneralPlatform.Entity.clsPageDispModeEN,GeneralPlatform.Entity.clsPageDispModeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objPageDispModeENS">源对象</param>
            <param name = "objPageDispModeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsPageDispModeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsPageDispModeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsPageDispModeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4PageDispMode">
            <summary>
            页面显示模式(PageDispMode)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4PageDispMode.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPageDispModeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsQxPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsQxPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPageDispModeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPageDispModeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.Update(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPageDispModeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            获取唯一性条件串--QxPageDispMode(页面显示模式), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PageDispModeName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPageDispModeEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPageDispModeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPageDispModeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPageDispModeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPageDispModeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPageDispModeWApi">
            <summary>
            页面显示模式(QxPageDispMode)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPageDispModeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.BindDdl_PageDispModeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.BindCbo_PageDispModeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjByPageDispModeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPageDispModeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetPageDispModeNameByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetNameByPageDispModeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPageDispModeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstByPageDispModeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPageDispModeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstByPageDispModeIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrPageDispModeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.DelQxPageDispModes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.DelQxPageDispModesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPageDispModeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPageDispModeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.CopyTo(GeneralPlatform.Entity.clsQxPageDispModeEN,GeneralPlatform.Entity.clsQxPageDispModeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPageDispModeENS">源对象</param>
            <param name = "objQxPageDispModeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPageDispModeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPageDispModeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPageDispModeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPageDispMode">
            <summary>
            页面显示模式(QxPageDispMode)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPageDispMode.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjMenuSetWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetMenuSetENName(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetENName">菜单集英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetIsDefault(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefault">是否默认</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            获取唯一性条件串--QxPrjMenuSet(菜单集), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:MenuSetName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjMenuSetEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumQxPrjMenuSetWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0001">
            <summary>
            后台总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0002">
            <summary>
            学生微格维护子菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0003">
            <summary>
            书法教学评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0004">
            <summary>
            普通话教学评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0005">
            <summary>
            微格教学评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0006">
            <summary>
            技能示范与评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0007">
            <summary>
            课例点播与评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0008">
            <summary>
            青教评优教学评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0009">
            <summary>
            职后微格课例添加
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0010">
            <summary>
            职后微格教学评议扩展
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0011">
            <summary>
            学生微格维护
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0012">
            <summary>
            学生板书案例维护
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0013">
            <summary>
            学生普通话案例维护
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0014">
            <summary>
            后台案例维护
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0015">
            <summary>
            课件点播与评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0016">
            <summary>
            课堂教学点播与评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0017">
            <summary>
            后台总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0018">
            <summary>
            教学资源点播与评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0019">
            <summary>
            视频资源库扩展
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0020">
            <summary>
            课件资源库扩展
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0021">
            <summary>
            教学案例资源库扩展
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0022">
            <summary>
            课程教学扩展
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0023">
            <summary>
            总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0024">
            <summary>
            硕士优课评议
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0025">
            <summary>
            后台总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0026">
            <summary>
            后台总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0027">
            <summary>
            Win总菜单
            </summary>
        </member>
        <member name="F:GP4WApi.enumQxPrjMenuSetWA._0028">
            <summary>
            后台Core菜单
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjMenuSetWApi">
            <summary>
            菜单集(QxPrjMenuSet)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjMenuSetWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.BindDdl_MenuSetId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.BindCbo_MenuSetId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjByMenuSetId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuSetId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjByMenuSetIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strMenuSetId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetMenuSetNameByMenuSetIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strMenuSetId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetNameByMenuSetIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strMenuSetId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstByMenuSetIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuSetId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstByMenuSetIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrMenuSetId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.DelQxPrjMenuSets(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.DelQxPrjMenuSetsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjMenuSetEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjMenuSetEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjMenuSetEN,GeneralPlatform.Entity.clsQxPrjMenuSetEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjMenuSetENS">源对象</param>
            <param name = "objQxPrjMenuSetENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjMenuSetEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjMenuSetWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjMenuSetEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjMenuSet">
            <summary>
            菜单集(QxPrjMenuSet)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjMenuSet.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserMenuDetailWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetMenuId(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetMenuName(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetIsDisp(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDisp">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetImgFile(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetIsCustomMenu(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "bolIsCustomMenu">是否定制菜单</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.Update(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            获取唯一性条件串--QxUserMenuDetail(用户菜单), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_MenuId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserMenuDetailEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserMenuDetailWApi">
            <summary>
            用户菜单(QxUserMenuDetail)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenuDetailWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.DelQxUserMenuDetails(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.DelQxUserMenuDetailsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserMenuDetailEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserMenuDetailEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.CopyTo(GeneralPlatform.Entity.clsQxUserMenuDetailEN,GeneralPlatform.Entity.clsQxUserMenuDetailEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserMenuDetailENS">源对象</param>
            <param name = "objQxUserMenuDetailENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserMenuDetailEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenuDetailWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserMenuDetailEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserMenuDetail">
            <summary>
            用户菜单(QxUserMenuDetail)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserMenuDetail.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserMenusWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserMenusEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenusEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenusEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.SetIsUseRoleMenu(GeneralPlatform.Entity.clsQxUserMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsUseRoleMenu">是否使用角色菜单</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.Update(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserMenusEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            获取唯一性条件串--QxUserMenus(用户菜单), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserMenusEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserMenusEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserMenusEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserMenusWApi">
            <summary>
            用户菜单(QxUserMenus)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserMenusWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.DelQxUserMenuss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.DelQxUserMenussByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserMenusEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserMenusEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.CopyTo(GeneralPlatform.Entity.clsQxUserMenusEN,GeneralPlatform.Entity.clsQxUserMenusEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserMenusENS">源对象</param>
            <param name = "objQxUserMenusENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserMenusEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserMenusWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserMenusEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserMenus">
            <summary>
            用户菜单(QxUserMenus)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserMenus.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenuSetWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetIsDefault(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefault">是否默认</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenuSetEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjMenuSetEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenuSetWApi">
            <summary>
            v菜单集(vQxPrjMenuSet)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.BindDdl_MenuSetId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.BindCbo_MenuSetId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjByMenuSetId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuSetId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjLstByMenuSetIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuSetId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjMenuSetEN,GeneralPlatform.Entity.clsvQxPrjMenuSetEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjMenuSetENS">源对象</param>
            <param name = "objvQxPrjMenuSetENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenuSetEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenuSetWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenuSetEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenusWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetTabId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strTabId">表ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetTabName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMenuControlName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuControlName">MenuControlName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetApplicationTypeId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intApplicationTypeId">应用程序类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetApplicationTypeName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strApplicationTypeName">应用程序类型名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetUpMenuName(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuName">上级菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetSubMenusNum(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intSubMenusNum">子菜单数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.SetRoleNum(GeneralPlatform.Entity.clsvQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intRoleNum">角色数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjMenusEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenusWApi">
            <summary>
            v工程菜单(vQxPrjMenus)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.BindDdl_MenuId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.BindCbo_MenuId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjByMenuId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjLstByMenuIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjMenusEN,GeneralPlatform.Entity.clsvQxPrjMenusEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjMenusENS">源对象</param>
            <param name = "objvQxPrjMenusENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenusEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenusWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenusEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_LeafWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuIdLeaf(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuIdLeaf">MenuId_Leaf</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.SetMenuControlName(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_LeafEN">需要设置字段值的实体对象</param>
            <param name = "strMenuControlName">MenuControlName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_LeafWApi">
            <summary>
            v三层菜单(vQxPrjMenus_Leaf)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.BindDdl_MenuIdLeaf(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.BindCbo_MenuIdLeaf(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjByMenuIdLeaf(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuIdLeaf">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjLstByMenuIdLeafLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuIdLeaf">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN,GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjMenus_LeafENS">源对象</param>
            <param name = "objvQxPrjMenus_LeafENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_LeafWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_LeafEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_SubWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuIdSub(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuIdSub">MenuId_Sub</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.SetMenuControlName(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_SubEN">需要设置字段值的实体对象</param>
            <param name = "strMenuControlName">MenuControlName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_SubWApi">
            <summary>
            v子层菜单(vQxPrjMenus_Sub)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.BindDdl_MenuIdSub(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.BindCbo_MenuIdSub(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjByMenuIdSub(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuIdSub">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjLstByMenuIdSubLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuIdSub">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjMenus_SubEN,GeneralPlatform.Entity.clsvQxPrjMenus_SubEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjMenus_SubENS">源对象</param>
            <param name = "objvQxPrjMenus_SubENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_SubEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_SubWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_SubEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_UpWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuIdUp(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuIdUp">MenuId_Up</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.SetMenuControlName(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjMenus_UpEN">需要设置字段值的实体对象</param>
            <param name = "strMenuControlName">MenuControlName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjMenus_UpWApi">
            <summary>
            v顶层菜单(vQxPrjMenus_Up)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.BindDdl_MenuIdUp(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.BindCbo_MenuIdUp(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjByMenuIdUp(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuIdUp">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjLstByMenuIdUpLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuIdUp">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjMenus_UpEN,GeneralPlatform.Entity.clsvQxPrjMenus_UpEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjMenus_UpENS">源对象</param>
            <param name = "objvQxPrjMenus_UpENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_UpEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjMenus_UpWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjMenus_UpEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenusWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMenuId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMenuSetName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetName">菜单集名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetPageDispModeName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeName">页面显示模式名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetUpMenuName(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuName">上级菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetRoleNum(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "intRoleNum">角色数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetIsDisp(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDisp">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxRoleMenusEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenusWApi">
            <summary>
            v角色菜单(vQxRoleMenus)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.CopyTo(GeneralPlatform.Entity.clsvQxRoleMenusEN,GeneralPlatform.Entity.clsvQxRoleMenusEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxRoleMenusENS">源对象</param>
            <param name = "objvQxRoleMenusENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRoleMenusEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenusWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRoleMenusEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenus_SimWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetMenuId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetImgFile(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.SetUpMenuName(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRoleMenus_SimEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuName">上级菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRoleMenus_SimWApi">
            <summary>
            v角色菜单_Sim(vQxRoleMenus_Sim)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.CopyTo(GeneralPlatform.Entity.clsvQxRoleMenus_SimEN,GeneralPlatform.Entity.clsvQxRoleMenus_SimEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxRoleMenus_SimENS">源对象</param>
            <param name = "objvQxRoleMenus_SimENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRoleMenus_SimEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRoleMenus_SimWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRoleMenus_SimEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetMenuId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetMenuId4Win(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId4Win">菜单Id4Win</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjPotenceEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            获取唯一性条件串--QxPrjPotence(工程权限), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PotenceTypeId_PotenceName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjPotenceEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjPotenceEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjPotenceEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjPotenceWApi">
            <summary>
            工程权限(QxPrjPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjPotenceWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.BindDdl_PotenceId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.BindCbo_PotenceId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjByPotenceId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPotenceId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjLstByPotenceIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPotenceId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.DelQxPrjPotences(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.DelQxPrjPotencesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjPotenceEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjPotenceEN,GeneralPlatform.Entity.clsQxPrjPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjPotenceENS">源对象</param>
            <param name = "objQxPrjPotenceENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjPotence">
            <summary>
            工程权限(QxPrjPotence)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjPotence.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetRelaMid(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "lngRelaMid">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetSymbolForProgramme(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolForProgramme">编程标志</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetSymbolName(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolName">标志名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.Update(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            获取唯一性条件串--QxRelaOfPotenceAndSymbol(权限编程标志关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PotenceId_SymbolForProgramme_SymbolName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi">
            <summary>
            权限编程标志关系(QxRelaOfPotenceAndSymbol)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjByRelaMid(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngRelaMid">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjLstByRelaMidLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRelaMid">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.DelQxRelaOfPotenceAndSymbols(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.DelQxRelaOfPotenceAndSymbolsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.AddNewRecord(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.UpdateRecord(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.CopyTo(GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN,GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxRelaOfPotenceAndSymbolENS">源对象</param>
            <param name = "objQxRelaOfPotenceAndSymbolENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxRelaOfPotenceAndSymbolWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRelaOfPotenceAndSymbolEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxRelaOfPotenceAndSymbol">
            <summary>
            权限编程标志关系(QxRelaOfPotenceAndSymbol)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxRelaOfPotenceAndSymbol.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetRelaMid(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "lngRelaMid">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetSymbolForProgramme(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolForProgramme">编程标志</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.SetSymbolName(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolName">标志名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceSymbolForRoleWApi">
            <summary>
            vPotenceSymbolForRole(vQxPotenceSymbolForRole)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.CopyTo(GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN,GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPotenceSymbolForRoleENS">源对象</param>
            <param name = "objvQxPotenceSymbolForRoleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceSymbolForRoleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPotenceSymbolForRoleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetViewId(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetViewName(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPotenceTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPotenceTypeWApi">
            <summary>
            v权限类型(vQxPotenceType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.BindDdl_PotenceTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.BindCbo_PotenceTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjByPotenceTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPotenceTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjLstByPotenceTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPotenceTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.CopyTo(GeneralPlatform.Entity.clsvQxPotenceTypeEN,GeneralPlatform.Entity.clsvQxPotenceTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPotenceTypeENS">源对象</param>
            <param name = "objvQxPotenceTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPotenceTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPotenceTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPotenceTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetMenuId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetUpMenuName(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuName">上级菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.SetSymbolNum(GeneralPlatform.Entity.clsvQxPrjPotenceEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjPotenceEN">需要设置字段值的实体对象</param>
            <param name = "intSymbolNum">标志数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjPotenceWApi">
            <summary>
            v工程权限(vQxPrjPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.BindDdl_PotenceId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.BindCbo_PotenceId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjByPotenceId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPotenceId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjLstByPotenceIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPotenceId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjPotenceEN,GeneralPlatform.Entity.clsvQxPrjPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjPotenceENS">源对象</param>
            <param name = "objvQxPrjPotenceENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetRelaMid(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "lngRelaMid">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetSymbolForProgramme(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolForProgramme">编程标志</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetSymbolName(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolName">标志名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.SetSymbolNum(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolEN">需要设置字段值的实体对象</param>
            <param name = "intSymbolNum">标志数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi">
            <summary>
            v权限编程标志关系(vQxRelaOfPotenceAndSymbol)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjByRelaMid(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngRelaMid">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjLstByRelaMidLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRelaMid">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.CopyTo(GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN,GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxRelaOfPotenceAndSymbolENS">源对象</param>
            <param name = "objvQxRelaOfPotenceAndSymbolENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxRelaOfPotenceAndSymbolWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxRelaOfPotenceAndSymbolEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxCodeTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.SetQxCodeTypeId(GeneralPlatform.Entity.clsQxCodeTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxCodeTypeEN">需要设置字段值的实体对象</param>
            <param name = "strQxCodeTypeId">代码类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.SetCodeTypeName(GeneralPlatform.Entity.clsQxCodeTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxCodeTypeEN">需要设置字段值的实体对象</param>
            <param name = "strCodeTypeName">代码类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxCodeTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxCodeTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.Update(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxCodeTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            获取唯一性条件串--QxCodeType(代码类型), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:CodeTypeName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxCodeTypeEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxCodeTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxCodeTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxCodeTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxCodeTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxCodeTypeWApi">
            <summary>
            代码类型(QxCodeType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxCodeTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.BindDdl_QxCodeTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.BindCbo_QxCodeTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjByQxCodeTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strQxCodeTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjLstByQxCodeTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrQxCodeTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.DelQxCodeTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.DelQxCodeTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxCodeTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxCodeTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.CopyTo(GeneralPlatform.Entity.clsQxCodeTypeEN,GeneralPlatform.Entity.clsQxCodeTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxCodeTypeENS">源对象</param>
            <param name = "objQxCodeTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxCodeTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxCodeTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxCodeTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxCodeType">
            <summary>
            代码类型(QxCodeType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxCodeType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjFileRelaWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetmId(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetFileName(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetFilePath(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strFilePath">文件路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetIsNeedDownLoad(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "bolIsNeedDownLoad">是否需要下载</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetVersion(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strVersion">版本</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            获取唯一性条件串--QxPrjFileRela(项目相关文件), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:QxPrjId_FileName_FilePath
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjFileRelaEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjFileRelaWApi">
            <summary>
            项目相关文件(QxPrjFileRela)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjFileRelaWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.DelQxPrjFileRelas(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.DelQxPrjFileRelasByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjFileRelaEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjFileRelaEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjFileRelaEN,GeneralPlatform.Entity.clsQxPrjFileRelaEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjFileRelaENS">源对象</param>
            <param name = "objQxPrjFileRelaENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjFileRelaEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjFileRelaWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjFileRelaEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjFileRela">
            <summary>
            项目相关文件(QxPrjFileRela)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjFileRela.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjSite4DownLoadWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetPrjSiteId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteId">工程站点Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetPrjSiteName(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteName">工程站点名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetFtpServer(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpServer">Ftp服务器</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetFtpUserId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserId">Ftp用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetFtpUserPassword(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserPassword">Ftp用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            获取唯一性条件串--QxPrjSite4DownLoad(文件下载站点), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PrjSiteName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjSite4DownLoadWApi">
            <summary>
            文件下载站点(QxPrjSite4DownLoad)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjSite4DownLoadWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.BindDdl_PrjSiteId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.BindCbo_PrjSiteId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjByPrjSiteId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPrjSiteId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjLstByPrjSiteIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPrjSiteId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.DelQxPrjSite4DownLoads(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.DelQxPrjSite4DownLoadsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjSite4DownLoadEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN,GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjSite4DownLoadENS">源对象</param>
            <param name = "objQxPrjSite4DownLoadENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjSite4DownLoadWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjSite4DownLoadEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjSite4DownLoad">
            <summary>
            文件下载站点(QxPrjSite4DownLoad)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjSite4DownLoad.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetUserDownLoadLogId(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserDownLoadLogId">用户下载日志Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetFileName(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetVersion(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strVersion">版本</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetIsSuccess(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSuccess">是否成功</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetLogInfo(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strLogInfo">日志信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.Update(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            获取唯一性条件串--QxUserDownLoadDetailLog(用户下载日志细节), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserDownLoadLogId_FileName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadDetailLogWApi">
            <summary>
            用户下载日志细节(QxUserDownLoadDetailLog)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadDetailLogWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.DelQxUserDownLoadDetailLogs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.DelQxUserDownLoadDetailLogsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserDownLoadDetailLogEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.CopyTo(GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN,GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserDownLoadDetailLogENS">源对象</param>
            <param name = "objQxUserDownLoadDetailLogENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadDetailLogWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserDownLoadDetailLogEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserDownLoadDetailLog">
            <summary>
            用户下载日志细节(QxUserDownLoadDetailLog)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserDownLoadDetailLog.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadLogWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetUserDownLoadLogId(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserDownLoadLogId">用户下载日志Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetPrjSiteId(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteId">工程站点Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetDownLownDate(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strDownLownDate">下载日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetIsSuccess(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSuccess">是否成功</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetLogInfo(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strLogInfo">日志信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.Update(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            获取唯一性条件串--QxUserDownLoadLog(用户下载日志), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_PrjSiteId_DownLownDate
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserDownLoadLogEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserDownLoadLogWApi">
            <summary>
            用户下载日志(QxUserDownLoadLog)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserDownLoadLogWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjByUserDownLoadLogId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserDownLoadLogId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjLstByUserDownLoadLogIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserDownLoadLogId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.DelQxUserDownLoadLogs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.DelQxUserDownLoadLogsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserDownLoadLogEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.CopyTo(GeneralPlatform.Entity.clsQxUserDownLoadLogEN,GeneralPlatform.Entity.clsQxUserDownLoadLogEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserDownLoadLogENS">源对象</param>
            <param name = "objQxUserDownLoadLogENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserDownLoadLogEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserDownLoadLogWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserDownLoadLogEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserDownLoadLog">
            <summary>
            用户下载日志(QxUserDownLoadLog)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserDownLoadLog.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjFileRelaWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetFileName(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetVersion(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strVersion">版本</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetFilePath(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strFilePath">文件路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetIsNeedDownLoad(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "bolIsNeedDownLoad">是否需要下载</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjFileRelaEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjFileRelaEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjFileRelaWApi">
            <summary>
            v项目相关文件(vQxPrjFileRela)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjFileRelaEN,GeneralPlatform.Entity.clsvQxPrjFileRelaEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjFileRelaENS">源对象</param>
            <param name = "objvQxPrjFileRelaENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjFileRelaEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjFileRelaWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjFileRelaEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetPrjSiteId(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteId">工程站点Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetPrjSiteName(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteName">工程站点名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetFtpServer(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpServer">Ftp服务器</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetFtpUserId(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserId">Ftp用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetFtpUserPassword(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserPassword">Ftp用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjSite4DownLoadEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjSite4DownLoadWApi">
            <summary>
            v文件下载站点(vQxPrjSite4DownLoad)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjByPrjSiteId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPrjSiteId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjLstByPrjSiteIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPrjSiteId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN,GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjSite4DownLoadENS">源对象</param>
            <param name = "objvQxPrjSite4DownLoadENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjSite4DownLoadWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjSite4DownLoadEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsDataBaseTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.SetDataBaseTypeId(GeneralPlatform.Entity.clsDataBaseTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objDataBaseTypeEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseTypeId">数据库类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.SetDataBaseTypeName(GeneralPlatform.Entity.clsDataBaseTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objDataBaseTypeEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseTypeName">数据库类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsDataBaseTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objDataBaseTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.Update(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objDataBaseTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objDataBaseTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objDataBaseTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsDataBaseTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objDataBaseTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsDataBaseTypeWApi">
            <summary>
            数据库类型(DataBaseType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsDataBaseTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.BindDdl_DataBaseTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.BindCbo_DataBaseTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjByDataBaseTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strDataBaseTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjByDataBaseTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strDataBaseTypeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetDataBaseTypeNameByDataBaseTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDataBaseTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetNameByDataBaseTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDataBaseTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstByDataBaseTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrDataBaseTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstByDataBaseTypeIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrDataBaseTypeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.DelDataBaseTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.DelDataBaseTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsDataBaseTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objDataBaseTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.CopyTo(GeneralPlatform.Entity.clsDataBaseTypeEN,GeneralPlatform.Entity.clsDataBaseTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objDataBaseTypeENS">源对象</param>
            <param name = "objDataBaseTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsDataBaseTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsDataBaseTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsDataBaseTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4DataBaseType">
            <summary>
            数据库类型(DataBaseType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4DataBaseType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxFuncModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxFuncModuleEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetInUse(GeneralPlatform.Entity.clsQxFuncModuleEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.Update(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxFuncModuleEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxFuncModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxFuncModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxFuncModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxFuncModuleWApi">
            <summary>
            功能模块(QxFuncModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModuleWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.BindDdl_FuncModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.BindCbo_FuncModuleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjByFuncModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjByFuncModuleIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strFuncModuleId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetFuncModuleNameByFuncModuleIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strFuncModuleId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetNameByFuncModuleIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strFuncModuleId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstByFuncModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstByFuncModuleIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrFuncModuleId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.DelQxFuncModules(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.DelQxFuncModulesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.AddNewRecord(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.UpdateRecord(GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxFuncModuleEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxFuncModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.CopyTo(GeneralPlatform.Entity.clsQxFuncModuleEN,GeneralPlatform.Entity.clsQxFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxFuncModuleENS">源对象</param>
            <param name = "objQxFuncModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxFuncModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxFuncModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxFuncModule">
            <summary>
            功能模块(QxFuncModule)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxFuncModule.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxFuncModule_AgcWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetFuncModuleAgcId(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleAgcId">功能模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetUseStateId(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateId">UseStateId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.SetSynchDate(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strSynchDate">同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.Update(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxFuncModule_AgcWApi">
            <summary>
            功能模块_Agc(QxFuncModule_Agc)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxFuncModule_AgcWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.BindDdl_FuncModuleAgcId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.BindCbo_FuncModuleAgcId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjByFuncModuleAgcId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleAgcId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjLstByFuncModuleAgcIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleAgcId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.DelQxFuncModule_Agcs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.DelQxFuncModule_AgcsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.AddNewRecord(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.UpdateRecord(GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxFuncModule_AgcEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.CopyTo(GeneralPlatform.Entity.clsQxFuncModule_AgcEN,GeneralPlatform.Entity.clsQxFuncModule_AgcEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxFuncModule_AgcENS">源对象</param>
            <param name = "objQxFuncModule_AgcENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxFuncModule_AgcEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxFuncModule_AgcWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxFuncModule_AgcEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxFuncModule_Agc">
            <summary>
            功能模块_Agc(QxFuncModule_Agc)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxFuncModule_Agc.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjDataBaseWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetQxPrjDataBaseId(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjDataBaseId">项目数据库Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetPrjDataBaseName(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strPrjDataBaseName">项目数据库名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetDataBaseName(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseName">数据库名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetDatabaseOwner(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDatabaseOwner">数据库拥有者</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetDataBasePwd(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBasePwd">数据库用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetDataBaseTypeId(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseTypeId">数据库类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetDataBaseUserId(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseUserId">数据库用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetSID(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strSID">SID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetTableSpace(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strTableSpace">表空间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            获取唯一性条件串--QxPrjDataBase(数据库对象), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PrjDataBaseName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjDataBaseEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjDataBaseWApi">
            <summary>
            数据库对象(QxPrjDataBase)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjDataBaseWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.BindDdl_QxPrjDataBaseId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.BindCbo_QxPrjDataBaseId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjByQxPrjDataBaseId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strQxPrjDataBaseId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjByQxPrjDataBaseIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strQxPrjDataBaseId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetPrjDataBaseNameByQxPrjDataBaseIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strQxPrjDataBaseId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetNameByQxPrjDataBaseIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strQxPrjDataBaseId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstByQxPrjDataBaseIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrQxPrjDataBaseId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstByQxPrjDataBaseIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrQxPrjDataBaseId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.DelQxPrjDataBases(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.DelQxPrjDataBasesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjDataBaseEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjDataBaseEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjDataBaseEN,GeneralPlatform.Entity.clsQxPrjDataBaseEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjDataBaseENS">源对象</param>
            <param name = "objQxPrjDataBaseENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjDataBaseEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjDataBaseWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjDataBaseEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjDataBase">
            <summary>
            数据库对象(QxPrjDataBase)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjDataBase.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.SetModuleId(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strModuleId">模块号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.SetModuleName(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strModuleName">模块名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjModuleEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            获取唯一性条件串--QxPrjModule(项目模块), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:ModuleName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjModuleEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjModuleWApi">
            <summary>
            项目模块(QxPrjModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjModuleWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.BindDdl_ModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.BindCbo_ModuleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjByModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjLstByModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.DelQxPrjModules(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.DelQxPrjModulesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjModuleEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjModuleEN,GeneralPlatform.Entity.clsQxPrjModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjModuleENS">源对象</param>
            <param name = "objQxPrjModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjModule">
            <summary>
            项目模块(QxPrjModule)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjModule.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxProjectsWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetPrjName(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetPrjDomain(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strPrjDomain">工程域名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetIsDefaultPrj(GeneralPlatform.Entity.clsQxProjectsEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefaultPrj">是否默认工程</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetQxPrjDataBaseId(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjDataBaseId">项目数据库Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxProjectsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxProjectsEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.Update(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxProjectsEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            获取唯一性条件串--QxProjects(工程), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PrjName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxProjectsEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxProjectsEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxProjectsEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxProjectsEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxProjectsEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxProjectsWApi">
            <summary>
            工程(QxProjects)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxProjectsWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.BindDdl_QxPrjId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.BindCbo_QxPrjId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjByQxPrjId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strQxPrjId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjByQxPrjIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strQxPrjId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetPrjNameByQxPrjIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strQxPrjId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetNameByQxPrjIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strQxPrjId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstByQxPrjIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrQxPrjId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstByQxPrjIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrQxPrjId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.DelQxProjectss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.DelQxProjectssByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.AddNewRecord(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.UpdateRecord(GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxProjectsEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxProjectsEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.CopyTo(GeneralPlatform.Entity.clsQxProjectsEN,GeneralPlatform.Entity.clsQxProjectsEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxProjectsENS">源对象</param>
            <param name = "objQxProjectsENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxProjectsEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxProjectsWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxProjectsEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxProjects">
            <summary>
            工程(QxProjects)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxProjects.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxFuncModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModuleWApi">
            <summary>
            v功能模块(vQxFuncModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.BindDdl_FuncModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.BindCbo_FuncModuleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjByFuncModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjLstByFuncModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.CopyTo(GeneralPlatform.Entity.clsvQxFuncModuleEN,GeneralPlatform.Entity.clsvQxFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxFuncModuleENS">源对象</param>
            <param name = "objvQxFuncModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxFuncModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxFuncModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModule_AgcWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetUseStateName(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateName">使用状态名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetFuncModuleAgcId(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleAgcId">功能模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetUseStateId(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateId">UseStateId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxFuncModule_AgcEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxFuncModule_AgcWApi">
            <summary>
            v功能模块_Agc(vQxFuncModule_Agc)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjByFuncModuleAgcId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleAgcId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjLstByFuncModuleAgcIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleAgcId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.CopyTo(GeneralPlatform.Entity.clsvQxFuncModule_AgcEN,GeneralPlatform.Entity.clsvQxFuncModule_AgcEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxFuncModule_AgcENS">源对象</param>
            <param name = "objvQxFuncModule_AgcENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxFuncModule_AgcEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxFuncModule_AgcWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxFuncModule_AgcEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjDataBaseWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetQxPrjDataBaseId(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjDataBaseId">项目数据库Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetPrjDataBaseName(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strPrjDataBaseName">项目数据库名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDataBaseUserId(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseUserId">数据库用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDataBasePwd(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBasePwd">数据库用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDataBaseName(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseName">数据库名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDataBaseTypeName(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseTypeName">数据库类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDataBaseTypeId(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDataBaseTypeId">数据库类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetDatabaseOwner(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strDatabaseOwner">数据库拥有者</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetTableSpace(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strTableSpace">表空间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetSID(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strSID">SID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjDataBaseEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjDataBaseEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjDataBaseWApi">
            <summary>
            v数据库对象(vQxPrjDataBase)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.BindDdl_QxPrjDataBaseId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.BindCbo_QxPrjDataBaseId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjByQxPrjDataBaseId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strQxPrjDataBaseId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjLstByQxPrjDataBaseIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrQxPrjDataBaseId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjDataBaseEN,GeneralPlatform.Entity.clsvQxPrjDataBaseEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjDataBaseENS">源对象</param>
            <param name = "objvQxPrjDataBaseENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjDataBaseEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjDataBaseWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjDataBaseEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.SetModuleId(GeneralPlatform.Entity.clsvQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strModuleId">模块号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.SetModuleName(GeneralPlatform.Entity.clsvQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strModuleName">模块名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjModuleEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjModuleWApi">
            <summary>
            v项目模块(vQxPrjModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.BindDdl_ModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.BindCbo_ModuleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjByModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjLstByModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjModuleEN,GeneralPlatform.Entity.clsvQxPrjModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjModuleENS">源对象</param>
            <param name = "objvQxPrjModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsFuncModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsFuncModuleEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetPrjId(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strPrjId">工程ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetUseStateId(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateId">UseStateId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.SetMemo(GeneralPlatform.Entity.clsFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.Update(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objFuncModuleEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objFuncModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objFuncModuleEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsFuncModuleEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objFuncModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsFuncModuleWApi">
            <summary>
            功能模块(FuncModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsFuncModuleWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.BindDdl_FuncModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.BindCbo_FuncModuleId(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
            <param name = "strPrjId"></param>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.CheckPropertyNew(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjByFuncModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjLstByFuncModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.DelFuncModules(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.DelFuncModulesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.AddNewRecord(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.UpdateRecord(GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.UpdateWithCondition(GeneralPlatform.Entity.clsFuncModuleEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objFuncModuleEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.CopyTo(GeneralPlatform.Entity.clsFuncModuleEN,GeneralPlatform.Entity.clsFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objFuncModuleENS">源对象</param>
            <param name = "objFuncModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsFuncModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsFuncModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsFuncModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4FuncModule">
            <summary>
            功能模块(FuncModule)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4FuncModule.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvFuncModuleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetFuncModuleNameSim(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleNameSim">模块名_Sim</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvFuncModuleEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetPrjId(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strPrjId">工程ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetUseStateId(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateId">UseStateId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetUseStateName(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUseStateName">使用状态名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.SetMemo(GeneralPlatform.Entity.clsvFuncModuleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvFuncModuleEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvFuncModuleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvFuncModuleWApi">
            <summary>
            v功能模块(vFuncModule)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.BindDdl_FuncModuleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.BindCbo_FuncModuleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjByFuncModuleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strFuncModuleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjLstByFuncModuleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrFuncModuleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.CopyTo(GeneralPlatform.Entity.clsvFuncModuleEN,GeneralPlatform.Entity.clsvFuncModuleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvFuncModuleENS">源对象</param>
            <param name = "objvFuncModuleENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvFuncModuleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvFuncModuleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvFuncModuleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxApplicationTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetApplicationTypeId(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "intApplicationTypeId">应用程序类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetApplicationTypeName(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strApplicationTypeName">应用程序类型名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetApplicationTypeENName(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strApplicationTypeENName">应用类型英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetProgLangTypeId(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strProgLangTypeId">编程语言类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetProgLangTypeId2(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strProgLangTypeId2">编程语言类型Id2</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetProgLangTypeId3(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strProgLangTypeId3">编程语言类型Id3</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetProgLangTypeId4(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strProgLangTypeId4">编程语言类型Id4</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetProgLangTypeId5(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strProgLangTypeId5">编程语言类型Id5</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxApplicationTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.Update(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxApplicationTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            获取唯一性条件串--QxApplicationType(应用程序类型), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:ApplicationTypeName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxApplicationTypeEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxApplicationTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxApplicationTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumQxApplicationType">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxApplicationTypeWApi">
            <summary>
            应用程序类型(QxApplicationType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxApplicationTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.BindDdl_ApplicationTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.BindCbo_ApplicationTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjByApplicationTypeId(System.Int32)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "intApplicationTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjByApplicationTypeIdCache(System.Int32)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "intApplicationTypeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetApplicationTypeNameByApplicationTypeIdCache(System.Int32)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "intApplicationTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetNameByApplicationTypeIdCache(System.Int32)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "intApplicationTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstByApplicationTypeIdLst(System.Collections.Generic.List{System.Int32})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrApplicationTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstByApplicationTypeIdLstCache(System.Collections.Generic.List{System.Int32})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrApplicationTypeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.DelRecord(System.Int32)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.DelQxApplicationTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.DelQxApplicationTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxApplicationTypeEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxApplicationTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxApplicationTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.IsExist(System.Int32)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.CopyTo(GeneralPlatform.Entity.clsQxApplicationTypeEN,GeneralPlatform.Entity.clsQxApplicationTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxApplicationTypeENS">源对象</param>
            <param name = "objQxApplicationTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxApplicationTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxApplicationTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxApplicationTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxApplicationType">
            <summary>
            应用程序类型(QxApplicationType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxApplicationType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsQxDepartmentTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsQxDepartmentTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxDepartmentTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.Update(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxDepartmentTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentTypeWApi">
            <summary>
            部门类型(QxDepartmentType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.BindDdl_DepartmentTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.BindCbo_DepartmentTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjByDepartmentTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strDepartmentTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjByDepartmentTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strDepartmentTypeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetDepartmentTypeNameByDepartmentTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDepartmentTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetNameByDepartmentTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDepartmentTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstByDepartmentTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrDepartmentTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstByDepartmentTypeIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrDepartmentTypeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.DelQxDepartmentTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.DelQxDepartmentTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxDepartmentTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxDepartmentTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.CopyTo(GeneralPlatform.Entity.clsQxDepartmentTypeEN,GeneralPlatform.Entity.clsQxDepartmentTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxDepartmentTypeENS">源对象</param>
            <param name = "objQxDepartmentTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxDepartmentTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxDepartmentTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxDepartmentType">
            <summary>
            部门类型(QxDepartmentType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxDepartmentType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSubjectTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.SetSubjectTypeId(GeneralPlatform.Entity.clsSubjectTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectTypeEN">需要设置字段值的实体对象</param>
            <param name = "strSubjectTypeId">学科类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.SetSubjectTypeName(GeneralPlatform.Entity.clsSubjectTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectTypeEN">需要设置字段值的实体对象</param>
            <param name = "strSubjectTypeName">学科类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsSubjectTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.Update(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objSubjectTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objSubjectTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objSubjectTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsSubjectTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objSubjectTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsSubjectTypeWApi">
            <summary>
            学科类型(SubjectType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.BindDdl_SubjectTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.BindCbo_SubjectTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjBySubjectTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strSubjectTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjLstBySubjectTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrSubjectTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.DelSubjectTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.DelSubjectTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsSubjectTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objSubjectTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.CopyTo(GeneralPlatform.Entity.clsSubjectTypeEN,GeneralPlatform.Entity.clsSubjectTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objSubjectTypeENS">源对象</param>
            <param name = "objSubjectTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsSubjectTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsSubjectTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4SubjectType">
            <summary>
            学科类型(SubjectType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4SubjectType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsTSysParaWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetmId(GeneralPlatform.Entity.clsTSysParaEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetSysParaName(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strSysParaName">系统参数名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetSysParaValue(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strSysParaValue">系统参数值</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetIdSchool(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strIdSchool">学校流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetSchoolId(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolId">学校Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetModifyDate(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strModifyDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetModifyUser(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strModifyUser">ModifyUser</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.SetMemo(GeneralPlatform.Entity.clsTSysParaEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTSysParaEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.Update(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objTSysParaEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            获取唯一性条件串--TSysPara(系统参数), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:id_School_SysParaName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objTSysParaEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objTSysParaEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsTSysParaEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objTSysParaEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsTSysParaWApi">
            <summary>
            系统参数(TSysPara)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTSysParaWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.CheckPropertyNew(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjBymIdCache(System.Int64)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "lngmId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstByMIdLstCache(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrMId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.DelTSysParas(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.DelTSysParasByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.AddNewRecord(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objTSysParaEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.UpdateRecord(GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.UpdateWithCondition(GeneralPlatform.Entity.clsTSysParaEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objTSysParaEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.CopyTo(GeneralPlatform.Entity.clsTSysParaEN,GeneralPlatform.Entity.clsTSysParaEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objTSysParaENS">源对象</param>
            <param name = "objTSysParaENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsTSysParaEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTSysParaWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsTSysParaEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4TSysPara">
            <summary>
            系统参数(TSysPara)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4TSysPara.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsExportExcel4UsersWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetmId(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetIdExportExcel4Users(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdExportExcel4Users">导出Excel用户字段流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetFieldName(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strFieldName">字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetFieldCnName(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strFieldCnName">字段中文名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetIsExport(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsExport">是否导出</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetMemo(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetUserId(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.SetViewName(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.Update(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objExportExcel4UsersEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            获取唯一性条件串--ExportExcel4Users(导出Excel用户字段), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:id_ExportExcel4Users_FieldName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objExportExcel4UsersEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objExportExcel4UsersEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objExportExcel4UsersEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsExportExcel4UsersWApi">
            <summary>
            导出Excel用户字段(ExportExcel4Users)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcel4UsersWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.CheckPropertyNew(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.DelExportExcel4Userss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.DelExportExcel4UserssByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.AddNewRecord(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objExportExcel4UsersEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.UpdateRecord(GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.UpdateWithCondition(GeneralPlatform.Entity.clsExportExcel4UsersEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objExportExcel4UsersEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.CopyTo(GeneralPlatform.Entity.clsExportExcel4UsersEN,GeneralPlatform.Entity.clsExportExcel4UsersEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objExportExcel4UsersENS">源对象</param>
            <param name = "objExportExcel4UsersENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsExportExcel4UsersEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcel4UsersWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsExportExcel4UsersEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4ExportExcel4Users">
            <summary>
            导出Excel用户字段(ExportExcel4Users)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4ExportExcel4Users.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsExportExcelSetWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetIdExportExcel4Users(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strIdExportExcel4Users">导出Excel用户字段流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetViewName(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetTabName(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetUserId(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetIsDefaultUser(GeneralPlatform.Entity.clsExportExcelSetEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefaultUser">是否缺省用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetExportFileName(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strExportFileName">导出文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.SetMemo(GeneralPlatform.Entity.clsExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.Update(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objExportExcelSetEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            获取唯一性条件串--ExportExcelSet(导出Excel设置), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_ViewName_TabName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objExportExcelSetEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objExportExcelSetEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objExportExcelSetEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsExportExcelSetEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objExportExcelSetEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsExportExcelSetWApi">
            <summary>
            导出Excel设置(ExportExcelSet)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsExportExcelSetWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.CheckPropertyNew(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjByIdExportExcel4Users(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strIdExportExcel4Users">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjLstByIdExportExcel4UsersLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrIdExportExcel4Users">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.DelExportExcelSets(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.DelExportExcelSetsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.AddNewRecord(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.UpdateRecord(GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.UpdateWithCondition(GeneralPlatform.Entity.clsExportExcelSetEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objExportExcelSetEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.CopyTo(GeneralPlatform.Entity.clsExportExcelSetEN,GeneralPlatform.Entity.clsExportExcelSetEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objExportExcelSetENS">源对象</param>
            <param name = "objExportExcelSetENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsExportExcelSetEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsExportExcelSetWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsExportExcelSetEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4ExportExcelSet">
            <summary>
            导出Excel设置(ExportExcelSet)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4ExportExcelSet.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserCodePathWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserCodePathEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetQxCodeTypeId(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strQxCodeTypeId">代码类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetCodePath(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strCodePath">代码路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetCodePathBackup(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strCodePathBackup">备份代码路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetIsTemplate(GeneralPlatform.Entity.clsQxUserCodePathEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "bolIsTemplate">是否模板</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.SetIsGeneReport(GeneralPlatform.Entity.clsQxUserCodePathEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "bolIsGeneReport">IsGeneReport</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.Update(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserCodePathEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            获取唯一性条件串--QxUserCodePath(用户生成路径), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:QxPrjId_UserId_QxCodeTypeId_CodePath
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserCodePathEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserCodePathEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserCodePathEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserCodePathWApi">
            <summary>
            用户生成路径(QxUserCodePath)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserCodePathWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.DelQxUserCodePaths(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.DelQxUserCodePathsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserCodePathEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserCodePathEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserCodePathEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.CopyTo(GeneralPlatform.Entity.clsQxUserCodePathEN,GeneralPlatform.Entity.clsQxUserCodePathEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserCodePathENS">源对象</param>
            <param name = "objQxUserCodePathENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserCodePathEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserCodePathWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserCodePathEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserCodePath">
            <summary>
            用户生成路径(QxUserCodePath)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserCodePath.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSetFieldVisibilityWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetmId(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetIdSchool(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strIdSchool">学校流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetViewName(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetFieldName(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strFieldName">字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetCtrlType(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strCtrlType">控件类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetMemo(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.SetCaption(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strCaption">Caption</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.Update(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            获取唯一性条件串--SetFieldVisibility(设置字段可视性), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:id_School_ViewName_FieldName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objSetFieldVisibilityEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsSetFieldVisibilityWApi">
            <summary>
            设置字段可视性(SetFieldVisibility)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSetFieldVisibilityWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.CheckPropertyNew(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.DelSetFieldVisibilitys(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.DelSetFieldVisibilitysByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.AddNewRecord(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.UpdateRecord(GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.UpdateWithCondition(GeneralPlatform.Entity.clsSetFieldVisibilityEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objSetFieldVisibilityEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.CopyTo(GeneralPlatform.Entity.clsSetFieldVisibilityEN,GeneralPlatform.Entity.clsSetFieldVisibilityEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objSetFieldVisibilityENS">源对象</param>
            <param name = "objSetFieldVisibilityENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsSetFieldVisibilityEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSetFieldVisibilityWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsSetFieldVisibilityEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4SetFieldVisibility">
            <summary>
            设置字段可视性(SetFieldVisibility)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4SetFieldVisibility.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvExportExcel4UsersWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetmId(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetIdExportExcel4Users(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdExportExcel4Users">导出Excel用户字段流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetViewName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetTabName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetIsDefaultUser(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefaultUser">是否缺省用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetUserId(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetUserName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetExportFileName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strExportFileName">导出文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetFieldName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strFieldName">字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetFieldCnName(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strFieldCnName">字段中文名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetIsExport(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsExport">是否导出</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.SetMemo(GeneralPlatform.Entity.clsvExportExcel4UsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcel4UsersEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvExportExcel4UsersEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvExportExcel4UsersWApi">
            <summary>
            v导出Excel用户字段(vExportExcel4Users)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.CopyTo(GeneralPlatform.Entity.clsvExportExcel4UsersEN,GeneralPlatform.Entity.clsvExportExcel4UsersEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvExportExcel4UsersENS">源对象</param>
            <param name = "objvExportExcel4UsersENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvExportExcel4UsersEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcel4UsersWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvExportExcel4UsersEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvExportExcelSetWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetIdExportExcel4Users(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strIdExportExcel4Users">导出Excel用户字段流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetViewName(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetTabName(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetIsDefaultUser(GeneralPlatform.Entity.clsvExportExcelSetEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefaultUser">是否缺省用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetUserName(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetExportFileName(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strExportFileName">导出文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetMemo(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetUserId(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.SetViewTabName(GeneralPlatform.Entity.clsvExportExcelSetEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvExportExcelSetEN">需要设置字段值的实体对象</param>
            <param name = "strViewTabName">ViewTabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvExportExcelSetEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvExportExcelSetWApi">
            <summary>
            v导出Excel设置(vExportExcelSet)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.BindDdl_IdExportExcel4Users(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.BindCbo_IdExportExcel4Users(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjByIdExportExcel4Users(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strIdExportExcel4Users">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjLstByIdExportExcel4UsersLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrIdExportExcel4Users">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.CopyTo(GeneralPlatform.Entity.clsvExportExcelSetEN,GeneralPlatform.Entity.clsvExportExcelSetEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvExportExcelSetENS">源对象</param>
            <param name = "objvExportExcelSetENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvExportExcelSetEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvExportExcelSetWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvExportExcelSetEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvSetFieldVisibilityWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetmId(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetIdSchool(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strIdSchool">学校流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetSchoolId(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolId">学校Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetSchoolName(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolName">学校名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetViewName(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strViewName">界面名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetCtrlType(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strCtrlType">控件类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetFieldName(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strFieldName">字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.SetMemo(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSetFieldVisibilityEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvSetFieldVisibilityEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvSetFieldVisibilityWApi">
            <summary>
            v设置字段可视性(vSetFieldVisibility)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.CopyTo(GeneralPlatform.Entity.clsvSetFieldVisibilityEN,GeneralPlatform.Entity.clsvSetFieldVisibilityEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvSetFieldVisibilityENS">源对象</param>
            <param name = "objvSetFieldVisibilityENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvSetFieldVisibilityEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSetFieldVisibilityWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvSetFieldVisibilityEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsXzSchoolWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetIdSchool(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdSchool">学校流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetSchoolId(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolId">学校Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetSchoolName(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolName">学校名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetSchoolNameA(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolNameA">学校简称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetSchoolENName(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolENName">学校英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetSchoolTypeId(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolTypeId">学校类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetIsCurrentUse(GeneralPlatform.Entity.clsXzSchoolEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "bolIsCurrentUse">是否当前使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.SetMemo(GeneralPlatform.Entity.clsXzSchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzSchoolEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.Update(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objXzSchoolEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objXzSchoolEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objXzSchoolEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsXzSchoolEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objXzSchoolEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumXzSchoolWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0001">
            <summary>
            淮阴师范学院
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0002">
            <summary>
            上海师范大学
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0003">
            <summary>
            温州大学
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0004">
            <summary>
            宁波大学
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0005">
            <summary>
            淮阴师范测试
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0006">
            <summary>
            江苏二师
            </summary>
        </member>
        <member name="F:GP4WApi.enumXzSchoolWA._0007">
            <summary>
            上海泰泽
            </summary>
        </member>
        <member name="T:GP4WApi.clsXzSchoolWApi">
            <summary>
            学校(XzSchool)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsXzSchoolWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.BindDdl_IdSchool(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.BindCbo_IdSchool(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.CheckPropertyNew(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjByIdSchool(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strIdSchool">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjLstByIdSchoolLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrIdSchool">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.DelXzSchools(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.DelXzSchoolsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.AddNewRecord(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.UpdateRecord(GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.UpdateWithCondition(GeneralPlatform.Entity.clsXzSchoolEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objXzSchoolEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.CopyTo(GeneralPlatform.Entity.clsXzSchoolEN,GeneralPlatform.Entity.clsXzSchoolEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objXzSchoolENS">源对象</param>
            <param name = "objXzSchoolENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsXzSchoolEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsXzSchoolWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsXzSchoolEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4XzSchool">
            <summary>
            学校(XzSchool)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4XzSchool.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjTabWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetTabId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabId">表ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetTabName(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetTabCnName(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabCnName">表中文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetSQLDSTypeId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strSQLDSTypeId">数据源类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetTabStateId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateId">表状态ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetIsParaTab(GeneralPlatform.Entity.clsQxPrjTabEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "bolIsParaTab">是否参数表</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetFuncModuleAgcId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleAgcId">功能模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetOwner(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strOwner">拥有者</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetKeyword(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyword">关键字</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetTabTypeId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabTypeId">表类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetRelaViewId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strRelaViewId">RelaViewId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetPrimaryTypeId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strPrimaryTypeId">主键类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetPrimaryTypeName(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strPrimaryTypeName">主键类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetKeyFldId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyFldId">关键字段Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetKeyFldName(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyFldName">关键字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.SetSynchDate(GeneralPlatform.Entity.clsQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strSynchDate">同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjTabEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            获取唯一性条件串--QxPrjTab(工程表), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:TabName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjTabEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjTabEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjTabEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjTabEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjTabEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjTabWApi">
            <summary>
            工程表(QxPrjTab)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjTabWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.BindDdl_TabId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.BindCbo_TabId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjByTabId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strTabId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjLstByTabIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrTabId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.DelQxPrjTabs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.DelQxPrjTabsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjTabEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjTabEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjTabEN,GeneralPlatform.Entity.clsQxPrjTabEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjTabENS">源对象</param>
            <param name = "objQxPrjTabENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjTabEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjTabWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjTabEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjTab">
            <summary>
            工程表(QxPrjTab)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjTab.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSQLDSTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.SetSQLDSTypeId(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSQLDSTypeEN">需要设置字段值的实体对象</param>
            <param name = "strSQLDSTypeId">数据源类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.SetSqlDsTypeName(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSQLDSTypeEN">需要设置字段值的实体对象</param>
            <param name = "strSqlDsTypeName">Sql数据源名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.SetSqlDsTypeENName(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSQLDSTypeEN">需要设置字段值的实体对象</param>
            <param name = "strSqlDsTypeENName">Sql数据源英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSQLDSTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.Update(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objSQLDSTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objSQLDSTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objSQLDSTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objSQLDSTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumSQLDSTypeWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GP4WApi.enumSQLDSTypeWA.AllTab_00">
            <summary>
            全部
            </summary>
        </member>
        <member name="F:GP4WApi.enumSQLDSTypeWA.SqlTab_01">
            <summary>
            SQL表
            </summary>
        </member>
        <member name="F:GP4WApi.enumSQLDSTypeWA.SqlView_02">
            <summary>
            SQL视图
            </summary>
        </member>
        <member name="T:GP4WApi.clsSQLDSTypeWApi">
            <summary>
            Sql数据源类型(SQLDSType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSQLDSTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.BindDdl_SQLDSTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.BindCbo_SQLDSTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjBySQLDSTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strSQLDSTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjLstBySQLDSTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrSQLDSTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.DelSQLDSTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.DelSQLDSTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsSQLDSTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objSQLDSTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.CopyTo(GeneralPlatform.Entity.clsSQLDSTypeEN,GeneralPlatform.Entity.clsSQLDSTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objSQLDSTypeENS">源对象</param>
            <param name = "objSQLDSTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsSQLDSTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSQLDSTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsSQLDSTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4SQLDSType">
            <summary>
            Sql数据源类型(SQLDSType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4SQLDSType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsTabStateWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.SetTabStateId(GeneralPlatform.Entity.clsTabStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabStateEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateId">表状态ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.SetTabStateName(GeneralPlatform.Entity.clsTabStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabStateEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateName">表状态名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.SetTabStateENName(GeneralPlatform.Entity.clsTabStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabStateEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateENName">表状态英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.SetMemo(GeneralPlatform.Entity.clsTabStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabStateEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.Update(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objTabStateEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objTabStateEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objTabStateEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsTabStateEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objTabStateEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.enumTabStateWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GP4WApi.enumTabStateWA.Normal_01">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:GP4WApi.enumTabStateWA.ToDelete_02">
            <summary>
            拟删除
            </summary>
        </member>
        <member name="F:GP4WApi.enumTabStateWA.Discard_03">
            <summary>
            弃用
            </summary>
        </member>
        <member name="F:GP4WApi.enumTabStateWA.ToBeConsidered_04">
            <summary>
            待考虑
            </summary>
        </member>
        <member name="T:GP4WApi.clsTabStateWApi">
            <summary>
            表状态(TabState)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabStateWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.BindDdl_TabStateId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.BindCbo_TabStateId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.CheckPropertyNew(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjByTabStateId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strTabStateId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjLstByTabStateIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrTabStateId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.DelTabStates(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.DelTabStatesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.AddNewRecord(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.UpdateRecord(GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.UpdateWithCondition(GeneralPlatform.Entity.clsTabStateEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objTabStateEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.CopyTo(GeneralPlatform.Entity.clsTabStateEN,GeneralPlatform.Entity.clsTabStateEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objTabStateENS">源对象</param>
            <param name = "objTabStateENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsTabStateEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabStateWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsTabStateEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4TabState">
            <summary>
            表状态(TabState)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4TabState.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsTabTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.SetTabTypeId(GeneralPlatform.Entity.clsTabTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabTypeEN">需要设置字段值的实体对象</param>
            <param name = "strTabTypeId">表类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.SetTabTypeName(GeneralPlatform.Entity.clsTabTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabTypeEN">需要设置字段值的实体对象</param>
            <param name = "strTabTypeName">表类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsTabTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objTabTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.Update(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objTabTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objTabTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objTabTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsTabTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objTabTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsTabTypeWApi">
            <summary>
            表类型(TabType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsTabTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.BindDdl_TabTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.BindCbo_TabTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjByTabTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strTabTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjLstByTabTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrTabTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.DelTabTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.DelTabTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsTabTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objTabTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.CopyTo(GeneralPlatform.Entity.clsTabTypeEN,GeneralPlatform.Entity.clsTabTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objTabTypeENS">源对象</param>
            <param name = "objTabTypeENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsTabTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsTabTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsTabTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4TabType">
            <summary>
            表类型(TabType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4TabType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxPrjTabWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabId">表ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabName">TabName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabCnName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabCnName">表中文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetSQLDSTypeId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strSQLDSTypeId">数据源类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetSqlDsTypeName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strSqlDsTypeName">Sql数据源名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabStateId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateId">表状态ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabStateName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabStateName">表状态名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetIsParaTab(GeneralPlatform.Entity.clsvQxPrjTabEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "bolIsParaTab">是否参数表</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetFuncModuleAgcId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleAgcId">功能模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetFuncModuleName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleName">模块名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetFuncModuleEnName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleEnName">模块英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetOwner(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strOwner">拥有者</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetKeyword(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyword">关键字</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabTypeId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabTypeId">表类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetTabTypeName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strTabTypeName">表类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetPrimaryTypeId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strPrimaryTypeId">主键类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetPrimaryTypeName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strPrimaryTypeName">主键类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetKeyFldId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyFldId">关键字段Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetKeyFldName(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strKeyFldName">关键字段名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetUpdDate2(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate2">UpdDate2</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.SetRelaViewId(GeneralPlatform.Entity.clsvQxPrjTabEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjTabEN">需要设置字段值的实体对象</param>
            <param name = "strRelaViewId">RelaViewId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjTabEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjTabWApi">
            <summary>
            v工程表(vQxPrjTab)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjByTabId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strTabId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjLstByTabIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrTabId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjTabEN,GeneralPlatform.Entity.clsvQxPrjTabEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjTabENS">源对象</param>
            <param name = "objvQxPrjTabENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjTabEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjTabWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjTabEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentInfoWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetInUse(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.Update(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxDepartmentInfoWApi">
            <summary>
            部门(QxDepartmentInfo)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxDepartmentInfoWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.BindDdl_DepartmentId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.BindCbo_DepartmentId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjByDepartmentId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strDepartmentId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjByDepartmentIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strDepartmentId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetDepartmentNameByDepartmentIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDepartmentId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetNameByDepartmentIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strDepartmentId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstByDepartmentIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrDepartmentId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstByDepartmentIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrDepartmentId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.DelQxDepartmentInfos(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.DelQxDepartmentInfosByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.AddNewRecord(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.UpdateRecord(GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxDepartmentInfoEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxDepartmentInfoEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.CopyTo(GeneralPlatform.Entity.clsQxDepartmentInfoEN,GeneralPlatform.Entity.clsQxDepartmentInfoEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxDepartmentInfoENS">源对象</param>
            <param name = "objQxDepartmentInfoENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxDepartmentInfoEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxDepartmentInfoWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxDepartmentInfoEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxDepartmentInfo">
            <summary>
            部门(QxDepartmentInfo)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxDepartmentInfo.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxPrjUserRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            获取唯一性条件串--QxPrjUserRelation(工程用户关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:QxPrjId_UserId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjUserRelationEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxPrjUserRelationWApi">
            <summary>
            工程用户关系(QxPrjUserRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxPrjUserRelationWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.DelQxPrjUserRelations(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.DelQxPrjUserRelationsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjUserRelationEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjUserRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjUserRelationEN,GeneralPlatform.Entity.clsQxPrjUserRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjUserRelationENS">源对象</param>
            <param name = "objQxPrjUserRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjUserRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxPrjUserRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjUserRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxPrjUserRelation">
            <summary>
            工程用户关系(QxPrjUserRelation)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxPrjUserRelation.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetGroupId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strGroupId">组Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetManageId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strManageId">ManageId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetManageTypeId(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "strManageTypeId">ManageTypeId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.SetIsDefault(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDefault">是否默认</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.Update(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            获取唯一性条件串--QxUserGroupRelation(用户/组关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_GroupId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserGroupRelationEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupRelationWApi">
            <summary>
            用户/组关系(QxUserGroupRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupRelationWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.DelQxUserGroupRelations(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.DelQxUserGroupRelationsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupRelationEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.CopyTo(GeneralPlatform.Entity.clsQxUserGroupRelationEN,GeneralPlatform.Entity.clsQxUserGroupRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserGroupRelationENS">源对象</param>
            <param name = "objQxUserGroupRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserGroupRelation">
            <summary>
            用户/组关系(QxUserGroupRelation)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserGroupRelation.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupsWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.SetGroupId(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupsEN">需要设置字段值的实体对象</param>
            <param name = "strGroupId">组Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.SetGroupName(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupsEN">需要设置字段值的实体对象</param>
            <param name = "strGroupName">组名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupsEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupsEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.Update(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserGroupsEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            获取唯一性条件串--QxUserGroups(用户组), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:GroupName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserGroupsEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserGroupsEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUserGroupsEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupsEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupsWApi">
            <summary>
            用户组(QxUserGroups)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupsWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.BindDdl_GroupId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.BindCbo_GroupId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjByGroupId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strGroupId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjLstByGroupIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrGroupId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.DelQxUserGroupss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.DelQxUserGroupssByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupsEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupsEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.CopyTo(GeneralPlatform.Entity.clsQxUserGroupsEN,GeneralPlatform.Entity.clsQxUserGroupsEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserGroupsENS">源对象</param>
            <param name = "objQxUserGroupsENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupsEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupsWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupsEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserGroups">
            <summary>
            用户组(QxUserGroups)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserGroups.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserLoginNameWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetUserLoginName(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserLoginName">用户登录名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetUpdTime(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUpdTime">修改时间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.Update(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserLoginNameEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserLoginNameEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUserLoginNameEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserLoginNameEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserLoginNameWApi">
            <summary>
            用户登录名(QxUserLoginName)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserLoginNameWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjByUserLoginName(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserLoginName">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjByUserLoginNameCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strUserLoginName">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstByUserLoginNameLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserLoginName">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstByUserLoginNameLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrUserLoginName">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.DelQxUserLoginNames(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.DelQxUserLoginNamesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserLoginNameEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserLoginNameEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.CopyTo(GeneralPlatform.Entity.clsQxUserLoginNameEN,GeneralPlatform.Entity.clsQxUserLoginNameEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserLoginNameENS">源对象</param>
            <param name = "objQxUserLoginNameENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserLoginNameEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserLoginNameWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserLoginNameEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserLoginName">
            <summary>
            用户登录名(QxUserLoginName)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserLoginName.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.Update(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            获取唯一性条件串--QxUserRoleRelation(用户角色关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:Uni_UserId_RoleId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserRoleRelationEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserRoleRelationWApi">
            <summary>
            用户角色关系(QxUserRoleRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserRoleRelationWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjBymIdCache(System.Int64,System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "lngmId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstByMIdLstCache(System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrMId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.DelQxUserRoleRelations(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.DelQxUserRoleRelationsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserRoleRelationEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserRoleRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.CopyTo(GeneralPlatform.Entity.clsQxUserRoleRelationEN,GeneralPlatform.Entity.clsQxUserRoleRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserRoleRelationENS">源对象</param>
            <param name = "objQxUserRoleRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserRoleRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.ReFreshThisCache(System.String)">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstCache(System.String)">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetObjLstCacheFromObjLst(System.String,System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserRoleRelationEN})">
            <summary>
            从缓存中获取所有对象列表, 缓存内容来自于另一个对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCacheFromObjLst)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserRoleRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserRoleRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserRoleRelation">
            <summary>
            用户角色关系(QxUserRoleRelation)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserRoleRelation.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsSubjectRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsSubjectRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.SetLeaderId(GeneralPlatform.Entity.clsSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strLeaderId">领导Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.SetIsDirectLeader(GeneralPlatform.Entity.clsSubjectRelationEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDirectLeader">是否直接领导</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.Update(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objSubjectRelationEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            获取唯一性条件串--SubjectRelation(隶属关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_LeaderId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objSubjectRelationEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objSubjectRelationEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsSubjectRelationEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objSubjectRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsSubjectRelationWApi">
            <summary>
            隶属关系(SubjectRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSubjectRelationWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.CheckPropertyNew(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.DelSubjectRelations(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.DelSubjectRelationsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.AddNewRecord(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objSubjectRelationEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.UpdateRecord(GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.UpdateWithCondition(GeneralPlatform.Entity.clsSubjectRelationEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objSubjectRelationEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.CopyTo(GeneralPlatform.Entity.clsSubjectRelationEN,GeneralPlatform.Entity.clsSubjectRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objSubjectRelationENS">源对象</param>
            <param name = "objSubjectRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsSubjectRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsSubjectRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsSubjectRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4SubjectRelation">
            <summary>
            隶属关系(SubjectRelation)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4SubjectRelation.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsUserDefaValueWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetmId(GeneralPlatform.Entity.clsUserDefaValueEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetDefaValName(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strDefaValName">缺省值名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetUserId(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetUserDefaValue(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strUserDefaValue">用户缺省值</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.SetMemo(GeneralPlatform.Entity.clsUserDefaValueEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objUserDefaValueEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.Update(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objUserDefaValueEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            获取唯一性条件串--UserDefaValue(用户缺省值), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_DefaValName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objUserDefaValueEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objUserDefaValueEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsUserDefaValueEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objUserDefaValueEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsUserDefaValueWApi">
            <summary>
            用户缺省值(UserDefaValue)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsUserDefaValueWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.CheckPropertyNew(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.DelUserDefaValues(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.DelUserDefaValuesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.AddNewRecord(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objUserDefaValueEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.UpdateRecord(GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.UpdateWithCondition(GeneralPlatform.Entity.clsUserDefaValueEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objUserDefaValueEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.CopyTo(GeneralPlatform.Entity.clsUserDefaValueEN,GeneralPlatform.Entity.clsUserDefaValueEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objUserDefaValueENS">源对象</param>
            <param name = "objUserDefaValueENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsUserDefaValueEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsUserDefaValueWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsUserDefaValueEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4UserDefaValue">
            <summary>
            用户缺省值(UserDefaValue)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4UserDefaValue.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetUserNum(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "intUserNum">用户数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.SetUpDepartmentName(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentName">上级部门</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoByUserNumWApi">
            <summary>
            v部门信息By用户数(vQxDepartmentInfoByUserNum)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.BindDdl_DepartmentId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.BindCbo_DepartmentId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjByDepartmentId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strDepartmentId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjLstByDepartmentIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrDepartmentId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.CopyTo(GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN,GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxDepartmentInfoByUserNumENS">源对象</param>
            <param name = "objvQxDepartmentInfoByUserNumENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoByUserNumWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxDepartmentInfoByUserNumEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetInUse(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetUserNum(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "intUserNum">用户数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.SetUpDepartmentName(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxDepartmentInfoEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentName">上级部门</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxDepartmentInfoEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxDepartmentInfoWApi">
            <summary>
            v部门(vQxDepartmentInfo)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.BindDdl_DepartmentId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.BindCbo_DepartmentId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjByDepartmentId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strDepartmentId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjLstByDepartmentIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrDepartmentId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.CopyTo(GeneralPlatform.Entity.clsvQxDepartmentInfoEN,GeneralPlatform.Entity.clsvQxDepartmentInfoEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxDepartmentInfoENS">源对象</param>
            <param name = "objvQxDepartmentInfoENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxDepartmentInfoEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxDepartmentInfoWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxDepartmentInfoEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjUserRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxPrjUserRelationWApi">
            <summary>
            v工程用户关系(vQxPrjUserRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjUserRelationEN,GeneralPlatform.Entity.clsvQxPrjUserRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjUserRelationENS">源对象</param>
            <param name = "objvQxPrjUserRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxPrjUserRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetRoleENName(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleENName">角色英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetRoleIndex(GeneralPlatform.Entity.clsvQxUserRolesEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "intRoleIndex">角色序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetIsInUse(GeneralPlatform.Entity.clsvQxUserRolesEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "bolIsInUse">是否在使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRolesEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvQxUserRolesWApi">
            <summary>
            v角色(vQxUserRoles)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjByRoleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strRoleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjLstByRoleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRoleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRolesEN,GeneralPlatform.Entity.clsvQxUserRolesEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRolesENS">源对象</param>
            <param name = "objvQxUserRolesENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvQxUserRolesWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsvSubjectRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsvSubjectRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetUserName(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetLeaderId(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strLeaderId">领导Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetIsDirectLeader(GeneralPlatform.Entity.clsvSubjectRelationEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDirectLeader">是否直接领导</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetLeaderUserName(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strLeaderUserName">LeaderUserName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetLeaderDepartmentId(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strLeaderDepartmentId">LeaderDepartmentId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.SetLeaderDepartmentName(GeneralPlatform.Entity.clsvSubjectRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvSubjectRelationEN">需要设置字段值的实体对象</param>
            <param name = "strLeaderDepartmentName">LeaderDepartmentName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvSubjectRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GP4WApi.clsvSubjectRelationWApi">
            <summary>
            v隶属关系(vSubjectRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.CopyTo(GeneralPlatform.Entity.clsvSubjectRelationEN,GeneralPlatform.Entity.clsvSubjectRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvSubjectRelationENS">源对象</param>
            <param name = "objvSubjectRelationENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvSubjectRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsvSubjectRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvSubjectRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetGroupId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strGroupId">组Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetRelaMid(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngRelaMid">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.Update(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            获取唯一性条件串--QxUserGroupPotence(用户权限关系), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserId_GroupId_PotenceId_RoleId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserGroupPotenceEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GP4WApi.clsQxUserGroupPotenceWApi">
            <summary>
            用户权限关系(QxUserGroupPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GP4WApi.clsQxUserGroupPotenceWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.DelQxUserGroupPotences(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.DelQxUserGroupPotencesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserGroupPotenceEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.CopyTo(GeneralPlatform.Entity.clsQxUserGroupPotenceEN,GeneralPlatform.Entity.clsQxUserGroupPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserGroupPotenceENS">源对象</param>
            <param name = "objQxUserGroupPotenceENT">目标对象</param>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GP4WApi.clsQxUserGroupPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserGroupPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GP4WApi.clsCommFun4WA4QxUserGroupPotence">
            <summary>
            用户权限关系(QxUserGroupPotence)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GP4WApi.clsCommFun4WA4QxUserGroupPotence.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GP4WApi.clsLoginWApi">
            <summary>
            
            </summary>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.UserLoginBak(com.taishsoft.common.stuLoginPara,System.Boolean)">
            <summary>
            用户登录函数
            </summary>
            <param name="objLoginPara">objLoginPara</param>
            <param name="bolIsTest">bolIsTest</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.UserLogin(com.taishsoft.common.stuLoginPara,System.Boolean)">
            <summary>
            用户登录函数
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strPassword">口令</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.UserLogin2(com.taishsoft.common.stuLoginPara)">
            <summary>
            用户登录函数
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strPassword">口令</param>
            <returns>是否成功？"True":成功，"False":失败， 其他的代表不成功，同时也显示原因</returns>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.UserLoginWithEffectiveDate(com.taishsoft.common.stuLoginPara)">
            <summary>
            用户登录函数
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strPassword">口令</param>
            <param name="strEffectiveDate">有效日期</param>
            <returns>成功返回"true"，不成功返回"false", 超过有效期返回"EffectiveDateError"</returns>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.UserLoginByPrjId(com.taishsoft.common.stuLoginPara)">
            <summary>
            用户登录函数
            </summary>
            <param name="strUserId">用户ID</param>
            <param name="strPassword">口令</param>
            <param name="strPrjId">默认工程Id</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:GP4WApi.clsLoginWApi.GetUserIdByLoginName(System.String,System.Boolean)">
            <summary>
            根据用户登录名获取用户Id
            </summary>
            <param name="strLoginName">用户登录名</param>        
            <returns>返回strUserId</returns>
        </member>
        <member name="T:GP4WApi.clsDict_PageName_Dic">
            <summary>
            页面、目录字典
            </summary>
        </member>
        <member name="F:GP4WApi.clsDict_PageName_Dic.arrPageName">
            <summary>
            页面名称
            </summary>
        </member>
        <member name="F:GP4WApi.clsDict_PageName_Dic.arrDir">
            <summary>
            目录名称
            </summary>
        </member>
        <member name="F:GP4WApi.clsDict_PageName_Dic.mbolIsInitDict">
            <summary>
            是否初始化字典
            </summary>
        </member>
        <member name="M:GP4WApi.clsDict_PageName_Dic.InitDict">
            <summary>
            初始化页面、目录字典
            </summary>
        </member>
        <member name="M:GP4WApi.clsDict_PageName_Dic.GetDir4PageName(System.String)">
            <summary>
            根据页面名称获取相应的目录
            </summary>
            <param name="strPageName"></param>
            <returns></returns>
        </member>
        <member name="T:GP4WApi.clsPubFun4WApi">
            <summary>
            针对转换类的公共类函数
            </summary>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.GetWebApiUrlBak(System.String,System.String)">
            <summary>
            获取Web服务的地址
            (AGC_CSV7.BusinessLogicEx.AutoGC6Cs_WS:Gen_4Ws_GetServiceUrl)
            </summary>
            <returns>返回当前文件中Web服务的地址</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.GetLastUrl(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            生成最终URL
            </summary>
            <param name="strApiControllerName">基准URL（不含查询串）</param>
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <returns>最终URL</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.GetLastUrl4Delete(System.String,System.String,System.String)">
            <summary>
            生成最终URL
            </summary>
            <param name="strApiControllerName">基准URL（不含查询串）</param>
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <returns>最终URL</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Get(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,System.String@)">
            <summary>
            GET方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>        
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Get4WebApi(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,System.String@,System.Boolean)">
            <summary>
            GET方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.GetObjLst4WebApi(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,System.String@)">
            <summary>
            GET方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Post(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String@,System.String@,System.Boolean)">
            <summary>
            POST方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="parseData">传递实体数据（Json格式）</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Put(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String@,System.String@)">
            <summary>
            Put方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="parseData">传递实体数据（Json格式）</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Deletes(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String@,System.String@)">
            <summary>
            POST方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="parseData">传递实体数据（Json格式）</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="M:GP4WApi.clsPubFun4WApi.Delete(System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            Delete方式调用Web Api
            </summary>
            <param name="strApiControllerName">页面的ApiController名称</param>       
            <param name="strAction">函数名称</param>
            <param name="dictParam">查询参数字典</param>
            <param name="result">返回数据（Json格式）</param>
            <param name="errMsg">出错信息</param>
            <returns>成功与否</returns>
        </member>
        <member name="T:GP4WApi.clsSysPara">
            <summary>
            clsSysPara。
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.CurrPrjId">
            <summary>
            当前工程ID
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.CurrSelPrjId">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strUserId">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strXMLFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strXMLDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strXmlDataSourceFileName">
            <summary>
            Xml数据源
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.bolIsUseXmlDataSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strConnectStrName">
            连接串名称
        </member>
        <member name="F:GP4WApi.clsSysPara.bolIsUseConnectStrName">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.TempWebFolder">
            <summary>
            临时文件目录FOR WEB
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.UpLoadFilesWebFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.UpLoadFilesFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.DownLoadFilesWebFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.DownLoadFilesFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.ErrorPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.SuccessPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strCurrIPAddressAndPort">
            <summary>
            当前机器的IPAddress
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strCurrIPAddressAndPort2">
            <summary>
            当前机器的IPAddress(备用)
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.bolIsUseBackupIpAddressAndCurrPrx">
            <summary>
            是否使用备用的统一平台服务地址
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strCurrIPAddressAndPort_Local">
            <summary>
            
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strCurrPrx">
            <summary>
            当前机器的端口号
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.strCurrPrx2">
            <summary>
            当前机器的端口号（备用）
            </summary>
        </member>
        <member name="F:GP4WApi.clsSysPara.bolIsLocalHost">
            <summary>
            是否本机调试状态
            </summary>
        </member>
        <member name="T:GP4WApi.clsSysPara4WebApi_GP">
            <summary>
            clsSysPara。
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.strCurrIPAddressAndPort">
            <summary>
            当前机器的IPAddress
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.strCurrIPAddressAndPort2">
            <summary>
            当前机器的IPAddress（备用）
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.bolIsUseBackupIpAddressAndCurrPrx">
            <summary>
            是否使用备用的统一平台服务地址
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.strCurrIPAddressAndPort_Local">
            <summary>
            
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.strCurrPrx">
            <summary>
            当前机器的端口号
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.strCurrPrx2">
            <summary>
            当前机器的端口号（备用）
            </summary>
        </member>
        <member name="P:GP4WApi.clsSysPara4WebApi_GP.bolIsLocalHost">
            <summary>
            是否本机调试状态
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetUserName(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetOpenId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strOpenId">微信openid</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetPassword(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetPhoneNumber(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strPhoneNumber">电话号码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">IdXzCollege</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetEmail(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strEmail">邮箱</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIsArchive(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsArchive">是否存档</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIsAccessSynch(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsAccessSynch">是否处理同步</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetAccessSynchDate(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strAccessSynchDate">处理同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIsExistUserInCurr(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsExistUserInCurr">当前是否存在用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetIsSamePwd(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSamePwd">是否相同密码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.Update(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUsers4SynchEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            获取唯一性条件串--QxUsers4Synch(用户4同步), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:IpAddress_UserId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUsers4SynchEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUsers4SynchEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUsers4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsers4SynchWApi">
            <summary>
            用户4同步(QxUsers4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUsers4SynchWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.DelQxUsers4Synchs(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.DelQxUsers4SynchsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUsers4SynchEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsers4SynchEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUsers4SynchEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.CopyTo(GeneralPlatform.Entity.clsQxUsers4SynchEN,GeneralPlatform.Entity.clsQxUsers4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUsers4SynchENS">源对象</param>
            <param name = "objQxUsers4SynchENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsers4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsers4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUsers4Synch">
            <summary>
            用户4同步(QxUsers4Synch)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUsers4Synch.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi">
            <summary>
            v用户角色关系4同步(vQxUserRoleRelation4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN,GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRoleRelation4SynchENS">源对象</param>
            <param name = "objvQxUserRoleRelation4SynchENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelation4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRoleRelation4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIpAddress(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIpAddress">IP地址</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetPassword(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUpDepartmentName(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentName">上级部门</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">IdXzCollege</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIsAccessSynch(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsAccessSynch">是否处理同步</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetAccessSynchDate(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strAccessSynchDate">处理同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIsExistUserInCurr(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsExistUserInCurr">当前是否存在用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetIsSamePwd(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSamePwd">是否相同密码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUsers4SynchEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers4SynchEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUsers4SynchEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsers4SynchWApi">
            <summary>
            v用户4同步(vQxUsers4Synch)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.CopyTo(GeneralPlatform.Entity.clsvQxUsers4SynchEN,GeneralPlatform.Entity.clsvQxUsers4SynchEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUsers4SynchENS">源对象</param>
            <param name = "objvQxUsers4SynchENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsers4SynchEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers4SynchWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsers4SynchEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetMenuId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetMenuName(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetLinkFile(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strLinkFile">链接文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetqsParameters(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strqsParameters">qs参数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetTabId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strTabId">表ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetImgFile(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strImgFile">图像文件</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetOrderNum(GeneralPlatform.Entity.clsQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intOrderNum">排序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetIsLeafNode(GeneralPlatform.Entity.clsQxPrjMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeafNode">是否叶子</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetMenuTitle(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuTitle">菜单标题</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetPageDispModeId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strPageDispModeId">页面显示模式Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetInUse(GeneralPlatform.Entity.clsQxPrjMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolInUse">是否在用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetMenuControlName(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuControlName">菜单控件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetApplicationTypeId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "intApplicationTypeId">应用程序类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPrjMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.Update(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPrjMenusEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            获取唯一性条件串--QxPrjMenus(工程菜单), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:MenuName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPrjMenusEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPrjMenusEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPrjMenusEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxPrjMenusWApi">
            <summary>
            工程菜单(QxPrjMenus)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxPrjMenusWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.BindDdl_MenuId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.BindCbo_MenuId(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
            <param name = "strQxPrjId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjByMenuId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strMenuId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjByMenuIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strMenuId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetMenuNameByMenuIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strMenuId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetNameByMenuIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strMenuId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstByMenuIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMenuId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstByMenuIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrMenuId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.DelQxPrjMenuss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.DelQxPrjMenussByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPrjMenusEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPrjMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.CopyTo(GeneralPlatform.Entity.clsQxPrjMenusEN,GeneralPlatform.Entity.clsQxPrjMenusEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPrjMenusENS">源对象</param>
            <param name = "objQxPrjMenusENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjMenusEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPrjMenusWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPrjMenusEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxPrjMenus">
            <summary>
            工程菜单(QxPrjMenus)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxPrjMenus.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetmId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetCmPrjId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strCmPrjId">Cm项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetMenuSetId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuSetId">菜单集Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetMenuId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetIsDisp(GeneralPlatform.Entity.clsQxRoleMenusEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "bolIsDisp">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRoleMenusEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.Update(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxRoleMenusEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            获取唯一性条件串--QxRoleMenus(角色菜单), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:RoleId_CmPrjId_MenuSetId_MenuId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxRoleMenusEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxRoleMenusEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxRoleMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxRoleMenusWApi">
            <summary>
            角色菜单(QxRoleMenus)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxRoleMenusWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjBymIdCache(System.Int64,System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "lngmId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstByMIdLstCache(System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrMId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.DelRecord(System.Int64)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.DelQxRoleMenuss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.DelQxRoleMenussByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.AddNewRecord(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxRoleMenusEN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.UpdateRecord(GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxRoleMenusEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxRoleMenusEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.CopyTo(GeneralPlatform.Entity.clsQxRoleMenusEN,GeneralPlatform.Entity.clsQxRoleMenusEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxRoleMenusENS">源对象</param>
            <param name = "objQxRoleMenusENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRoleMenusEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.ReFreshThisCache(System.String)">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstCache(System.String)">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetObjLstCacheFromObjLst(System.String,System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRoleMenusEN})">
            <summary>
            从缓存中获取所有对象列表, 缓存内容来自于另一个对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCacheFromObjLst)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRoleMenusWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRoleMenusEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxRoleMenus">
            <summary>
            角色菜单(QxRoleMenus)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxRoleMenus.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetFuncModuleId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strFuncModuleId">模块Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetMenuId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetViewId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strViewId">界面编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxPotenceTypeEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.Update(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxPotenceTypeEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            获取唯一性条件串--QxPotenceType(权限类型), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:PotenceTypeName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxPotenceTypeEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxPotenceTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxPotenceTypeEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxPotenceTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxPotenceTypeWApi">
            <summary>
            权限类型(QxPotenceType)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxPotenceTypeWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.BindDdl_PotenceTypeId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.BindCbo_PotenceTypeId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjByPotenceTypeId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strPotenceTypeId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjByPotenceTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strPotenceTypeId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetPotenceTypeNameByPotenceTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPotenceTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetNameByPotenceTypeIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strPotenceTypeId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstByPotenceTypeIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrPotenceTypeId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstByPotenceTypeIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrPotenceTypeId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.DelQxPotenceTypes(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.DelQxPotenceTypesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.AddNewRecord(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.UpdateRecord(GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxPotenceTypeEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxPotenceTypeEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.CopyTo(GeneralPlatform.Entity.clsQxPotenceTypeEN,GeneralPlatform.Entity.clsQxPotenceTypeEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxPotenceTypeENS">源对象</param>
            <param name = "objQxPotenceTypeENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPotenceTypeEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxPotenceTypeWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxPotenceTypeEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxPotenceType">
            <summary>
            权限类型(QxPotenceType)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxPotenceType.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetUserDownLoadLogId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserDownLoadLogId">用户下载日志Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetPrjSiteId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteId">工程站点Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetPrjSiteName(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteName">工程站点名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetFileName(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strFileName">文件名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetVersion(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strVersion">版本</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetDownLownDate(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strDownLownDate">下载日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetIsSuccess(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSuccess">是否成功</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetLogInfo(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strLogInfo">日志信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetFtpServer(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpServer">Ftp服务器</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetFtpUserId(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserId">Ftp用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetFtpUserPassword(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserPassword">Ftp用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi">
            <summary>
            v用户下载日志细节(vQxUserDownLoadDetailLog)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN,GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserDownLoadDetailLogENS">源对象</param>
            <param name = "objvQxUserDownLoadDetailLogENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadDetailLogWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserDownLoadDetailLogEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetUserDownLoadLogId(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserDownLoadLogId">用户下载日志Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetPrjSiteId(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteId">工程站点Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetPrjSiteName(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjSiteName">工程站点名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetDownLownDate(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strDownLownDate">下载日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetLogInfo(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strLogInfo">日志信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetIsSuccess(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSuccess">是否成功</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetFtpServer(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpServer">Ftp服务器</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetFtpUserId(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserId">Ftp用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetFtpUserPassword(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strFtpUserPassword">Ftp用户口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserDownLoadLogEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi">
            <summary>
            v用户下载日志(vQxUserDownLoadLog)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjByUserDownLoadLogId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserDownLoadLogId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjLstByUserDownLoadLogIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserDownLoadLogId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserDownLoadLogEN,GeneralPlatform.Entity.clsvQxUserDownLoadLogEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserDownLoadLogENS">源对象</param>
            <param name = "objvQxUserDownLoadLogENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserDownLoadLogEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserDownLoadLogWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserDownLoadLogEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetCodePath(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strCodePath">代码路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetCodePathBackup(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strCodePathBackup">备份代码路径</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetQxCodeTypeId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strQxCodeTypeId">代码类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetCodeTypeName(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strCodeTypeName">代码类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetIsTemplate(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "bolIsTemplate">是否模板</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserCodePathEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserCodePathEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserCodePathEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserCodePathWApi">
            <summary>
            v用户生成路径(vQxUserCodePath)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserCodePathEN,GeneralPlatform.Entity.clsvQxUserCodePathEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserCodePathENS">源对象</param>
            <param name = "objvQxUserCodePathENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserCodePathEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserCodePathWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserCodePathEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxRolesWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetRoleId(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetRoleName(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetRoleENName(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strRoleENName">角色英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetRoleIndex(GeneralPlatform.Entity.clsQxRolesEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "intRoleIndex">角色序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetUserType(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strUserType">用户类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetIsInUse(GeneralPlatform.Entity.clsQxRolesEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "bolIsInUse">是否在使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxRolesEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxRolesEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.Update(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxRolesEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            获取唯一性条件串--QxRoles(角色), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:RoleName_QxPrjId
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxRolesEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxRolesEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxRolesEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxRolesEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxRolesEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.enumQxRolesWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00010001">
            <summary>
            统一平台总管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00010002">
            <summary>
            项目管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00010003">
            <summary>
            高级用户
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00010004">
            <summary>
            普通用户
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050001">
            <summary>
            管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050002">
            <summary>
            中级管理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050003">
            <summary>
            项目设计师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050004">
            <summary>
            项目程序员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050005">
            <summary>
            超级管理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00050006">
            <summary>
            亚管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00190001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00190002">
            <summary>
            设定会议人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00190003">
            <summary>
            现场负责人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00190004">
            <summary>
            部门负责人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00190005">
            <summary>
            普通人员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00200001">
            <summary>
            信息审核员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00200002">
            <summary>
            信息管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00200003">
            <summary>
            普通用户
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250002">
            <summary>
            校办处理人员1
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250003">
            <summary>
            校办处理人员2
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250004">
            <summary>
            校办处理人员3
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250005">
            <summary>
            校办处理人员4
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250006">
            <summary>
            校办处理人员5
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250007">
            <summary>
            校办管理人员6
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250008">
            <summary>
            校领导1
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250009">
            <summary>
            校领导2
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250010">
            <summary>
            部门人员1
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250011">
            <summary>
            校办管理人员7
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00250012">
            <summary>
            校办管理人员8
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260002">
            <summary>
            考核主管部门
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260003">
            <summary>
            教学核实
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260004">
            <summary>
            科研核实
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260005">
            <summary>
            科研打分
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260006">
            <summary>
            考核职能部门（删除）
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260007">
            <summary>
            校级受聘人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260008">
            <summary>
            一般教师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260009">
            <summary>
            游客
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260010">
            <summary>
            教务考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260011">
            <summary>
            科研考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260012">
            <summary>
            研办考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260013">
            <summary>
            学院考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260014">
            <summary>
            校聘任委员会委员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260015">
            <summary>
            师资考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260016">
            <summary>
            学院科研考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260017">
            <summary>
            学院教学考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260018">
            <summary>
            学院品德考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260019">
            <summary>
            科研考核(院聘)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260020">
            <summary>
            教学考核(院聘)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260021">
            <summary>
            品德考核(院聘)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260022">
            <summary>
            院级受聘人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260023">
            <summary>
            学院科研打分
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260024">
            <summary>
            学院等第评判
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260025">
            <summary>
            管理岗受聘人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260026">
            <summary>
            部门考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260027">
            <summary>
            工作考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260028">
            <summary>
            廉政考核
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00260029">
            <summary>
            校级受聘人_师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280001">
            <summary>
            项目管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280002">
            <summary>
            部门经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280003">
            <summary>
            项目负责人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280004">
            <summary>
            程序员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280005">
            <summary>
            美工
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00280006">
            <summary>
            测试员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00530001">
            <summary>
            项目管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00530002">
            <summary>
            公司负责人
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00530003">
            <summary>
            部门经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00530004">
            <summary>
            公司成员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00530005">
            <summary>
            项目经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00620001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._00620002">
            <summary>
            AAA
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010002">
            <summary>
            部门经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010003">
            <summary>
            项目管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010004">
            <summary>
            程序员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010005">
            <summary>
            数据库设计
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010006">
            <summary>
            人事主管
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010007">
            <summary>
            美工
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010008">
            <summary>
            项目测试
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010009">
            <summary>
            成员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010010">
            <summary>
            部门领导
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010011">
            <summary>
            系统超级管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010012">
            <summary>
            医生
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010013">
            <summary>
            护士
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010014">
            <summary>
            部主任
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010015">
            <summary>
            护士长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010016">
            <summary>
            院长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010017">
            <summary>
            书记
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010018">
            <summary>
            副院长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010019">
            <summary>
            处长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010020">
            <summary>
            副处长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010021">
            <summary>
            科长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010022">
            <summary>
            一般职工
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010023">
            <summary>
            项目主管
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010024">
            <summary>
            公司总经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010025">
            <summary>
            公司副总经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010026">
            <summary>
            部门副经理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010027">
            <summary>
            执行董事
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010028">
            <summary>
            董事长
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01010033">
            <summary>
            测试
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01090001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01090002">
            <summary>
            操作员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01090003">
            <summary>
            单位管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01090004">
            <summary>
            问卷集操作员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01090005">
            <summary>
            分类管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01500001">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01670001">
            <summary>
            项目管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01670002">
            <summary>
            教师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxRolesWA._01670003">
            <summary>
            学生
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxRolesWApi">
            <summary>
            角色(QxRoles)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxRolesWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.BindDdl_RoleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.BindCbo_RoleId(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
            <param name = "strQxPrjId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjByRoleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strRoleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjByRoleIdCache(System.String,System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strRoleId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetRoleNameByRoleIdCache(System.String,System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strRoleId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetNameByRoleIdCache(System.String,System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strRoleId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstByRoleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRoleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstByRoleIdLstCache(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrRoleId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.DelQxRoless(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.DelQxRolessByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.AddNewRecord(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.UpdateRecord(GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxRolesEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxRolesEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.CopyTo(GeneralPlatform.Entity.clsQxRolesEN,GeneralPlatform.Entity.clsQxRolesEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxRolesENS">源对象</param>
            <param name = "objQxRolesENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRolesEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.ReFreshThisCache(System.String)">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstCache(System.String)">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetObjLstCacheFromObjLst(System.String,System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRolesEN})">
            <summary>
            从缓存中获取所有对象列表, 缓存内容来自于另一个对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCacheFromObjLst)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxRolesWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxRolesEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxRoles">
            <summary>
            角色(QxRoles)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxRoles.ReFreshCache(System.String)">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserIdentityEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserIdentityEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.SetIdentityEnName(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserIdentityEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityEnName">身份英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.SetUserType(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserIdentityEN">需要设置字段值的实体对象</param>
            <param name = "strUserType">用户类型</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserIdentityEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.Update(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserIdentityEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserIdentityEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUserIdentityEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserIdentityEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.enumQxUserIdentityWA">
            <summary>
            根据表内容设置enum列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GeneEnumConstList)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.Unknown_00">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.University_Administrator_01">
            <summary>
            大学管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.Secondary_School_Administrator_02">
            <summary>
            中学管理员
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.University_Teacher_03">
            <summary>
            大学教师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.University_Student_04">
            <summary>
            大学学生
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.Company_Employee_05">
            <summary>
            公司员工
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.Company_Management_06">
            <summary>
            公司管理
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.K_12_Teacher_07">
            <summary>
            中小学教师
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.enumQxUserIdentityWA.K_12_Student_08">
            <summary>
            中小学学生
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUserIdentityWApi">
            <summary>
            用户权限身份(QxUserIdentity)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUserIdentityWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.BindDdl_IdentityId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.BindCbo_IdentityId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjByIdentityId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strIdentityId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjByIdentityIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strIdentityId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetIdentityDescByIdentityIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strIdentityId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetNameByIdentityIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strIdentityId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstByIdentityIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrIdentityId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstByIdentityIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrIdentityId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.DelQxUserIdentitys(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.DelQxUserIdentitysByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserIdentityEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserIdentityEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.CopyTo(GeneralPlatform.Entity.clsQxUserIdentityEN,GeneralPlatform.Entity.clsQxUserIdentityEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserIdentityENS">源对象</param>
            <param name = "objQxUserIdentityENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserIdentityEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserIdentityWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserIdentityEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUserIdentity">
            <summary>
            用户权限身份(QxUserIdentity)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUserIdentity.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUserStateWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsQxUserStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserStateEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsQxUserStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserStateEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUserStateEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUserStateEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.Update(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUserStateEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            获取唯一性条件串--QxUserState(用户状态), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:UserStateName
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUserStateEN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUserStateEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUserStateEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserStateEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUserStateEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUserStateWApi">
            <summary>
            用户状态(QxUserState)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUserStateWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.BindDdl_UserStateId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.BindCbo_UserStateId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjByUserStateId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserStateId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjByUserStateIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strUserStateId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetUserStateNameByUserStateIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strUserStateId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetNameByUserStateIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strUserStateId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstByUserStateIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserStateId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstByUserStateIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrUserStateId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.DelQxUserStates(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.DelQxUserStatesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUserStateEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUserStateEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.CopyTo(GeneralPlatform.Entity.clsQxUserStateEN,GeneralPlatform.Entity.clsQxUserStateEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUserStateENS">源对象</param>
            <param name = "objQxUserStateENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserStateEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUserStateWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUserStateEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUserState">
            <summary>
            用户状态(QxUserState)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUserState.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsersV2WApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetCreateTime(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strCreateTime">建立时间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetupdateTime(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strupdateTime">修改时间</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setid(GeneralPlatform.Entity.clsQxUsersV2EN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "intid">id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetDepartmentIdInt(GeneralPlatform.Entity.clsQxUsersV2EN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "intDepartmentIdInt">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setname(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strname">姓名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetUserName(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetPassword(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setpsalt(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strpsalt">密码盐值</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetnickName(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strnickName">呢称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetheadImg(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strheadImg">头像</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetEmail(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strEmail">邮箱</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setphone(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strphone">电话号码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setremark(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strremark">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Setstatus(GeneralPlatform.Entity.clsQxUsersV2EN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "intstatus">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetOpenId(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strOpenId">微信openid</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetIsArchive(GeneralPlatform.Entity.clsQxUsersV2EN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "bolIsArchive">是否存档</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetIdentityId(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.SetEffectiveDate(GeneralPlatform.Entity.clsQxUsersV2EN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersV2EN">需要设置字段值的实体对象</param>
            <param name = "strEffectiveDate">有效日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.Update(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUsersV2EN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.GetUniConditionStr(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            获取唯一性条件串--QxUsersV2(用户V2), 即由对象中唯一性条件字段关键字与值组成的条件串
            唯一性条件:name_phone
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_GetConditionString4Constraint)
            </summary>
            <param name = "objQxUsersV2EN">要求唯一的对象</param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUsersV2EN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsersV2EN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUsersV2EN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsersV2WApi">
            <summary>
            用户V2(QxUsersV2)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUsersV2WApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.BindDdl_id(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjByid(System.Int32)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "intid">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjLstByIdLst(System.Collections.Generic.List{System.Int32})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.DelRecord(System.Int32)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.DelQxUsersV2s(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.DelQxUsersV2sByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.AddNewRecord(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.AddNewRecordWithReturnKey(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            把表对象添加到数据库中,并且返回该记录的关键字(针对Identity关键字)
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithReturnKey)
            </summary>
            <param name = "objQxUsersV2EN">需要添加的表对象</param>
            <returns>返回新添加记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.UpdateRecord(GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsersV2EN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUsersV2EN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.IsExist(System.Int32)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.CopyTo(GeneralPlatform.Entity.clsQxUsersV2EN,GeneralPlatform.Entity.clsQxUsersV2EN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUsersV2ENS">源对象</param>
            <param name = "objQxUsersV2ENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsersV2EN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersV2WApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsersV2EN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUsersV2">
            <summary>
            用户V2(QxUsersV2)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUsersV2.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsersWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetUserName(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetPassword(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIsArchive(GeneralPlatform.Entity.clsQxUsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsArchive">是否存档</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetOpenId(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strOpenId">微信openid</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetEmail(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strEmail">邮箱</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetPhoneNumber(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strPhoneNumber">电话号码</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIsSynch(GeneralPlatform.Entity.clsQxUsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSynch">是否同步</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetSynchDate(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strSynchDate">同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetDetailInfoTab(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDetailInfoTab">详细信息表</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIdGradeBase(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdGradeBase">年级流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIdSchool(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdSchool">学校流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">学院Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.Update(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUsersEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUsersEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUsersEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsersEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUsersEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsersWApi">
            <summary>
            用户(QxUsers)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUsersWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.BindDdl_UserId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.BindCbo_UserId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjByUserId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjByUserIdCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strUserId">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetUserNameByUserIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strUserId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetNameByUserIdCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strUserId">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstByUserIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstByUserIdLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrUserId">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.DelQxUserss(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.DelQxUserssByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsersEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUsersEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.CopyTo(GeneralPlatform.Entity.clsQxUsersEN,GeneralPlatform.Entity.clsQxUsersEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUsersENS">源对象</param>
            <param name = "objQxUsersENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsersEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsersWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsersEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUsers">
            <summary>
            用户(QxUsers)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUsers.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetUserId(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetCardNo(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strCardNo">卡号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetIdGradeBase(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdGradeBase">年级流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetCardState(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strCardState">卡状态</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetIsLeaved(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeaved">IsLeaved</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.SetMemo(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.Update(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsQxUsers_SchoolWApi">
            <summary>
            用户_学校(QxUsers_School)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.CheckPropertyNew(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjByUserId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjLstByUserIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.DelQxUsers_Schools(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.DelQxUsers_SchoolsByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.AddNewRecord(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.UpdateRecord(GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.UpdateWithCondition(GeneralPlatform.Entity.clsQxUsers_SchoolEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objQxUsers_SchoolEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.CopyTo(GeneralPlatform.Entity.clsQxUsers_SchoolEN,GeneralPlatform.Entity.clsQxUsers_SchoolEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objQxUsers_SchoolENS">源对象</param>
            <param name = "objQxUsers_SchoolENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsers_SchoolEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsQxUsers_SchoolWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsQxUsers_SchoolEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4QxUsers_School">
            <summary>
            用户_学校(QxUsers_School)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4QxUsers_School.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi">
            <summary>
            v工程用户关系ByRole(vQxPrjUserRelationByRole)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.CopyTo(GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN,GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxPrjUserRelationByRoleENS">源对象</param>
            <param name = "objvQxPrjUserRelationByRoleENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxPrjUserRelationByRoleWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxPrjUserRelationByRoleEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetUserLoginName(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserLoginName">用户登录名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetPassword(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserLoginNameEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserLoginNameEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserLoginNameEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserLoginNameWApi">
            <summary>
            vUserLoginName(vQxUserLoginName)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjByUserLoginName(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserLoginName">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjLstByUserLoginNameLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserLoginName">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserLoginNameEN,GeneralPlatform.Entity.clsvQxUserLoginNameEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserLoginNameENS">源对象</param>
            <param name = "objvQxUserLoginNameENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserLoginNameEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserLoginNameWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserLoginNameEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">IdXzCollege</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetCollegeName(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strCollegeName">CollegeName</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.SetPassword(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRoleRelationEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRoleRelationEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi">
            <summary>
            v用户角色关系(vQxUserRoleRelation)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRoleRelationEN,GeneralPlatform.Entity.clsvQxUserRoleRelationEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRoleRelationENS">源对象</param>
            <param name = "objvQxUserRoleRelationENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRoleRelationEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.ReFreshThisCache(System.String)">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRoleRelationWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRoleRelationEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetRoleENName(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleENName">角色英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetRoleIndex(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "intRoleIndex">角色序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetIsInUse(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "bolIsInUse">是否在使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.SetMenuNum(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByMenuNumEN">需要设置字段值的实体对象</param>
            <param name = "intMenuNum">MenuNum</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi">
            <summary>
            v角色By菜单数(vQxUserRolesByMenuNum)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.BindDdl_RoleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.BindCbo_RoleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjByRoleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strRoleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjLstByRoleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRoleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN,GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRolesByMenuNumENS">源对象</param>
            <param name = "objvQxUserRolesByMenuNumENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByMenuNumWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByMenuNumEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetRoleENName(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleENName">角色英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetRoleIndex(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "intRoleIndex">角色序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetIsInUse(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "bolIsInUse">是否在使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.SetPotenceNum(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumEN">需要设置字段值的实体对象</param>
            <param name = "intPotenceNum">PotenceNum</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi">
            <summary>
            v角色By权限数(vQxUserRolesByPotenceNum)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.BindDdl_RoleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.BindCbo_RoleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjByRoleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strRoleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjLstByRoleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRoleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN,GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRolesByPotenceNumENS">源对象</param>
            <param name = "objvQxUserRolesByPotenceNumENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByPotenceNumWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByPotenceNumEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetRoleENName(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strRoleENName">角色英文名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetRoleIndex(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "intRoleIndex">角色序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetIsInUse(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "bolIsInUse">是否在使用</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetUpdUserId(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUserId">修改用户Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.SetUserNum(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserRolesByUserNumEN">需要设置字段值的实体对象</param>
            <param name = "intUserNum">用户数</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi">
            <summary>
            v角色By用户数(vQxUserRolesByUserNum)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.BindDdl_RoleId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.BindCbo_RoleId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjByRoleId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strRoleId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjLstByRoleIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrRoleId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN,GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserRolesByUserNumENS">源对象</param>
            <param name = "objvQxUserRolesByUserNumENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserRolesByUserNumWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserRolesByUserNumEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsersSimWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUsersSimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersSimEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUsersSimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersSimEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsvQxUsersSimEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersSimEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">学院Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUsersSimEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsersSimWApi">
            <summary>
            v用户Sim(vQxUsersSim)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.BindDdl_UserId(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.BindCbo_UserId(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjByUserId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjLstByUserIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.CopyTo(GeneralPlatform.Entity.clsvQxUsersSimEN,GeneralPlatform.Entity.clsvQxUsersSimEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUsersSimENS">源对象</param>
            <param name = "objvQxUsersSimENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsersSimEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersSimWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsersSimEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsersWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUpDepartmentName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentName">上级部门</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetPassword(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strPassword">口令</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetEffitiveBeginDate(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveBeginDate">有效开始日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetEffitiveEndDate(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strEffitiveEndDate">有效结束日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetOpenId(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strOpenId">微信openid</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetIsSynch(GeneralPlatform.Entity.clsvQxUsersEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "bolIsSynch">是否同步</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetSynchDate(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strSynchDate">同步日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetIdXzCollege(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strIdXzCollege">IdXzCollege</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUsersEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsersEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUsersEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsersWApi">
            <summary>
            v用户(vQxUsers)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjByUserId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjLstByUserIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.CopyTo(GeneralPlatform.Entity.clsvQxUsersEN,GeneralPlatform.Entity.clsvQxUsersEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUsersENS">源对象</param>
            <param name = "objvQxUsersENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsersEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsersWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsersEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetDepartmentId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentId">部门Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetDepartmentName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentName">部门名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetDepartmentAbbrName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentAbbrName">名称缩写</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetDepartmentTypeId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeId">部门类型ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetDepartmentTypeName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strDepartmentTypeName">部门类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUpDepartmentId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentId">所属部门号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUpDepartmentName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpDepartmentName">上级部门</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUserStateId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateId">用户状态Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUserStateName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUserStateName">用户状态名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetIdentityId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityId">身份编号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetIdentityDesc(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdentityDesc">身份描述</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetCardNo(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strCardNo">卡号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetStuTeacherId(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strStuTeacherId">学工号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetIdGradeBase(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strIdGradeBase">年级流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetGradeBaseName(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strGradeBaseName">年级名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetEnterSchoolDate(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strEnterSchoolDate">进校日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetIsOffed(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "bolIsOffed">是否毕业</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetBeginYearMonth(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strBeginYearMonth">开始年月</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetEndYearMonth(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strEndYearMonth">结束年月</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetCardState(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strCardState">卡状态</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetIsLeaved(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "bolIsLeaved">IsLeaved</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUpdDate(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetUpdUser(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strUpdUser">修改用户</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUsers_SchoolEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUsers_SchoolEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi">
            <summary>
            vUsers_School(vQxUsers_School)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjByUserId(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strUserId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjLstByUserIdLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrUserId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.CopyTo(GeneralPlatform.Entity.clsvQxUsers_SchoolEN,GeneralPlatform.Entity.clsvQxUsers_SchoolEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUsers_SchoolENS">源对象</param>
            <param name = "objvQxUsers_SchoolENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsers_SchoolEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUsers_SchoolWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUsers_SchoolEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetIdGradeBase(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strIdGradeBase">年级流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetGradeBaseId(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strGradeBaseId">年级代号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetGradeBaseName(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strGradeBaseName">年级名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetSchoolYear(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolYear">学年</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetSchoolTerm(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strSchoolTerm">学期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetEnterSchoolDate(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strEnterSchoolDate">进校日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetCurrentTermSeq(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "intCurrentTermSeq">当前学期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetExecPlanTermIndex(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "intExecPlanTermIndex">生成执行计划学期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetSetEPTermIndexDate(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strSetEPTermIndexDate">设定执行计划学期日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetIsOffed(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "bolIsOffed">是否毕业</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetModifyDate(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strModifyDate">修改日期</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetModifyUserId(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strModifyUserId">修改人</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetGradeIndex(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Int32,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "intGradeIndex">年级序号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetBeginYearMonth(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strBeginYearMonth">开始年月</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetEndYearMonth(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strEndYearMonth">结束年月</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetAllowUpBaseInfo(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "bolAllowUpBaseInfo">允许修改基本信息</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetGradeBaseNameA(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strGradeBaseNameA">GradeBaseNameA</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetIsVisible(GeneralPlatform.Entity.clsXzGradeBaseEN,System.Boolean,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "bolIsVisible">是否显示</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetIdStudyLevel(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strIdStudyLevel">IdStudyLevel</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetPointCalcVersionId(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strPointCalcVersionId">PointCalcVersionId</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetPrefix(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strPrefix">Prefix</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.SetMemo(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objXzGradeBaseEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.Update(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_Update)
            </summary>
            <param name = "objXzGradeBaseEN">需要添加的实体对象</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.AddNewRecord(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecord)
            </summary>
            <param name = "objXzGradeBaseEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            /// 功能:通过SQL命令来插入记录,其中关键字为表中获取的最大值. 该方式是优化方式
            /// 优点:1、能够处理字段中的单撇问题；2、能够使字段值为NULL的字段无需插入
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_AddNewRecordWithMaxId)
            </summary>
            <param name = "objXzGradeBaseEN">需要添加的实体对象</param>
            <returns>如果插入成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi_Static.UpdateWithCondition(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String)">
            <summary>
            /// 功能:通过SQL命令来修改记录,该方式是非优化方式,根据条件修改记录
            /// 缺点:1、不能处理字段中的单撇问题；2、不能处理脏字段,即只有修改过的字段才需要修改同步到数据库.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_UpdateWithCondition)
            </summary>
            <param name = "objXzGradeBaseEN">需要修改的对象</param>
            <param name = "strWhereCond">修改记录时的条件</param>
            <returns>如果修改成功则返回TRUE,否则为FALSE</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsXzGradeBaseWApi">
            <summary>
            年级(XzGradeBase)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="F:GeneralPlatform4WApi.clsXzGradeBaseWApi.objCommFun4WApi">
            <summary>
            专门在逻辑层用于处理缓存等公共函数的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DefineObjCommFun4BL)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.BindDdl_IdGradeBase(System.Web.UI.WebControls.DropDownList)">
            <summary>
            绑定基于Web的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DdlBindFunction)
            </summary>
            <param name="objDDL">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.BindCbo_IdGradeBase(System.Windows.Forms.ComboBox)">
            <summary>
            绑定基于Win的下拉框
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_TabFeature_ComboBoxBindFunction)
            </summary>
            <param name = "objComboBox">需要绑定当前表的下拉框</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.CheckPropertyNew(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            检查对象字段值是否合法,1)检查是否可空;2)检查字段值长度是否超长,如果出错就抛出错误.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CheckPropertyNew)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjByIdGradeBase(System.String)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "strIdGradeBase">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjByIdGradeBaseCache(System.String)">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyCache)
            </summary>
            <param name = "strIdGradeBase">所给的关键字</param>
            <returns>根据关键字获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetGradeBaseNameByIdGradeBaseCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strIdGradeBase">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetNameByIdGradeBaseCache(System.String)">
            <summary>
            根据关键字获取相关名称, 从缓存的对象列表中获取.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecNameByKeyCache)
            </summary>
            <param name = "strIdGradeBase">所给的关键字</param>
            <returns>根据关键字获取的名称</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstByIdGradeBaseLst(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrIdGradeBase">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstByIdGradeBaseLstCache(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字获取相关对象, 从缓存的对象列表中获取.没有就返回null.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLstCache)
            </summary>
            <param name = "arrIdGradeBase">所给的关键字列表</param>
            <returns>根据关键字列表获取的对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.DelRecord(System.String)">
            <summary>
            根据关键字删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.DelRecords(System.String)">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelRecords)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.DelXzGradeBases(System.Collections.Generic.List{System.String})">
            <summary>
            根据关键字列表删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecord)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.DelXzGradeBasesByCond(System.String)">
            <summary>
            根据条件删除记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_DelMultiRecordByCond)
            </summary>
            <returns>实际删除记录的个数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.AddNewRecord(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.AddNewRecordWithMaxId(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            添加记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_AddNewRecordWithMaxId)
            </summary>
            <returns>新建记录的关键字</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.UpdateRecord(GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            修改记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateRecord)
            </summary>
            <returns>是否成功?</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.UpdateWithCondition(GeneralPlatform.Entity.clsXzGradeBaseEN,System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_UpdateWithCondition)
            </summary>
            <param name = "objXzGradeBaseEN">需要修改的对象</param>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.IsExist(System.String)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.SetFldValue(System.String,System.String,System.String)">
            <summary>
            根据条件设置字段值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_funSetFldValue)
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strValue">值</param>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetMaxStrId">
            <summary>
            获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrId)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetMaxStrIdByPrefix(System.String)">
            <summary>
            根据前缀获取当前表关键字值的最大值,再加1,避免重复
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetMaxStrIdByPrefix)
            </summary>
            <returns>当前表关键字值的最大值,再加1</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.clsGeneCodeBase:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.CopyTo(GeneralPlatform.Entity.clsXzGradeBaseEN,GeneralPlatform.Entity.clsXzGradeBaseEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objXzGradeBaseENS">源对象</param>
            <param name = "objXzGradeBaseENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsXzGradeBaseEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetObjLstCache">
            <summary>
            从缓存中获取所有对象列表.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstCache)
            </summary>
            <returns>从缓存中获取的所有对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsXzGradeBaseWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsXzGradeBaseEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsCommFun4WA4XzGradeBase">
            <summary>
            年级(XzGradeBase)
            数据源类型:表
            (AutoGCLib.CommFun4WA4CSharp:GeneCode_This)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsCommFun4WA4XzGradeBase.ReFreshCache">
            <summary>
            刷新缓存.把当前表的缓存以及该表相关视图的缓存清空.
            (AutoGCLib.CommFun4WA4CSharp:Gen_4CFWA_ReFreshCache)
            </summary>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static">
            <summary>
            静态类
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetmId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngmId">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetUserId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUserId">用户ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetUserName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUserName">用户名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetGroupId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strGroupId">组Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetGroupName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strGroupName">组名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetRoleId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strRoleId">角色Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetRoleName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strRoleName">角色名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetQxPrjId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strQxPrjId">项目Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetPrjName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPrjName">工程名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetPotenceId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceId">权限ID</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetPotenceName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceName">权限名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetPotenceTypeId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeId">权限类型Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetPotenceTypeName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strPotenceTypeName">权限类型名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetMenuId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuId">菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetMenuName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMenuName">菜单名</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetUpMenuId(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strUpMenuId">上级菜单Id</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetRelaMid(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.Int64,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "lngRelaMid">流水号</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetSymbolForProgramme(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolForProgramme">编程标志</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetSymbolName(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strSymbolName">标志名称</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.SetMemo(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,System.String,System.String)">
            <summary>
            /// 功能:为对象设置字段值
            /// 优点:1、可以实现函数节联,多个设置值联在一起写.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_SetFieldValue4OneField)
            </summary>
            <param name = "objvQxUserGroupPotenceEN">需要设置字段值的实体对象</param>
            <param name = "strMemo">备注</param>
            <param name = "strComparisonOp">比较运算符,如果有值,可用于组织条件串</param>
            <returns>返回对象,可以继续连写</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi_Static.GetCombineCondition(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN)">
            <summary>
            根据条件对象中的字段内容组合成一个条件串
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_Static_CombineConditionByCondObj)
            </summary>
            <returns>条件串(strWhereCond)</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi">
            <summary>
            v用户权限关系(vQxUserGroupPotence)
            (AutoGCLib.WA_Access4CSharp:GeneCode)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjBymId(System.Int64)">
            <summary>
            获取当前关键字的记录对象,用对象的形式表示.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjByKeyId)
            </summary>
            <param name = "lngmId">表关键字</param>
            <returns>表对象</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetFirstID(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的关键字值
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstID)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetFirstObj(System.String)">
            <summary>
            获取当前表满足条件的第一条记录的对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFirstObj)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>返回的第一条记录的关键字值</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjLst(System.String)">
            <summary>
            根据条件获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLst)
            </summary>
            <param name = "strWhereCond">给定条件</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjLstByMIdLst(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据关键字列表获取对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByKeyLst)
            </summary>
            <param name = "arrMId">关键字列表</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetTopObjLst(com.taishsoft.common.stuTopPara)">
            <summary>
            根据条件获取顶部对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetTopObjLst)
            </summary>
            <param name = "objTopPara">获取顶部对象列表的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjLstByRange(com.taishsoft.common.stuRangePara)">
            <summary>
            根据条件获取范围内的对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByRange)
            </summary>
            <param name = "objRangePara">根据范围获取记录的参数对象</param>
            <returns>返回对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjLstByPager(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPager)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetObjLstByPagerCache(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据条件分页获取JSON对象列表, 使用缓存
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetObjLstByPagerCache)
            </summary>
            <param name = "objPagerPara">分页获取记录的参数对象</param>
            <returns>返回JSON对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.IsExistRecord(System.String)">
            <summary>
            根据条件判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExistRecord)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.IsExist(System.Int64)">
            <summary>
            根据关键字判断是否存在记录
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_IsExist)
            </summary>
            <returns>是否存在?存在返回True</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetRecCountByCond(System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetRecCountByCond)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetFldValue(System.String,System.String)">
            <summary>
            根据条件获取相关记录数
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetFldValue)
            </summary>
            <param name = "strWhereCond">条件串</param>
            <returns>记录数</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.CopyTo(GeneralPlatform.Entity.clsvQxUserGroupPotenceEN,GeneralPlatform.Entity.clsvQxUserGroupPotenceEN)">
            <summary>
            把同一个类的对象,复制到另一个对象
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_CopyObj_S)
            </summary>
            <param name = "objvQxUserGroupPotenceENS">源对象</param>
            <param name = "objvQxUserGroupPotenceENT">目标对象</param>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.ToDataTable(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserGroupPotenceEN})">
            <summary>
            对象列表 转换为 DataTable数据集合
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ToDataTable)
            </summary>
            <param name="arrObj">原对象列表</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.ReFreshThisCache">
            <summary>
            刷新本类中的缓存.
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_ReFreshThisCache)
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.clsvQxUserGroupPotenceWApi.GetDataTableByObjLst(System.Collections.Generic.List{GeneralPlatform.Entity.clsvQxUserGroupPotenceEN})">
            <summary>
            根据对象列表获取DataTable
            (AutoGCLib.WA_Access4CSharp:Gen_4WA_GetDataTableByObjLst)
            </summary>
            <param name = "arrObjLst">给定的对象列表</param>
            <returns>返回DataTable</returns>
        </member>
        <member name="T:GeneralPlatform4WApi.MenuAndPotence">
            <summary>
            Class1 的摘要说明。
            </summary>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_UserStateId(System.String)">
            <summary>
            返回帐户当前状态号
            </summary>
            <param name="strUserId">帐户名</param>
            <returns>状态号：01表示正常，02表示暂停，0表示没有该用户</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.GetObjLstByJoinUsersV(System.String,System.String)">
            <summary>
            获取用户角色关系表
            </summary>
            <param name="strUserId">帐号</param>
            <param name="strUserPrjId">项目号</param>
            <returns>数据表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_QxUserRoleObjList(System.String,System.String)">
            <summary>
            获取该帐户在本系统中的角色列表，其中包含列：用户号 UserId ，姓名UserName， 角色号RoleId ，角色名称Role
            </summary>
            <param name="strUserId">用户号</param>
            <returns>数据表，其中包含列：用户号 UserId ，姓名UserName， 角色号RoleId ，角色名称Role </returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_RoleIdList(System.String,System.String)">
            <summary>
            获取该帐户在本系统中的角色号RoleId 列表，
            </summary>
            <param name="strUserId">用户号</param>
            <returns>角色号RoleId 的列表 </returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_RoleIdList2(System.String,System.String)">
            <summary>
            获取该帐户在本系统中的角色号RoleId 列表，
            </summary>
            <param name="strUserId">用户号</param>
            <returns>角色号RoleId 的列表 </returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.clsQxUserGroupPotence_GetQxUserGroupPotence(System.String)">
            <summary>
            通过条件获取用户组权限
            </summary>
            <param name="strCondition"></param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_QxUserRolePotence(System.String,System.String)">
            <summary>
            获取角色权限列表
            </summary>
            <param name="strRoleId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_PotenceByRoleId(System.String)">
            <summary>
            获取角色权限列表
            </summary>
            <param name="strRoleId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Change_CurrentUserPassword(System.String,System.String,System.String)">
            <summary>
            修改当前用户的系统口令
            </summary>
            <param name="strCurrUserId">当前用户</param>
            <param name="strOldPassword">用户当前的密码，用以验证</param>
            <param name="strNewPassword">用户需要修改的新密码</param>
            <returns>修改成功，返回true，失败返回false</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Change_UserPassword(System.String,System.String,System.String,System.String)">
            <summary>
            修改给定用户的系统口令
            </summary>
            <param name="strCurrUserId">当前用户名，一般为管理员，操作员等</param>
            <param name="strUserId">被改用户Id</param>
            <param name="strUserNewPassword">被改用户的新密码，用以验证</param>
            <param name="strCurrentUserPassword">当前用户的密码，即操作员的密码，以免非法用户改口令</param>
            <returns>修改成功，返回true，失败返回false</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Check_Login(System.String,System.String,System.String)">
            <summary>
            检查用户当前登陆信息是否正确
            </summary>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Add_UserAndRoleIntoUsersForCurrPrj(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            添加一个用户帐号,并设置角色
            </summary>
            <param name="UserId"></param>
            <param name="UserName"></param>
            <param name="Password"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Delete_RoleForUser(System.String,System.String,System.String)">
            <summary>
            为帐号删除一个角色
            </summary>
            <param name="UserId"></param>
            <param name="RoleId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.DeleteUser(System.String,System.String@)">
            <summary>
            删除当前工程的一个用户帐号，只有当前用户帐号所有工程中均没有角色时，才能删除
            </summary>
            <param name="strUserId"></param>
            <param name="strResult"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Add_RoleForUser(System.String,System.String,System.String)">
            <summary>
            为帐号添加一个当前项目中的角色
            </summary>
            <param name="UserId"></param>
            <param name="RoleId"></param>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.AddaUserIntoUsers(System.String,System.String,System.String)">
            <summary>
            添加一个用户帐号
            </summary>
            <param name="strUserId"></param>
            <param name="strUserName"></param>
            <param name="strPassword"></param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.AddRoleIdForUser(System.String,System.String,System.String)">
            <summary>
            为帐户增加一个角色
            </summary>
            <param name="strUserId"></param>
            <param name="strRoleId"></param>
            <param name="strPrjId"></param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.DelRoleIdForUser(System.String,System.String,System.String)">
            <summary>
            为帐户删除一个角色
            </summary>
            <param name="strUserId"></param>
            <param name="strRoleId"></param>
            <param name="strPrjId"></param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Delete_AllRoleForUser(System.String,System.String)">
            <summary>
            为帐户删除所有角色
            </summary>
            <param name="strUserId"></param>
            <param name="strRoleId"></param>
            <param name="strPrjId"></param>
            <returns></returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.getTodayStr(System.Int32)">
            <summary>
            功能：获取当前日期的字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GeneralPlatform4WApi.MenuAndPotence.Get_QxRoleObjListOfPrj(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GeneralPlatform4WApi.MenuAndPotence.Get_QxRoleUserRelationObjListOfPrj(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:GeneralPlatform4WApi.MenuAndPotence.Get_QxUserObjListOfPrj(System.String)" -->
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_DepartMentObjList">
            <summary>
            获取所有部门的对象列表
            </summary>
            <returns>对象列表</returns>
        </member>
        <member name="M:GeneralPlatform4WApi.MenuAndPotence.Get_QxUserStateObjList">
            <summary>
            获取用户状态对象列表
            </summary>
            <returns>对象列表</returns>
        </member>
    </members>
</doc>
