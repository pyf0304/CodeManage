
@page
@{
    Layout = "~/Pages/Shared/_Layout_Empty.cshtml";
    ViewData["Title"] = "学术期刊维护";
}
@section Styles{
    <link rel="stylesheet" href="../lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="../css/site.css" />
    <link rel="shortcut icon" href="~/images/favicon.ico" type="image/x-icon" />
}
@section Scripts{
    <script src="~/lib/xlsx.core.min.js" type="text/javascript"></script>
    <script src="~/lib/xlsx.full.min.js" type="text/javascript"></script>
    <script src="../lib/require/require.js" data-main="../js/src/config"></script>
}
<script>
    //所有用户自定义的JS函数建议都放在这里


</script>
<script>

    /*
     按钮单击,用于调用Js函数中btn_Click
    (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btn_Click)
    */
    function btn_Click(strCommandName, strKeyId) {
        require(["../js/GraduateEduPaper/AcademicJournalsCRUDEx.js"], function (academicjournals) {
            academicjournals.AcademicJournalsCRUDEx.btn_Click(strCommandName, strKeyId);
        });
    }

    /*
     页面导入-在导入页面后运行的函数
    (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_Page_Load)
    */
    window.onload = function () {
        require(["../js/GraduateEduPaper/AcademicJournalsCRUDEx.js"], function (academicjournals) {
            var objPage = new academicjournals.AcademicJournalsCRUDEx();
            objPage.Page_Load_Cache();
        });
        document.getElementById('ExcelFile').addEventListener('change', function (e) {
            var files = e.target.files;
            if (files.length == 0) return;
            var f = files[0];
            if (!/\.xlsx$/g.test(f.name)) {
                alert('仅支持读取xlsx格式！');
                return;
            }
            readWorkbookFromLocalFile(f, function (workbook) {
                readWorkbook(workbook);
            });
        });
    }
</script>
<script>
// 将一个sheet转成最终的excel文件的blob对象，然后利用URL.createObjectURL下载
function sheet2blob(sheet, sheetName)
{
sheetName = sheetName || 'sheet1';
var workbook = {
SheetNames: [sheetName],
Sheets: {}
};
workbook.Sheets[sheetName] = sheet;
// 生成excel的配置项
var wopts = {
bookType: 'xlsx', // 要生成的文件类型
bookSST: false, // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性
type: 'binary'
};
var wbout = XLSX.write(workbook, wopts);
var blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
// 字符串转ArrayBuffer
function s2ab(s)
{
var buf = new ArrayBuffer(s.length);
var view = new Uint8Array(buf);
for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
return buf;
}
return blob;
}
@*/**
* 通用的打开下载对话框方法，没有测试过具体兼容性
* @param url 下载地址，也可以是一个blob对象，必选
* @param saveName 保存文件名，可选
*/*@
function openDownloadDialog(url, saveName)
{
if (typeof url == 'object' && url instanceof Blob) {
url = URL.createObjectURL(url); // 创建blob地址
}
var aLink = document.createElement('a');
aLink.href = url;
aLink.download = saveName || ''; // HTML5新增的属性，指定保存文件名，可以不要后缀，注意，file:///模式下不会生效
var event;
if (window.MouseEvent) event = new MouseEvent('click');
else {
event = document.createEvent('MouseEvents');
event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
}
aLink.dispatchEvent(event);
}
//所有用户自定义的JS函数建议都放在这里
function exportSpecialExcel_pyf(arrData, strFileName)
{
var sheet = XLSX.utils.aoa_to_sheet(arrData);
    openDownloadDialog(sheet2blob(sheet), strFileName);
}
</script>


<script>

    function selectFile() {
        document.getElementById('ExcelFile').click();
    }
    //// 读取本地excel文件
    function readWorkbookFromLocalFile(file, callback) {
        var reader = new FileReader();
        reader.onload = function (e) {
            var data = e.target.result;
            var workbook = XLSX.read(data, { type: 'binary' });
            if (callback) callback(workbook);
        };
        reader.readAsBinaryString(file);
    }
    var strCsv = "";
    function readWorkbook(workbook) {
        var sheetNames = workbook.SheetNames; // 工作表名称集合
        var worksheet = workbook.Sheets[sheetNames[0]]; // 这里我们只读取第一张sheet
        var csv = XLSX.utils.sheet_to_csv(worksheet);
        console.log(csv);
        //var myType = typeof csv;
        //console.log("myType:", myType);
        //var strUserId = "pyf-Test";
        //var a = 3;
        //var b = 4;

        //require(["../js/TS/L3_ForWApiEx/BaseInfo/clsTeacherInfoExWApi.js"], function (teacherinfo) {
        //    teacherinfo.clsTeacherInfoExWApi.ImportDataFromCsv(csv, strUserId);
        //});
        document.getElementById('ExcelData').innerHTML = csv2table(csv);
        strCsv = csv;
    }
    // 将csv转换成表格
    function csv2table(csv) {
        var html = '<table>';
        var rows = csv.split('\n');
        rows.pop(); // 最后一行没用的
        rows.forEach(function (row, idx) {
            var columns = row.split(',');
            columns.unshift(idx + 1); // 添加行索引
            //if (idx == 0) { // 添加列索引
            //    html += '<tr> ';
            //    for (var i = 0; i < columns.length; i++) {
            //        html += '<th>' + (i == 0 ? '' : String.fromCharCode(65 + i - 1)) + '</th>';
            //    }
            //    html += '</tr>';
            //}
            html += '<tr>';
            columns.forEach(function (column) {
                html += '<td>' + column + '</td>';
            });
            html += '</tr>';
        });
        html += '</table>';
        return html;
    }
</script>
<div id="tabLayout" class="tab_layout">
    @*-- 标题层 --*@

    <div style="position: relative; width: 648px; height: 37px; left: 0px; top: 0px;">
        <Label id="lblViewTitle" name="lblViewTitle" class="h5">
            学术期刊维护
        </Label>
        <Label id="lblMsg_List" name="lblMsg_List" class="text-warning" style="width:250px;">
        </Label>
    </div>
    @*-- 查询层 --*@

    <div id="divQuery" class="div_query">
        <table id="tabEdit" style="width:900px" class="table table-bordered table-hover table td table-sm">
            <tr>
                <td class="text-right">
                    <Label id="lblJournalId_q" name="lblJournalId_q" class="col-form-label text-right" style="width:90px;">
                        期刊Id
                    </Label>
                </td>
                <td class="text-left">
                    <input id="txtJournalId_q" name="txtJournalId_q" class="form-control-sm" style="width:120px;" />
                </td>
                <td class="text-right">
                    <Label id="lblJournalName_q" name="lblJournalName_q" class="col-form-label text-right" style="width:90px;">
                        期刊名称
                    </Label>
                </td>
                <td class="text-left">
                    <input id="txtJournalName_q" name="txtJournalName_q" class="form-control-sm" style="width:120px;" />
                </td>
                <td class="text-right">
                    <Label id="lblJournalSubjectCategoryId_q" name="lblJournalSubjectCategoryId_q" class="col-form-label text-right" style="width:90px;">
                        期刊学科门类Id
                    </Label>
                </td>
                <td class="text-left">
                    <select id="ddlJournalSubjectCategoryId_q" name="ddlJournalSubjectCategoryId_q" class="form-control-sm" style="width:120px;"></select>
                </td>
                <td class="text-right">
                    <Label id="lblJournalSubjectId_q" name="lblJournalSubjectId_q" class="col-form-label text-right" style="width:90px;">
                        期刊学科Id
                    </Label>
                </td>
                <td class="text-left">
                    <select id="ddlJournalSubjectId_q" name="ddlJournalSubjectId_q" class="form-control-sm" style="width:120px;"></select>
                </td>
            </tr>
        </table>
    </div>
    @*-- 功能区 --*@

    <div id="divFunction" class="table table-bordered table-hover">
        <ul class="nav">
            <li class="nav-item">
                <Label id="lblAcademicJournalsList" name="lblAcademicJournalsList" class="col-form-label text-info" style="width:250px;">
                    学术期刊列表
                </Label>
            </li>
            <li class="nav-item ml-3">
                <button id="btnQuery" name="btnQuery" class="btn btn-outline-info btn-sm text-nowrap" onclick="btn_Click('Query')">查询</button>
            </li>
            <li class="nav-item ml-3">
                <button id="btnAddNewRecordWithMaxId" name="btnAddNewRecordWithMaxId" class="btn btn-outline-info btn-sm text-nowrap" onclick="btn_Click('AddNewRecordWithMaxId')">添加-关键字自增</button>
            </li>
            <li class="nav-item ml-3">
                <button id="btnCopyRecord" name="btnCopyRecord" class="btn btn-outline-info btn-sm text-nowrap" onclick="btn_Click('Clone')">复制记录</button>
            </li>
            <li class="nav-item ml-3">
                <button id="btnUpdateRecord" name="btnUpdateRecord" class="btn btn-outline-info btn-sm text-nowrap" onclick="btn_Click('Update')">修改</button>
            </li>
            <li class="nav-item ml-3">
                <button id="btnDelRecord" name="btnDelRecord" class="btn btn-outline-info btn-sm text-nowrap" onclick="btn_Click('Delete')">删除</button>
            </li>
            <li class="nav-item ml-3">
                <button id="btnExportExcel" name="btnExportExcel" class="btn btn-outline-warning btn-sm text-nowrap" onclick="btn_Click('ExportExcel')">导出Excel</button>
            </li>

            <li class="nav-item ml-3">
                <button id="btnImportDataFromExcel" name="btnImportDataFromExcel" class="btn btn-outline-warning btn-sm text-nowrap" onclick="btn_Click('ImportDataFromExcel')">导入Excel</button>
            </li>

        </ul>
    </div>

    <div id="divImportExcel" class="table table-bordered table-hover" style="display:none">
        <ul class="nav">

            <li class="nav-item ml-3">
                <input type="file" id="ExcelFile" style="display:none;" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">
                <a href="javascript:selectFile()">选择Excel</a>

            </li>

            <li class="nav-item ml-3">
                <button id="btnImportData" name="btnImportData" class="btn btn-outline-warning btn-sm text-nowrap" onclick="btn_Click('ImportData')">导入数据</button>
            </li>

            <li class="nav-item ml-3">
                <button id="btnCloseExcelDiv" name="btnCloseExcelDiv" class="btn btn-outline-warning btn-sm text-nowrap" onclick="btn_Click('CloseExcelDiv')">关闭</button>
            </li>
        </ul>
        <div id="ExcelData"></div>

    </div>
    @*-- 列表层 --*@
    <div id="divList" class="div_List">
        <div id="divDataLst" class="div_List">
        </div>
        <div id="divPager" class="pager">
        </div>
    </div>
    @*-- 编辑层 --*@
    <div id="divEdit" value="1"></div>
</div>
<input id="hidOpType" type="hidden" />
<input id="hidKeyId" type="hidden" />
<input id="hidCurrPageIndex" type="hidden" value="1" />
<input id="hidSortAcademicJournalsBy" type="hidden" value="" />