@page
@{
    Layout = "~/Pages/Shared/_Layout_PC.cshtml";
    ViewData["Title"] = "系统分数汇总表";
}
@section Styles{
    <script type="text/javascript" src="../lib/jquery-1.6.min.js"></script>
    <link rel="stylesheet" href="../lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="../css/site.css" />
    <link rel="stylesheet" href="~/lib/Xadmin/css/font.css">
    <link rel="stylesheet" href="~/lib/Xadmin/css/xadmin.css">
    <link rel="stylesheet" type="text/css" href="../css/SimpleTree.css">
    @*<link rel="stylesheet" href="~/css/comment.css">*@

    <!-- <link rel="stylesheet" href="./css/theme5.css"> -->
    <link href="~/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="~/css/public.css" />
    <link href="~/css/font-awesome.min.css" rel="stylesheet" type="text/css">


    <style>
        .panel-default {
            border: none;
            border-radius: 0px;
            margin-bottom: 0px;
            box-shadow: none;
            -webkit-box-shadow: none;
        }

            .panel-default > .panel-heading {
                color: #777;
                background-color: #fff;
                border-color: #e6e6e6;
                padding: 10px 10px;
            }

            .panel-default > .panel-body {
                padding: 10px;
                padding-bottom: 0px;
            }

                .panel-default > .panel-body ul {
                    overflow: hidden;
                    padding: 0;
                    margin: 0px;
                    margin-top: -5px;
                }

                    .panel-default > .panel-body ul li {
                        line-height: 27px;
                        list-style-type: none;
                        white-space: nowrap;
                        text-overflow: ellipsis;
                    }

                        .panel-default > .panel-body ul li .time {
                            color: #a1a1a1;
                            float: right;
                            padding-right: 5px;
                        }
    </style>

    <style>
        .layui-table td, .layui-table th {
            position: relative;
            padding: 9px 15px;
            min-height: 20px;
            line-height: 20px;
            font-size: 5px;
        }

        #tbList img {
            max-width: 600px;
        }

        .TablePaper {
            border: 1px solid #666;
            border-collapse: collapse;
            margin: auto;
        }

            .TablePaper tr td {
                border: 1px solid #666;
            }

            .TablePaper tr th {
                border: 1px solid #666;
                border-radius: 10px;
            }

        .layui-table {
            width: 100%;
            background-color: #fff;
            color: #666;
        }
    </style>

}
@section Scripts{

    <script src="~/lib/Xadmin/lib/layui/layui.js" charset="utf-8"></script>
    <script type="text/javascript" src="~/lib/Xadmin/js/xadmin.js"></script>

    @*<script src="../lib/jquery/dist/jquery.js"></script>*@
    @*<script src="../lib/bootstrap/dist/js/bootstrap.js"></script>
        <script src="../js/site.js" asp-append-version="true"></script>
        <script src="../lib/bootstrap/dist/js/popper.js"></script>*@
    <!--人员关系图表展示 js-->
    <script src="~/lib/echarts.js"></script>
    <!--图表展示 js-->
    <script type="text/javascript" src="~/lib/charts/Chart.min.js"></script>
    <script type="text/javascript" src="~/lib/charts/utils.js"></script>

    <!-- 导出wordjs-->
    <script src="~/lib/FileSaver.js"></script>
    <script src="~/lib/jquery.wordexport.js"></script>

    <!--文件上传-->
    <script src="../lib/jquery-form.js"></script>

    <script src="../lib/require/require.js" data-main="../js/src/config"></script>
}
<script>
    var nodeLength = 0;
    var strUserRelax_y = [];
    //同步回答统计记录
    function UserRelaCanvas(strUserInfo1Json, strUserInfo2Json, strUserRelaJson, strUserId) {

        var graph = {  //这是数据项目中一般都是获取到的
            nodes: strUserInfo1Json,
            links: strUserRelaJson

        }
        //var myChart;
        //if ($("#hidQueryStata").val() == "1") {
        //    myChart = echarts.init(document.getElementById('main'));
        //    myChart = echarts.init(document.getElementById('mainUserRela'));
        //}
        //else {
        //    myChart = echarts.init(document.getElementById('mainUserRela'));
        //}
        var myChart = echarts.init(document.getElementById('mainUserRela'));
        
        var categories = strUserInfo2Json;

        var winWidth = document.body.clientWidth;
        var winHeight = document.body.clientHeight;

        nodeLength = 0;
        graph.nodes.forEach(function (node) {
            if ($("#hidQueryStata").val() == "2") {
                node.x = parseInt(Math.random() * 1000);  //这里是最重要的如果数据中有返回节点x,y位置这里就不用设置，如果没有这里一定要设置node.x和node.y，不然无法定位节点 也实现不了拖拽了；
                node.y = parseInt(Math.random() * 1000);
            }
            nodeLength++;
            //if (node.attributes.modularity_class != 0) {
            if (node.id != strUserId) {
                node.symbolSize = [42, 42];
                node.sizeFlag = [42, 42];
            } else {
                node.symbolSize = [64, 64];
                node.sizeFlag = [64, 64];
            }
            node.category = node.attributes.modularity_class;
            node.label = {
                normal: {
                    show: true
                }
            }
        });
        var option = {    //这里是option配置
            legend: [{    //图例组件
                data: categories.map(function (a) {
                    return a.name;
                }),
                top: 0,
                left: (winWidth - 1300) / 2,         //这里是图例组件定位使用的，自定义
                itemGap: 26,
                textStyle: {
                    padding: [0, 12]
                },
                backgroundColor: '#f5f5f5'
            }],
            animationDurationUpdate: 1500,
            animationEasingUpdate: 'quinticInOut',
            series: [
                {
                    type: 'graph',
                    layout: 'none',           //因为节点的位置已经有了就不用在这里使用布局了
                    circular: { rotateLabel: true },
                    animation: false,
                    data: graph.nodes,
                    links: graph.links,
                    categories: categories,   //节点分类的类目
                    roam: true,   //添加缩放和移动
                    draggable: false,   //注意这里设置为false，不然拖拽鼠标和节点有偏移
                    label: {
                        normal: {
                            position: 'bottom',
                            rich: {
                                bg: {
                                    backgroundColor: '#f5f5f5'
                                }
                            }
                        }
                    }
                }
            ]
        };
        myChart.setOption(option);
        initInvisibleGraphic();
        function initInvisibleGraphic() {
            // Add shadow circles (which is not visible) to enable drag.
            myChart.setOption({
                graphic: echarts.util.map(option.series[0].data, function (item, dataIndex) {
                    //使用图形元素组件在节点上划出一个隐形的图形覆盖住节点
                    var tmpPos = myChart.convertToPixel({ 'seriesIndex': 0 }, [item.x, item.y]);
                    return {
                        type: 'circle',
                        id: dataIndex,
                        position: tmpPos,
                        shape: {
                            cx: 0,
                            cy: 0,
                            r: 20
                        },
                        // silent:true,
                        invisible: true,
                        draggable: true,
                        ondrag: echarts.util.curry(onPointDragging, dataIndex),
                        z: 100              //使图层在最高层
                    };
                })
            });
            window.addEventListener('resize', updatePosition);
            myChart.on('dataZoom', updatePosition);
        }
        myChart.on('graphRoam', updatePosition);
        function updatePosition() {    //更新节点定位的函数
            myChart.setOption({
                graphic: echarts.util.map(option.series[0].data, function (item, dataIndex) {
                    var tmpPos = myChart.convertToPixel({ 'seriesIndex': 0 }, [item.x, item.y]);
                    return {
                        position: tmpPos
                    };
                })
            });

        }



        function onPointDragging(dataIndex) {      //节点上图层拖拽执行的函数
            var tmpPos = myChart.convertFromPixel({ 'seriesIndex': 0 }, this.position);
            option.series[0].data[dataIndex].x = tmpPos[0];
            option.series[0].data[dataIndex].y = tmpPos[1];

            strUserRelax_y = [];
            for (i = 0; i < nodeLength; i++) {
                //for (i = 0; i < option.series[0].data.nodeLength; i++) {
                var strUserId = option.series[0].data[i].id;
                var strX = option.series[0].data[i].x;
                var strY = option.series[0].data[i].y;
                strUserRelax_y.push({ 'id': strUserId, 'x': strX, 'y': strY });
            }
            myChart.setOption(option);
            updatePosition();
        }

    }

    /*
   查询记录
  (AutoGCLib.WA_ViewScript_TS4CSharp:btnGetUserRela_Click)
  */
    function btnGetUserRela_Click() {
        require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (UserRela) {
            var objPage = new UserRela.SysScoreSummaryNewTotal();
            objPage.GetUserRela();
        });
    }
    //系统智能排列
    function li_IntelligenceArray_Click() {
        $("#hidQueryStata").val("1");
        $("#btnSaveUserRela").hide();

        //先清除背景色
        //$("#li_IntelligenceArray").removeClass("btn-info");
        $("#li_RandomArray").removeClass("btn-info");
        $("#li_UserArray").removeClass("btn-info");

        //添加背景色
        $("#li_IntelligenceArray").addClass("btn-info");

        this.btnGetUserRela_Click();
    }
    //系统随机排列
    function li_RandomArray_Click() {
        $("#hidQueryStata").val("2");
        $("#btnSaveUserRela").show();

        //先清除背景色
        $("#li_IntelligenceArray").removeClass("btn-info");
        //$("#li_RandomArray").removeClass("btn-info");
        $("#li_UserArray").removeClass("btn-info");

        //添加背景色
        $("#li_RandomArray").addClass("btn-info");

        this.btnGetUserRela_Click();
    }

    //用户保存关系图
    function li_UserArray_Click() {
        $("#hidQueryStata").val("3");
        $("#btnSaveUserRela").hide();

        //先清除背景色
        $("#li_IntelligenceArray").removeClass("btn-info");
        $("#li_RandomArray").removeClass("btn-info");
        //$("#li_UserArray").removeClass("btn-info");

        //添加背景色
        $("#li_UserArray").addClass("btn-info");

        this.btnGetUserRela_Click();
    }
    //同步回答统计记录
    function btnSynUserRelaNum_Click() {
        require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (UserRela) {
            var objPage = new UserRela.SysScoreSummaryNewTotal();
            objPage.btnSynUserRelaNum_Click();
        });
    }
    //保存当前排列关系图
    function btnSaveUserRela_Click() {
        //var strJson = "";
        //for (i = 0; i < strUserRelax_y.le; i++) {

        //}
        if (strUserRelax_y.length == 0) {
            Alert_layer(2, "请修改拖动关系图然后再保存!");
        } else {
            require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (UserRela) {
                var objPage = new UserRela.SysScoreSummaryNewTotal();
                objPage.btnSaveUserRela_Click(strUserRelax_y);
            });
        }
    }

    function Alert_layer(strIcon, strMsg) {

        layer.msg(strMsg, {
            icon: strIcon,
            time: 2000
        });
    }
</script>


<script>
    //教学班用户观点数排序统计
    var clsTooltips = function () {
        this.colors = [];
        this.Text = "";
        this.value = 0.0;
        this.body = [];
    }
    var customTooltips = function (tooltip) {
        // Tooltip Element
        var tooltipEl = document.getElementById('chartjs-tooltip');

        if (!tooltipEl) {
            tooltipEl = document.createElement('div');
            tooltipEl.id = 'chartjs-tooltip';
            tooltipEl.innerHTML = '<table></table>';
            this._chart.canvas.parentNode.appendChild(tooltipEl);
        }

        // Hide if no tooltip
        if (tooltip.opacity === 0) {
            tooltipEl.style.opacity = 0;
            return;
        }

        // Set caret Position
        tooltipEl.classList.remove('above', 'below', 'no-transform');
        if (tooltip.yAlign) {
            tooltipEl.classList.add(tooltip.yAlign);
        } else {
            tooltipEl.classList.add('no-transform');
        }

        function getBody(bodyItem) {
            return bodyItem.lines;
        }

        // Set Text
        if (tooltip.body) {
            var titleLines = tooltip.title || [];
            var bodyLines = tooltip.body.map(getBody);
            var arrBodyLines = new Array();
            bodyLines.forEach(function (body, i) {
                var objTooltips = new clsTooltips();
                objTooltips.colors = tooltip.labelColors[i];
                objTooltips.body = body;
                var arr = body[0].split(':');
                if (arr.length == 2) {
                    objTooltips.Text = arr[0];
                    objTooltips.value = Number(arr[1]);
                }
                arrBodyLines.push(objTooltips);
            });
            arrBodyLines = arrBodyLines.sort(function (x, y) { return y.value - x.value; });
            var innerHtml = '<thead>';

            titleLines.forEach(function (title) {
                innerHtml += '<tr><th>' + title + '</th></tr>';
            });
            innerHtml += '</thead><tbody>';
            console.log('bodyLines', bodyLines);
            //bodyLines.forEach(function (body, i) {
            //    console.log('body', body);
            //    var colors = tooltip.labelColors[i];
            //    var style = 'background:' + colors.backgroundColor;
            //    style += '; border-color:' + colors.borderColor;
            //    style += '; border-width: 2px';
            //    var span = '<span class="chartjs-tooltip-key" style="' + style + '"></span>';
            //    innerHtml += '<tr><td>' + span + body + '</td></tr>';
            //});
            arrBodyLines.forEach(function (objInFor, i) {
                console.log('objInFor', objInFor);
                //var colors = tooltip.labelColors[i];
                var style = 'background:' + objInFor.colors.backgroundColor;
                style += '; border-color:' + objInFor.colors.borderColor;
                style += '; border-width: 2px';
                var span = '<span class="chartjs-tooltip-key" style="' + style + '"></span>';
                innerHtml += '<tr><td>' + span + objInFor.body + '</td></tr>';
            });


            innerHtml += '</tbody>';

            var tableRoot = tooltipEl.querySelector('table');
            tableRoot.innerHTML = innerHtml;
        }

        var positionY = this._chart.canvas.offsetTop;
        var positionX = this._chart.canvas.offsetLeft;

        // Display, position, and set styles for font
        tooltipEl.style.opacity = 1;
        tooltipEl.style.left = positionX + tooltip.caretX + 'px';
        tooltipEl.style.top = positionY + tooltip.caretY + 'px';
        tooltipEl.style.fontFamily = tooltip._bodyFontFamily;
        tooltipEl.style.fontSize = tooltip.bodyFontSize + 'px';
        tooltipEl.style.fontStyle = tooltip._bodyFontStyle;
        tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';
    };
    //所有学生各观点统计
    function Canvas3(strlabelsJson, strdatasetsJson, Number, strUserIdorCurrEduClsId) {
        var config = {
            type: 'line',
            data: {
                labels: strlabelsJson,
                datasets: strdatasetsJson
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: ''
                    //text: '当前教学班所有用户周期统计'
                },
                //tooltips: {
                //    mode: 'index',
                //    intersect: false,
                //},
                tooltips: {
                    enabled: false,
                    mode: 'index',
                    position: 'nearest',
                    custom: customTooltips
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }
        };

        //删除创建的Canvas
     //  $('#Canvas3').remove();
        //先删除、再创建防止重复；
        //$('#div_Canvas3').html('<canvas id="Canvas3" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        //需要显示所有数据；

        $('#div_Canvas3').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 1900px; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);



        ////加载完毕后，调用图片上传方法； -----------------临时注释1211
        //btnExportWord_Click();
        //setTimeout(btnExportWord_Click(), 2000);

    }


    //各观点教学班统计 ---教学班周观点数统计图Canvas2
    function Canvas2(strlabelsJson, strdatasetsJson, strColorJson, Number, strUserIdorCurrEduClsId) {

        var config = {
            "type": "bar",
            "data":
            {
                "labels": strlabelsJson,
                "datasets": [{
                    "label": "周记录",
                    "data": strdatasetsJson,
                    "fill": false,
                    "borderWidth": 1,
                    "backgroundColor": strColorJson

                }]
            },
            "options":
            {
                "scales":
                {
                    "yAxes":
                        [{
                            "ticks":
                                { "beginAtZero": true }
                        }]
                }
            }
        };

        $('#main').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);
    }

    //教学班周教师打分平均分 --- 教学班周均分趋势图 Canvas4
    function Canvas4(strlabelsJson, strdatasetsJson, strColorJson, Number, strUserIdorCurrEduClsId) {

        var config = {
            "type": "line",
            "data":
            {
                "labels": strlabelsJson,
                "datasets": [{
                    "label": "周均分",
                    "data": strdatasetsJson,
                    "fill": false,
                    "borderWidth": 1,
                    "backgroundColor": strColorJson
                }]
            }
            ,
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: ''
                    //text: '当前教学班所有用户周期统计'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }

        };

        $('#main').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);

        //$('#div_Canvas4').html('<canvas id="Canvas4" height="350" style="height: 350px; width: 100%;"></canvas>');
        //var ctx = document.getElementById("Canvas4");
        //ctx.getContext("2d");
        ////ctx.scrollHeight = 350;
        //window.myLine = new Chart(ctx, config);
        //ctx.height(400);
    }

    //教学班周评论数统计图 Canvas5
    //教学班评论统计
    function Canvas5(strlabelsJson, strdatasetsJson, strColorJson, Number, strUserIdorCurrEduClsId) {
        var config = {
            "type": "bar",
            "data":
            {
                "labels": strlabelsJson,
                "datasets": [{
                    "label": "周评论",
                    "data": strdatasetsJson,
                    "fill": false,
                    "borderWidth": 1,
                    "backgroundColor": strColorJson

                    //"backgroundColor":
                    //    ["rgba(255, 99, 132, 0.2)",
                    //    "rgba(255, 159, 64, 0.2)",
                    //    "rgba(255, 205, 86, 0.2)",
                    //    "rgba(75, 192, 192, 0.2)",
                    //    "rgba(54, 162, 235, 0.2)",
                    //    "rgba(153, 102, 255, 0.2)",
                    //    "rgba(201, 203, 207, 0.2)"],
                    //"borderColor":
                    //    ["rgb(255, 99, 132)",
                    //    "rgb(255, 159, 64)",
                    //    "rgb(255, 205, 86)",
                    //    "rgb(75, 192, 192)",
                    //    "rgb(54, 162, 235)",
                    //    "rgb(153, 102, 255)",
                    //        "rgb(201, 203, 207)"],
                }]
            },
            "options":
            {
                "scales":
                {
                    "yAxes":
                        [{
                            "ticks":
                                { "beginAtZero": true }
                        }]
                }
            }
        };
        $('#main').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);
    }


    //教学班用户排序统计
    var clsTooltips6 = function () {
        this.colors = [];
        this.Text = "";
        this.value = 0.0;
        this.body = [];
    }
    //Chart.defaults.global.pointHitDetectionRadius = 1;

    var customTooltips6 = function (tooltip) {
        // Tooltip Element
        var tooltipEl = document.getElementById('chartjs-tooltip6');

        if (!tooltipEl) {
            tooltipEl = document.createElement('div');
            tooltipEl.id = 'chartjs-tooltip6';
            tooltipEl.innerHTML = '<table></table>';
            this._chart.canvas.parentNode.appendChild(tooltipEl);
        }

        // Hide if no tooltip
        if (tooltip.opacity === 0) {
            tooltipEl.style.opacity = 0;
            return;
        }

        // Set caret Position
        tooltipEl.classList.remove('above', 'below', 'no-transform');
        if (tooltip.yAlign) {
            tooltipEl.classList.add(tooltip.yAlign);
        } else {
            tooltipEl.classList.add('no-transform');
        }

        function getBody(bodyItem) {
            return bodyItem.lines;
        }

        // Set Text
        if (tooltip.body) {
            var titleLines = tooltip.title || [];
            var bodyLines = tooltip.body.map(getBody);
            var arrBodyLines = new Array();
            bodyLines.forEach(function (body, i) {
                var objTooltips = new clsTooltips6();
                objTooltips.colors = tooltip.labelColors[i];
                objTooltips.body = body;
                var arr = body[0].split(':');
                if (arr.length == 2) {
                    objTooltips.Text = arr[0];
                    objTooltips.value = Number(arr[1]);
                }
                arrBodyLines.push(objTooltips);
            });
            arrBodyLines = arrBodyLines.sort(function (x, y) { return y.value - x.value; });
            var innerHtml = '<thead>';

            titleLines.forEach(function (title) {
                innerHtml += '<tr><th>' + title + '</th></tr>';
            });
            innerHtml += '</thead><tbody>';
            console.log('bodyLines', bodyLines);
            //bodyLines.forEach(function (body, i) {
            //    console.log('body', body);
            //    var colors = tooltip.labelColors[i];
            //    var style = 'background:' + colors.backgroundColor;
            //    style += '; border-color:' + colors.borderColor;
            //    style += '; border-width: 2px';
            //    var span = '<span class="chartjs-tooltip-key" style="' + style + '"></span>';
            //    innerHtml += '<tr><td>' + span + body + '</td></tr>';
            //});
            arrBodyLines.forEach(function (objInFor, i) {
                console.log('objInFor', objInFor);
                //var colors = tooltip.labelColors[i];
                var style = 'background:' + objInFor.colors.backgroundColor;
                style += '; border-color:' + objInFor.colors.borderColor;
                style += '; border-width: 2px';
                var span = '<span class="chartjs-tooltip-key6" style="' + style + '"></span>';
                innerHtml += '<tr><td>' + span + objInFor.body + '</td></tr>';
            });


            innerHtml += '</tbody>';

            var tableRoot = tooltipEl.querySelector('table');
            tableRoot.innerHTML = innerHtml;
        }

        var positionY = this._chart.canvas.offsetTop;
        var positionX = this._chart.canvas.offsetLeft;

        // Display, position, and set styles for font
        tooltipEl.style.opacity = 1;
        tooltipEl.style.left = positionX + tooltip.caretX + 'px';
        tooltipEl.style.top = positionY + tooltip.caretY + 'px';
        tooltipEl.style.fontFamily = tooltip._bodyFontFamily;
        tooltipEl.style.fontSize = tooltip.bodyFontSize + 'px';
        tooltipEl.style.fontStyle = tooltip._bodyFontStyle;
        tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';
    };
    //用户周评论数统计图 canvas06
    //所有学生各观点统计
    function Canvas6(strlabelsJson, strdatasetsJson, Number, strUserIdorCurrEduClsId) {
        var config = {
            type: 'line',
            data: {
                labels: strlabelsJson,
                datasets: strdatasetsJson
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: ''
                    //text: '当前教学班所有用户周期统计'
                },
                //tooltips: {
                //    mode: 'index',
                //    intersect: false,
                //},
                tooltips: {
                    enabled: false,
                    mode: 'index',
                    position: 'nearest',
                    custom: customTooltips6
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }
        };

        $('#main').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);
    }


    //用户周讨论回答统计图canvas07
    //所有学生各观点统计
    function Canvas7(strlabelsJson, strdatasetsJson, Number, strUserIdorCurrEduClsId) {
        var config = {
            type: 'line',
            data: {
                labels: strlabelsJson,
                datasets: strdatasetsJson
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: ''
                    //text: '当前教学班所有用户周期统计'
                },
                //tooltips: {
                //    mode: 'index',
                //    intersect: false,
                //},
                tooltips: {
                    enabled: false,
                    mode: 'index',
                    position: 'nearest',
                    custom: customTooltips6
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Week'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }
        };

        $('#main').append('<canvas id="Canvas' + Number + '" typename="' + strUserIdorCurrEduClsId + '" style="height: 550px; width: 100%; padding-right: 10px;"></canvas>');
        var ctx = document.getElementById("Canvas" + Number).getContext("2d");

        window.myLine = new Chart(ctx, config);
    }

    //转码为文件
    function dataURLtoBlob(dataurl) {
        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new Blob([u8arr], { type: mime });
    }


    //测试根据Canvas画布生成图片 把图片存放指定文件夹到；
    function btnExportWord_Click() {
        var oCanvas = document.getElementById("Canvas3");
        if (oCanvas != null) {
            //得到图片64位字符串
            var Base64Data = oCanvas.toDataURL("image/png").toString();
            //转码为文件；
            if (Base64Data.length > 20) {
                var myBlob = dataURLtoBlob(Base64Data);

                //执行文件上传到指定文件夹；
                var strPicPath = uploadFile(myBlob);
            }



        }
    }

    //// 下载
    //function downloadIamge(selector, name) {
    //    //// 通过选择器获取img元素
    //    //var img = document.querySelector(selector)
    //    //// 将图片的src属性作为URL地址
    //    //var url = img.src
    //    //var a = document.createElement('a')
    //    //var event = new MouseEvent('click')

    //    //a.download = name || '下载图片名称'
    //    //a.href = url

    //    //a.dispatchEvent(event)

    //    var oCanvas = document.getElementById("Canvas3");
    //    if (oCanvas != null) {
    //        //得到图片64位字符串
    //        var Base64Data = oCanvas.toDataURL("image/png").toString();
    //        //转码为文件；
    //        if (Base64Data.length > 20) {
    //            var myBlob = dataURLtoBlob(Base64Data);

    //            dispatchEvent
    //        }
    //    }
    //}

    function uploadFile(blob) {

        var strId_CurrEducls = $("#hidId_CurrEduClspara").val();
        var strDataUserId = $("#hidDataUserId").val();
        var strPicType = $("#hidPicType").val();
        var strPicPath = "";//声明一个接受的返回参数；
        //将blob存储在FormData中
        var formData = new FormData();
        formData.append("filename", blob);//形成键值对应，伪装成表单的数据
        formData.append('DataUserId', strDataUserId);
        formData.append('Id_CurrEducls', strId_CurrEducls);
        formData.append('PicType', strPicType);
        //发起ajax请求
        $.ajax({
            url: "@Url.Action("UpLoadUserCanvasPic", "testUploadPic")",//服务器地址
            type: "post", //请求方法

        data: formData,//向服务器传输的数据
        contentType: false,//避免ajax操作请求头部从而丢分界符，造成服务器无法正确识别请求的数据类型
        processData: false,//告诉ajax不要把将传输的数据给序列化了。
        cache: false,//不从浏览器缓存中加载请求头部信息
        success: function (returndata) {
            //成功/为空
            if (returndata.status == 0 || returndata.status == -1) {

                //如果文件地址为空，那么是修改 则不用存放地址；返回3个文件地址；
                if (returndata.fileNamePic != "") {
                    $("#hidfileNamePic").val(returndata.fileNamePic);
                    strPicPath = returndata.fileNamePic;

                    //显示图片
                  //  CallBackExportWord();
                    return strPicPath;
                }
            }
            else {

                alert('请选择正确图片格式(in SysScoreSummaryNewTotal)')
            }


        },
        error: (error) => {
            alert("出现错误啦。");
        }
    });

    }

    //同步回答统计记录
    function UserRelaCanvasUpload(strUserInfo1Json, strUserInfo2Json, strUserRelaJson, strUserId) {

        var graph = {  //这是数据项目中一般都是获取到的
            nodes: strUserInfo1Json,
            links: strUserRelaJson

        }
        //读取加载div；
        var myChart = echarts.init(document.getElementById('main'));
        var categories = strUserInfo2Json;

        var winWidth = document.body.clientWidth;
        var winHeight = document.body.clientHeight;


        graph.nodes.forEach(function (node) {
            node.x = parseInt(Math.random() * 1000);  //这里是最重要的如果数据中有返回节点x,y位置这里就不用设置，如果没有这里一定要设置node.x和node.y，不然无法定位节点 也实现不了拖拽了；
            node.y = parseInt(Math.random() * 1000);
            //if (node.attributes.modularity_class != 0) {
            if (node.id != strUserId) {
                node.symbolSize = [42, 42];
                node.sizeFlag = [42, 42];
            } else {
                node.symbolSize = [64, 64];
                node.sizeFlag = [64, 64];
            }
            node.category = node.attributes.modularity_class;
            node.label = {
                normal: {
                    show: true
                }
            }
        });
        var option = {    //这里是option配置
            legend: [{    //图例组件
                data: categories.map(function (a) {
                    return a.name;
                }),
                top: 0,
                left: (winWidth - 1300) / 2,         //这里是图例组件定位使用的，自定义
                itemGap: 26,
                textStyle: {
                    padding: [0, 12]
                },
                backgroundColor: '#f5f5f5'
            }],
            animationDurationUpdate: 1500,
            animationEasingUpdate: 'quinticInOut',
            series: [
                {
                    type: 'graph',
                    layout: 'none',           //因为节点的位置已经有了就不用在这里使用布局了
                    circular: { rotateLabel: true },
                    animation: false,
                    data: graph.nodes,
                    links: graph.links,
                    categories: categories,   //节点分类的类目
                    roam: true,   //添加缩放和移动
                    draggable: false,   //注意这里设置为false，不然拖拽鼠标和节点有偏移
                    label: {
                        normal: {
                            position: 'bottom',
                            rich: {
                                bg: {
                                    backgroundColor: '#f5f5f5'
                                }
                            }
                        }
                    }
                }
            ]
        };
        myChart.setOption(option);
        initInvisibleGraphic();
        function initInvisibleGraphic() {
            // Add shadow circles (which is not visible) to enable drag.
            myChart.setOption({
                graphic: echarts.util.map(option.series[0].data, function (item, dataIndex) {
                    //使用图形元素组件在节点上划出一个隐形的图形覆盖住节点
                    var tmpPos = myChart.convertToPixel({ 'seriesIndex': 0 }, [item.x, item.y]);
                    return {
                        type: 'circle',
                        id: dataIndex,
                        position: tmpPos,
                        shape: {
                            cx: 0,
                            cy: 0,
                            r: 20
                        },
                        // silent:true,
                        invisible: true,
                        draggable: true,
                        ondrag: echarts.util.curry(onPointDragging, dataIndex),
                        z: 100              //使图层在最高层
                    };
                })
            });
            window.addEventListener('resize', updatePosition);
            myChart.on('dataZoom', updatePosition);
        }
        myChart.on('graphRoam', updatePosition);
        function updatePosition() {    //更新节点定位的函数
            myChart.setOption({
                graphic: echarts.util.map(option.series[0].data, function (item, dataIndex) {
                    var tmpPos = myChart.convertToPixel({ 'seriesIndex': 0 }, [item.x, item.y]);
                    return {
                        position: tmpPos
                    };
                })
            });

        }
        function onPointDragging(dataIndex) {      //节点上图层拖拽执行的函数
            var tmpPos = myChart.convertFromPixel({ 'seriesIndex': 0 }, this.position);
            option.series[0].data[dataIndex].x = tmpPos[0];
            option.series[0].data[dataIndex].y = tmpPos[1];
            myChart.setOption(option);
            updatePosition();
        }

    }

</script>



<script>
    function GetRequest() {
        var url = location.search; //获取url中"?"符后的字串
        var theRequest = new Object();
        if (url.indexOf("?") != -1) {
            var str = url.substr(1);
            strs = str.split("&");
            for (var i = 0; i < strs.length; i++) {
                theRequest[strs[i].split("=")[0]] = unescape(strs[i].split("=")[1]);
            }
        }
        return theRequest;
    }

    function GetCurrEduclsID() {
        var Request = new Object();
        Request = GetRequest();
        var str1;
        str1 = Request['Id_CurrEduCls'];

        if (str1 != null) {
            $('#hidId_CurrEduClspara').val(str1);

            require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
                var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
                objPage.Page_Load();
            });

        }
        else {
            require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
                var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
                objPage.Page_Load();
            });
        }
    }

    /*
 页面导入-在导入页面后运行的函数
(AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_Page_Load)
*/
    window.onload = function () {
        GetCurrEduclsID();
    }


    function GetExportCurrEduclsID(strId_CurrEducls) {

            //$('#hidId_CurrEduClspara').val(strId_CurrEducls);
            //require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
            //    var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
            //    objPage.GetExportCurrEduclsID(strId_CurrEducls);

            //});


        if (strId_CurrEducls != "") {
            $('#hidId_CurrEduClspara').val(strId_CurrEducls);

            require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
                var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
                objPage.Page_Load();
                $("#PaperPreview").wordExport("数据统计", '^');
            });

        }
        else {
            require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
                var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
                objPage.Page_Load();
            });
        }

    }


    //function ExportWord() {
    //    var btn = document.getElementById('btn')
    //    var Preview = $("#PaperPreview").attr("id")
    //    if (!!window.ActiveXObject || "ActiveXObject" in window) {

    //      // $("#btnExportWord").onclick = function () {
    //            var Preview = $("#PaperPreview").attr("id")
    //            //AllAreaWordTwo(document.getElementById('test'), '^')
    //            AllAreaWordTwo(Preview, '^')
    //     //   }
    //    } else {
    //      //  $("#btnExportWord").click(function () {

    //            $("#PaperPreview").wordExport("论文预览");

    //      //  });

    //        //$("#btnExportWord").onclick = function () {
    //        //    $("#PaperPreview").wordExport("论文预览");
    //        //}
    //    }
    //}
    //jQuery(document).ready(function ($) {
    //    //jquery  code

    //});

    jQuery(document).ready(function ($) {

        var btn = document.getElementById('btn')
        var Preview = $("#PaperPreview").attr("id")
        if (!!window.ActiveXObject || "ActiveXObject" in window) {

            $("#btnExportWord").onclick = function () {
                var Preview = $("#PaperPreview").attr("id")
                //AllAreaWordTwo(document.getElementById('test'), '^')
                AllAreaWordTwo(Preview, '^')
            }
        } else {
            $("#btnExportWord").click(function () {
                //用户导出时候 把动态用户关系设置 隐藏
                $("#UserRelaAll").css('display', 'none');
                //用户单个关系图
                $("#UserRelaSingle").css('display', 'block');
                
               // $("#div_Canvas3").show();
                //循环页面Canvas标签
                $("#div_Canvas3 canvas").each(function (index, item) {
                    var strId = $(this).attr("id");
                    var strUserIdOrCurrId = $(this).attr("typename");
                    $("#hidDataUserId").val(strUserIdOrCurrId);//存放隐藏字段
                    if (strId == "Canvas0") {
                        //当等于Canvas0 带表是教学班图； 2带表教学班
                        $("#hidPicType").val("2");

                    }
                    else if (strId == "canvas03") {
                        //这个代表教学班用户关系图

                        $("#hidPicType").val("3");
                    }
                    else {
                        //带表学生canvas图 1带表学生；
                        $("#hidPicType").val("1");

                    }
                    var oCanvas = "";
                    var PicType = $("#hidPicType").val();
                    if (PicType == "3") {
                         oCanvas = document.getElementById('canvas03');
                    }
                    else {
                         oCanvas = document.getElementById('' + strId);
                    }




                    //var oCanvas = strId;
                    if (oCanvas != null) {

                        //得到图片64位字符串
                        var Base64Data = oCanvas.toDataURL("image/png").toString();
                        //转码为文件；
                        if (Base64Data.length > 20) {
                            var myBlob = dataURLtoBlob(Base64Data);

                            //执行文件上传到指定文件夹；
                            var strPicPath = uploadFile(myBlob);
                        }



                    }

                });






               // $("#ExportDetail").show();
                $("#PaperPreview").wordExport("全班成长档案");

                $("#UserRelaAll").css('display', 'block');
                //用户单个关系图
                $("#UserRelaSingle").css('display', 'none');
              //  $("#ExportDetail").hide();
               // $("#div_Canvas3").hide();

            });




            //$("#btnExportWord").onclick = function () {
            //    $("#PaperPreview").wordExport("论文预览");
            //}
        }
    });

    //  {Object} cont  要导出的html元素内容的id,注意不要加双引号@param {Object} key   分页关键字
    function AllAreaWordTwo(cont, key) {



        var oWD = new ActiveXObject("Word.Application");
        //默认为页面视图
        var oDC = oWD.Documents.Add("", 0, 0);
        var oRange = oDC.Range(0, 1);
        //var oRange1 = oDC.Range(0,2);
        var sel = document.body.createTextRange();
        //参数为html元素id
        sel.moveToElementText(cont);
        sel.select();
        sel.execCommand("Copy");
        oRange.Paste();
        oWD.Application.Visible = true;
        //得到打开后word的selection对象
        var selection = oWD.Selection;
        //设置字体大小
        selection.Font.Size = 10;
        //ctrl+A 全选操作
        selection.WholeStory();
        //清除格式
        selection.Find.ClearFormatting();
        //指定查找关键字
        selection.Find.Text = key;
        //^m为手动分页符标记
        //向下查找
        selection.Find.Forward = true;
        selection.Find.Wrap = 1;
        //不区分大小写
        selection.Find.MatchCase = false;
        //不匹配整个单词
        selection.Find.MatchWholeWord = false;
        //如果找到指定字符串返回真,否则返回false
        while (selection.Find.Execute()) {
            //插入分页符,分页符常量为7,具体可查word api
            selection.InsertBreak(7);
        }
    }



    function btnStuDetail(strUserId, strId_CurrEduCls) {

        xadmin.open('个人成长档案', '../GraduateEduTools/TotalDataStatisticsDetail?UserId=' + strUserId + '&Id_CurrEduCls=' + strId_CurrEduCls, '', '', true);

    }

 /*
  添加新记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnAddNewRecord_Click)
 */
function btnAddNewRecord_Click() {
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
ShowDialog('Add');
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.btnAddNewRecord_Click();
});
}

 /*
  删除记录的事件函数
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnDelRecord_Click)
 */
function btnDelRecord_Click() {
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js", "../js/TS/PubFun/clsCommonFunc4Web.js"], function(sysscoresummary, commonfunc) {
var arrKeyIds = commonfunc.clsCommonFunc4Web.GetCheckedKeyIds();
if (arrKeyIds.length == 0)
{
alert("请选择需要删除的记录！");
return;
}
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.btnDelRecord_Click();
});
}


 /*
  在数据表里删除记录的事件函数
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnDelRecordInTab_Click)
 */
function btnDelRecordInTab_Click(strKeyId) {
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
if (strKeyId == "")
{
alert("请选择需要删除的记录！");
return;
}
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.btnDelRecordInTab_Click(strKeyId);
});
}


 /*
  查询记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnQuery_Click)
 */
function btnQuery_Click()
{
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
$("#Text1").val("进入函数：btnQuery_Click");
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.btnQuery_Click();
});
    }
    /*
     总分核算
    (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnQuery_Click)
    */
    function btnTotalRevalidation_Click() {
        require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function (sysscoresummary) {
            $("#Text1").val("进入函数：btnQuery_Click");
            var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
            objPage.btnTotalRevalidation_Click();
        });
    }





 /*
  在数据表里修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_btnUpdateRecordInTab_Click)
 */
function btnUpdateRecordInTab_Click(strKeyId) {
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
    if (strKeyId == "")
{
alert("请选择需要修改的记录！");
return;
}
ShowDialog('Update');
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
  objPage.btnUpdateRecordInTab_Click(strKeyId);
});
}


 /*
  单击数据列表中每行首列的复选框所引发的事件
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_ChkClick)
 */
function ChkClick(myThis)
{
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js", "../js/TS/PubFun/clsCommonFunc4Web.js"], function(sysscoresummary, commonfunc) {
var strId = myThis.id;
var strKey = strId.substring(3);
var arrKeys = commonfunc.arrSelectedKeys;
if (myThis.checked == true) {
if (arrKeys.indexOf(strKey) < 0)
{
arrKeys.push(strKey);
}
}
else {
var index = arrKeys.indexOf(strKey);
if (index > -1)
{
arrKeys.splice(index, 1);
}
}
var sstrKey = "";
for (let strK of arrKeys)
{
sstrKey += `${ strK},`;
}
$('#spanResult').html(sstrKey);
});
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_ExpandDiv)
 */
         function ExpandDiv(divName) {
//基于RequireJS来调用tzPubFun.ts中的函数OnlyShowDiv。
require(["../js/TS/PubFun/tzPubFun"], function (pubfun) {
      pubfun.OnlyShowDiv(divName, "function", "content");
});
}

 /*
  获取数据列表中的所选记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_GetAllCkechedKeys)
 */
function GetAllCkechedKeys(tabName)
{
var arrKeys = tabName.getElementsByTagName('chkInTab');
alert(arrKeys.length.toString());
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_IndexPage)
 */
function IndexPage(intPageIndex)
{
console.log("跳转到" + intPageIndex + "页");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.IndexPage(intPageIndex);
});
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_JumpToPage)
 */
function JumpToPage()
{
var intCurrPageIndex = $('#input_number').val();
var intPageIndex = Number(intCurrPageIndex);
console.log("跳转到" + intPageIndex + "页");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.IndexPage(intPageIndex);
});
}

 /*
  提交编辑
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_mySubmit)
 */
function mySubmit(pstrOp) {
//    alert("提交" + strOp);
   require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
           objPage.btnOKUpd_Click();
    });
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_NextPage)
 */
function NextPage()
{
var intCurrPageIndex = $('#hidCurrPageIndex').val();
var intPageIndex = Number(intCurrPageIndex) + 1;
console.log("跳转到" + intPageIndex + "页");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.IndexPage(intPageIndex);
});
}



 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_PageNum)
 */
function PageNum(intPageIndex)
{
console.log("跳转到" + intPageIndex + "页");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.IndexPage(intPageIndex);
});
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_PrevPage)
 */
function PrevPage()
{
var intCurrPageIndex = $('#hidCurrPageIndex').val();
var intPageIndex = Number(intCurrPageIndex) - 1;
console.log("跳转到" + intPageIndex + "页");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.IndexPage(intPageIndex);
});
}

 /*
  全选数据列表中的所有记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_SetAllCkechedKeys)
 */
function SetAllCkechedKeys(tabName)
{
var thisChk = event.target;
require(["../js/TS/PubFun/clsCommonFunc4Web.js"], function (commonfunc) {
console.log(tabName);
console.log(thisChk);
commonfunc.clsCommonFunc4Web.SetAllCkechedKeys(tabName, thisChk);
});
}

 /*
  显示对话框
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_ShowDialog)
 */
function ShowDialog(pstrOp) {
   strOp = pstrOp;
   require(['jquery', 'bootstrap'], function($) {
       if (strOp === "Add") {
           $('#myModalLabel').html('添加记录');
//SysScoreSummaryNewTotal.GetMaxStrId('#txtmId');
        }
else if (strOp === "Update")
{
            $('#myModalLabel').html('修改记录');
}
else if (strOp === "Detail")
{
            $('#btnOKUpd').hide();
            $('#myModalLabel').html('详细信息');
}
        $('#divEditRegion').modal('show');
  });
}

 /*
  隐藏对话框
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_HideDialog)
 */
function HideDialog() {
  require(['jquery', 'bootstrap'], function($) {
      $('#divEditRegion').modal('hide');
  });
}

 /*
  修改记录
 (AutoGCLib.WA_ViewScript_TS4Html:Gen_WApi_JS_SortBy)
 */
function SortBy(strFldName)
{
console.log("按：" + strFldName + "排序");
require(["../js/GraduateEduTools/SysScoreSummaryNewTotal.js"], function(sysscoresummary) {
var objPage = new sysscoresummary.SysScoreSummaryNewTotal();
objPage.SortBy(strFldName);
});
}


function CloseWindow() {

    try {

            var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
            parent.layer.close(index); //再执行关闭

      
    } catch (e) {
        window.opener.location = "父页面地址";
        window.opener = null;

        window.close();
    }
}
</script>

<div id="divLoading" class="loading">
    <img src="~/images/CirclePoint.gif" />
</div>
<div id="tabLayout" class="tab_layout">
    @*-- 标题层 --*@
    <div class="x-nav">
        <span class="layui-breadcrumb">
            <a href="">首页</a>
            <a href="">个人中心</a>
            <a>
                <cite>系统分数汇总表</cite>
            </a>
            <Label id="lblMsg_List" name="lblMsg_List"></Label>
        </span>
        <a class="layui-btn layui-btn-small" style="line-height:1.6em;margin-top:3px;float:right" onclick="location.reload()" title="刷新">
            <i class="layui-icon layui-icon-refresh" style="line-height:30px"></i>
        </a>
    </div>
    @*-- 查询层 --*@

    <div id="divQuery" class="div_query">
        <table id="tabQuery" style="width: 30%; " class="table table-bordered table-hover table td table-sm">
            <tr>

                <td>
                    <input id="txtUserName_q" name="txtUserName_q" class="layui-input" placeholder="用户名" style="width:150px;" />
                </td>

                <td>
                    <select id="ddlSchoolYear_q" name="ddlSchoolYear_q" class="form-control" style="width:200px;"></select>
                </td>
                @*<td>
                        <Label id="lblScoreTypeId_q" name="lblScoreTypeId_q" class="col-form-label text-right" style="width:80px;width:90px;">
                            分数类型
                        </Label>
                    </td>
                    <td>
                        <select id="ddlScoreTypeId_q" name="ddlScoreTypeId_q" class="form-control" style="width:200px;"></select>
                    </td>*@
                <td>
                    <button class="layui-btn" lay-submit="" lay-filter="sreach" onclick="btnQuery_Click()">
                        <i class="layui-icon">&#xe615;</i>
                    </button>
                </td>
                <td>
                    <button class="btn btn-outline-info text-nowrap" id="btnExportWord" name="btnExportWord" title="导出数据">导出数据</button>
                </td>

                <td>
                    <button id="btnTotalRevalidation" name="btnDelRecord" class="btn btn-outline-info text-nowrap" onclick="btnTotalRevalidation_Click()" style="display:none">学生总分核算</button>
                </td>
                <td>
                    <button type="button" onclick="CloseWindow()" class="btn btn-outline-info text-nowrap">返回</button>
                </td>
            </tr>
        </table>
    </div>
 
    @*-- 列表层 --*@
    @*<div id="divList" class="div_List">*@
    <div id="PaperPreview" class="layui-fluid">
        @*<div class="layui-card-body " id="PaperPreview">*@
        <div style="text-align:center"><h3><label id="UpWord">教学班所有学生成长档案</label></h3></div>
        <div class="layui-card-body layui-fluid" id="CurrEduClsPic">
            @*<table class="TablePaper">*@
            <span id="CurrEduClsName" style="font-weight: bold;"></span>&nbsp;&nbsp;&nbsp;<span id="MajorName" style="font-weight: bold;"></span>&nbsp;&nbsp;&nbsp;<span id="ShoolYear" style="font-weight: bold;"></span>
            <table class="TablePaper layui-table" id="tableList">

                <thead>
                    <tr>
                        @*<th width="5">
                                <input type="checkbox" name="" lay-skin="primary">
                            </th>*@
                        @*<th width="50">标识</th>*@
                        <th width="100" style="font-weight: bold;">用户</th>
                        @*<th width="180">专业/教学班</th>*@

                        <th width="150" style="font-weight: bold;">论文子观点<br />/名次</th>
                        <th width="150" style="font-weight: bold;">个人观点<br />/名次</th>
                        <th width="150" style="font-weight: bold;">专家观点<br />/名次</th>
                        <th width="150" style="font-weight: bold;">主题概念<br />/名次</th>
                        <th width="150" style="font-weight: bold;">客观事实<br />/名次</th>
                        <th width="150" style="font-weight: bold;">客观数据<br />/名次</th>
                        <th width="150" style="font-weight: bold;">技能<br />/名次</th>
                        <th width="150" style="font-weight: bold;">社会关系<br />/名次</th>
                        <th width="150" style="font-weight: bold;">问题回答<br />/名次</th>
                        <th width="150" style="font-weight: bold;">给他人评论</th>
                        <th width="150" style="font-weight: bold;">讨论打分</th>
                        <th width="150" style="font-weight: bold;">评价打分</th>
                        <th width="150" style="font-weight: bold;">标志打分</th>
                        <th width="180" style="font-weight: bold;">各观点总分</th>
                        <th width="150" style="font-weight: bold;">总分名次</th>
                        <th width="150" style="font-weight: bold;">详情</th>
                        @*<th width="200" style="font-weight:bold;color:red;">百分比折算总分%</th>*@
                    </tr>
                </thead>
                <tbody id="divDataLst" class="x-cate"></tbody>
            </table>
        </div>
        @*<div id="divDataLst" class="div_List">
            </div>*@
        @*<div id="divPager" class="pager" value="1" style="display:none;">
               
            </div>*@

        @*-- 教学班用户关系图 --*@
        <div class="info" id="UserRelaAll">
            <div class="layui-row layui-col-space15">
                <div class="layui-col-md12">
                    <div class="layui-card">
                        <div style="height:40px;">
                            <div class="panel-heading title btn-1" style="float:left;">

                                <div>
                                    <i class="fa fa-bar-chart fa-lg" style="padding-right: 5px;"> </i>用户成员关系图

                                    &nbsp;&nbsp;<span style="color:crimson;line-height:40px;font-size:14px;">(提示：如果需要定制个性化的关系图需要在“系统随机排列”的基础上进行保存，保存好以后可以在“用户保存关系图”内查看！)</span>
                                </div>
                            </div>

                          
                        </div>


                        @*<div id="TeaClassNum" style="padding:5px;">
                            <div style="width: 100%; padding:10px;">*@
                        <div style="width: 100%;height:790px; padding:10px; border: 1px solid #e6e6e6; background-color: #fff;">

                            <button class="btn" id="li_IntelligenceArray" name="li_IntelligenceArray" onclick="li_IntelligenceArray_Click()"><i class="layui-icon">&#xe66c;</i>系统智能排列</button>
                            <button class="btn" id="li_RandomArray" name="li_RandomArray" onclick="li_RandomArray_Click()"><i class="layui-icon">&#xe614;</i>系统随机排列</button>
                            <button class="btn" id="li_UserArray" name="li_UserArray" onclick="li_UserArray_Click()"><i class="layui-icon">&#xe612;</i>用户保存关系图</button>

                            <div class="btn-group" style="float:right;">
                                <button class="btn btn-danger" id="btnSynUserRelaNum" name="btnSynUserRelaNum" onclick="btnSynUserRelaNum_Click()"><i class="layui-icon">&#xe66c;</i>同步用户关系</button>
                            </div>
                            <div class="btn-group" style="float:right; margin-right:10px;">
                                <button style="display:none;" class="btn btn-warning" id="btnSaveUserRela" name="btnSaveUserRela" onclick="btnSaveUserRela_Click()"><i class="layui-icon">&#xe613;</i>保存当前排列关系图</button>
                            </div>
                            @*<div class="panel panel-default">*@
                            @*<div class="panel-heading">
            <i class="fa fa-bar-chart fa-lg" style="padding-right: 5px;"></i>用户关系图
        </div>*@
                            <div id="mainUserRela" style="width: 100%;height:780px;"></div>

                            @*</div>*@
                        </div>
                        @*</div>
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
        @*-- 教学班周观点统计 --*@
        <div id="CurrEduclsUserRela"></div>
        @*<div id="CurrEduclsUserRela" style="display:none;"></div>*@
        <hr />
        <br />
        @*-- 教学班用户详细观点数据 --*@
        @*<div id="ExportDetail" class="div_List">*@
        <div id="ExportDetail" class="div_List" style="position:fixed;">
        </div>
        @*-- 得到Canvas图片 --*@
        <form id="uploadForm" method="post" enctype="multipart/form-data">
            @*<div id="div_Canvas3" class="panel-body" style="padding-bottom: 0px;display:none;">*@
            <div id="div_Canvas3" class="panel-body" style="padding-bottom: 0px;position:fixed;">
                <div id="main" style="width: 100%;height:750px;position:fixed;"></div>
            </div>

        </form>
    </div>
    @*-- 编辑层 --*@

    <div class="modal fade" id="divEditRegion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="width: 800px;">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">模态框（Modal）标题</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <table id="tabEdit" style="width: 70%; " class="table table-bordered table-hover table td table-sm">
                        <tr>
                            <td>
                                <Label id="lblUserId" name="lblUserId" class="col-form-label text-right" style="width:90px;">
                                    用户ID
                                </Label>
                            </td>
                            <td>
                                <input id="txtUserId" name="txtUserId" class="form-control" style="width:200px;" />
                            </td>
                            <td>
                                <Label id="lblSchoolYear" name="lblSchoolYear" class="col-form-label text-right" style="width:90px;">
                                    学年
                                </Label>
                            </td>
                            <td>
                                <select id="ddlSchoolYear" name="ddlSchoolYear" class="form-control" style="width:200px;"></select>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <Label id="lblScoreTypeId" name="lblScoreTypeId" class="col-form-label text-right" style="width:90px;">
                                    分数类型Id
                                </Label>
                            </td>
                            <td>
                                <select id="ddlScoreTypeId" name="ddlScoreTypeId" class="form-control" style="width:200px;"></select>
                            </td>
                            <td>
                                <Label id="lblUpdUser" name="lblUpdUser" class="col-form-label text-right" style="width:90px;">
                                    修改人
                                </Label>
                            </td>
                            <td>
                                <input id="txtUpdUser" name="txtUpdUser" class="form-control" style="width:200px;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <Label id="lblMemo" name="lblMemo" class="col-form-label text-right" style="width:90px;">
                                    备注
                                </Label>
                            </td>
                            <td>
                                <input id="txtMemo" name="txtMemo" class="form-control" style="width:200px;" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button id="btnOKUpd" type="button" class="btn btn-primary" onclick="mySubmit()">添加</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal -->
    </div>
</div>
<input id="hidOpType" type="hidden" />
<input id="hidKeyId" type="hidden" />
<input id="hidUserId" type="hidden" />
<input id="hidCurrPageIndex" type="hidden" value="1" />
<input id="hidSortvSysScoreSummaryBy" type="hidden" value="" />
@* 教学班Id传递参数 *@
<input id="hidId_CurrEduClspara" type="hidden" />
@* 数据用户 *@
<input id="hidDataUserId" type="hidden" />
@* 图片类型、是单个用户图片，还是整个教学班图片 1代表个人、 2代表教学班*@
<input id="hidPicType" type="hidden" />

<input id="hidQueryStata" type="hidden" />
