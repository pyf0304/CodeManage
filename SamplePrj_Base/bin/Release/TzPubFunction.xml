<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TzPubFunction</name>
    </assembly>
    <members>
        <member name="T:com.taishsoft.commdb4odbc.clsAccess2007SQL">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.#ctor(System.String)">
            <summary>
            构造函数，检查文件是否存在，同时检查连接是否成功？
            </summary>
            <param name="strAccessFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.GetAccessFirstTableName">
            <summary>
            这是测试注释
            </summary>
            <returns>第一个表名</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.GetAccessTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.GetAccessFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="AccessFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.importAccessToDataSet(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strAccessFileName">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2007SQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsAccessBaseSQL">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
        </member>
        <member name="F:com.taishsoft.commdb4odbc.clsAccessBaseSQL.mstrConnectString">
            <summary>
            连接串
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strAccessFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.funGetDataTable(System.String,System.String)">
            <summary>
            获取一个表单的内容，根据条件
            </summary>
            <param name="strSheetName"></param>
            <param name="strWhereCond"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.GetAccessFirstTableName">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.GetAccessTableNameLst">
            <summary>
            获取Access的表单名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.importAccessToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
              此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importAccessToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strAccessFileName">/*即文件目录的路径*/</param>
            <param name="strSheetName">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessBaseSQL.GetAccessTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.#ctor(System.String)">
            <summary>
            构造函数，检查文件是否存在，同时检查连接是否成功？
                     同时检查不同版本的Access文件
            </summary>
            <param name="strAccessFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.GetDataTable(System.String)">
            <summary>
            根据给定Sql语句获取表单内容
            </summary>
            <param name="strSql">给定Sql语句</param>
            <returns>返回的表单内容，用DataTable表示</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.funGetDataTable(System.String)">
            <summary>
            根据给定Sql语句获取表单内容
            </summary>
            <param name="strSql">给定Sql语句</param>
            <returns>返回的表单内容，用DataTable表示</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.funGetDataTable(System.String,System.String)">
            <summary>
            获取Access文件给定表单、给定条件的表内容
            </summary>
            <param name="strSheetName">表单名称</param>
            <param name="strWhereCond">给定条件</param>
            <returns>表单内容</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.GetAccessFirstTableName">
            <summary>
            获取Access文件中第一个表单名称
            </summary>
            <returns>第一个表单名称</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.GetAccessTableNameLst">
            <summary>
            获取Access文件中表单名称列表
            </summary>
            <returns>表单名称列表</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.GetAccessTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.GetAccessFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="AccessFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.importAccessToDataSet(System.String,System.String)">
            <summary>
            以数据库方式打开并输入数据
            此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importAccessToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strAccessFileName">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccessAllVersionSQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.#ctor(System.String)">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
            <param name="strAccessFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.GetAccessFirstTableName">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.GetAccessTableNameLst">
            <summary>
            C#中获取Access文件的表单列表 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns>Access文件的表单列表</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.GetAccessTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.GetAccessFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="AccessFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.importAccessToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
            此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importAccessToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="FilePath">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_OleDb.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc">
            <summary>
            clsAccessSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc.GetAccessFirstTableName">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="AccessFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc.importAccessToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
              此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importAccessToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strAccessFileName">/*即文件目录的路径*/</param>
            <param name="strSheetName">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc.GetAccessFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Access文件的第一个表名 
            Access文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Access文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="AccessFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsAccess2003SQL_Odbc.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcelSQL">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelSQL.GetExcelFirstTableName2">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelSQL.GetExcelTableNameLst2">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelSQL.GetExcelFirstTableName1Bak(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.#ctor(System.String)">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
            <param name="strExcelFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.GetExcelFirstTableName">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.GetExcelTableNameLst">
            <summary>
            C#中获取Excel文件的表单列表 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns>Excel文件的表单列表</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.GetExcelTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.GetExcelFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.importExcelToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
            此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importExcelToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="FilePath">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_OleDb.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcel2007SQL">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.#ctor(System.String)">
            <summary>
            构造函数，检查文件是否存在，同时检查连接是否成功？
            </summary>
            <param name="strExcelFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.GetExcelTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.GetExcelFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.importExcelToDataSet(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strExcelFileName">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2007SQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc.GetExcelFirstTableName">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc.importExcelToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
              此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importExcelToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strExcelFileName">/*即文件目录的路径*/</param>
            <param name="strSheetName">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc.GetExcelFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcel2003SQL_Odbc.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcelBaseSQL">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="F:com.taishsoft.commdb4odbc.clsExcelBaseSQL.mstrConnectString">
            <summary>
            连接串
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strExcelFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.funGetDataTable(System.String,System.String)">
            <summary>
            获取一个表单的内容，根据条件
            </summary>
            <param name="strSheetName"></param>
            <param name="strWhereCond"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.GetExcelFirstTableName">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.GetExcelTableNameLst">
            <summary>
            获取Excel的表单名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.importExcelToDataSet(System.String,System.String)">
            <summary>
            2.以数据库方式打开并输入数据
              此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importExcelToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strExcelFileName">/*即文件目录的路径*/</param>
            <param name="strSheetName">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelBaseSQL.GetExcelTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL">
            <summary>
            clsExcelSQL 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.#ctor(System.String)">
            <summary>
            构造函数，检查文件是否存在，同时检查连接是否成功？
                     同时检查不同版本的Excel文件
            </summary>
            <param name="strExcelFileName"></param>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.GetDataTable(System.String)">
            <summary>
            根据给定Sql语句获取表单内容
            </summary>
            <param name="strSql">给定Sql语句</param>
            <returns>返回的表单内容，用DataTable表示</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.funGetDataTable(System.String)">
            <summary>
            根据给定Sql语句获取表单内容
            </summary>
            <param name="strSql">给定Sql语句</param>
            <returns>返回的表单内容，用DataTable表示</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.funGetDataTable(System.String,System.String)">
            <summary>
            获取Excel文件给定表单、给定条件的表内容
            </summary>
            <param name="strSheetName">表单名称</param>
            <param name="strWhereCond">给定条件</param>
            <returns>表单内容</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.GetExcelFirstTableName">
            <summary>
            获取Excel文件中第一个表单名称
            </summary>
            <returns>第一个表单名称</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.GetExcelTableNameLst">
            <summary>
            获取Excel文件中表单名称列表
            </summary>
            <returns>表单名称列表</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.GetExcelTableNameLstByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.GetExcelFirstTableNameByFileName(System.String)">
            <summary>
            C#中获取Excel文件的第一个表名 
            Excel文件中第一个表名的缺省值是Sheet1$, 但有时也会被改变为其他名字. 如果需要在C#中使用OleDb读写Excel文件, 就需要知道这个名字是什么. 以下代码就是实现这个功能的:
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.importExcelToDataSet(System.String,System.String)">
            <summary>
            以数据库方式打开并输入数据
            此方式将xls文件所在目录看作数据库，其中的xls文件看作数据库表，表名即文件名（不加扩展名）。
            函数importExcelToDataSet(string FilePath,string sheet)功能：从xls中读出数据到DataSet中，并返回DataSet对象。
            </summary>
            <param name="strExcelFileName">/*即文件目录的路径*/</param>
            <param name="sheet">/*表名即文件名（不加扩展名）*/</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.ExecSql(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="strSql">被执行的SQL语句</param>
            <returns>是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.commdb4odbc.clsExcelAllVersionSQL.funGetRecCount(System.String)">
            <summary>
            功能：获取给定表的记录数.
            </summary>
            <param name="strTabName">所给定的表名</param>
            <returns>记录数，为整型</returns>
        </member>
        <member name="T:com.taishsoft.commexception.clsDbObjException">
            <summary>
            clsDbObjException 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.common.CacheHelper.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
        </member>
        <member name="M:com.taishsoft.common.CacheHelper.Remove(System.String)">
            <summary>
            删除给定关键
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:com.taishsoft.common.CacheHelper.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
        </member>
        <member name="M:com.taishsoft.common.CacheHelper.Exsits(System.String)">
            <summary>
            判断缓存是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.CacheHelper.GetCache``1(System.String,System.Func{``0})">
            <summary>
            缓存获取方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">缓存字典容器对应key</param>
            <param name="func">委托方法 传入操作对象</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.common.clsAggregate">
            <summary>
            clsAggregate 的摘要说明。
            该类专门用处理一些集合方面的函数
            </summary>
            <summary>
            clsAggregate 的摘要说明。
            该类专门用处理一些集合方面的函数
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.TwoAggrDiff(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            求两个集合的差集
            </summary>
            <param name="arrAllSet">母集：是原集合中所有的元素</param>
            <param name="arrSubSet">是某一子集</param>
            <returns>母集减去子集得到的差</returns>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.UniteTwoAggr(System.Collections.ArrayList@,System.Collections.ArrayList)">
            <summary>
            求两个集合的并集
            </summary>
            <param name="arrAllSet">母集：是原集合中所有的元素</param>
            <param name="arrSubSet">是某一子集</param>
            <returns>母集减去子集得到的差</returns>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.IntersectTwoAggr(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            求两个集合的交集
            </summary>
            <param name="arrSetA">子集A</param>
            <param name="arrSetB">子集B</param>
            <returns>两个子集的交集</returns>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.TwoAggrDiff(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            求两个集合的差集
            </summary>
            <param name="arrAllSet">母集：是原集合中所有的元素</param>
            <param name="arrSubSet">是某一子集</param>
            <returns>母集减去子集得到的差</returns>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.UniteTwoAggr(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String})">
            <summary>
            求两个集合的并集
            </summary>
            <param name="arrAllSet">母集：是原集合中所有的元素</param>
            <param name="arrSubSet">是某一子集</param>
            <returns>母集减去子集得到的差</returns>
        </member>
        <member name="M:com.taishsoft.common.clsAggregate.IntersectTwoAggr(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            求两个集合的交集
            </summary>
            <param name="arrSetA">子集A</param>
            <param name="arrSetB">子集B</param>
            <returns>两个子集的交集</returns>
        </member>
        <member name="T:com.taishsoft.common.clsApplicatoin">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsApplicatoin.ApplicationName">
            <summary>
            当前应用程序名，需要设置后才能显示
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsApplicatoin.ExecutablePath">
            <summary>
            获取当前执行文件所在的路径名称（当前应用程序所在的子目录名称）
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsApplicatoin.GetAddressIP">
            <summary>
            获取当前主机的IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsApplicatoin.GetAddressIP4">
            <summary>
            获取当前主机的IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsApplicatoin.AppPath">
            <summary>
            获取当前执行文件所在的路径名称（当前应用程序所在的子目录名称）
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.common.clsArray">
            <summary>
            有关列表数组的处理函数集合
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.ArrayList,System.Boolean)">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <param name="bolIsHaveQuote">是否有引号</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <param name="bolIsHaveQuote">是否有引号</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <param name="bolIsHaveQuote">是否有引号</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.Generic.List{System.Int32})">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetSqlInStrByArray(System.Collections.Generic.List{System.Int16})">
            <summary>
            根据列表获取SQL中的IN串
            </summary>
            <param name="arrValues">关键字列表</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.Join(System.Collections.ArrayList,System.String)">
            <summary>
            把列表拼接成字符串，并可以指定分隔串
            </summary>
            <param name="arrValues">关键字列表</param>
            <param name="strSplitStr">分隔串</param>
            <returns>组合成的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.Join(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            把列表(List《string》)拼接成字符串，并可以指定分隔串
            </summary>
            <param name="arrValues">关键字列表</param>
            <param name="strSplitStr">分隔串</param>
            <returns>组合成的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.CopyTo(System.Collections.Generic.List{System.String})">
            <summary>
            把字符串列表转换为ArrayList
            </summary>
            <param name="arrString">原字符列表</param>
            <returns>ArrayList形式的字符列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.CopyArrayListToList_String(System.Collections.ArrayList)">
            <summary>
            把ArrayList转换为字符串列表(list(string))
            </summary>
            <param name="arrString">原ArrayList列表</param>
            <returns>list(string)形式的字符列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsArray.GetArrayListByString(System.String[])">
            <summary>
            根据字符数组获取ArrayList
            </summary>
            <param name="strOrigin">源字符数组</param>
            <returns>获取的ArrayList数组</returns>
        </member>
        <!-- 对于成员“M:com.taishsoft.common.clsArray.GetListByString(System.String[])”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:com.taishsoft.common.clsArray.GetStringSByList(System.Collections.Generic.List{System.String})”忽略有格式错误的 XML 注释 -->
        <member name="T:com.taishsoft.common.clsBoolCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsBoolCollection.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="intCount"></param>
        </member>
        <member name="P:com.taishsoft.common.clsBoolCollection.Item(System.Int32)">
            <summary>
            获取和设置包含文档中的字符的索引器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:com.taishsoft.common.clsBoolCollection.Count">
            <summary>
            获取包含文档中字符的计数
            </summary>
        </member>
        <member name="T:com.taishsoft.common.clsBoolObj_TrueOrFalse">
            <summary>
            Bind_TrueOrFalse 的摘要说明。//
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsBoolObj_TrueOrFalse.mstrTrueOrFalse">
            <summary>
            
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsBoolObj_TrueOrFalse.iTrueOrFalse">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsBoolObj_TrueOrFalse.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsBoolObj_TrueOrFalse.iFalseOrTrue">
            <summary>
            
            </summary>
        </member>
        <member name="T:com.taishsoft.common.clsCheckSql">
            <summary>
            正则表达式类的摘要说明
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_EMAIL">
            <summary>
            电子邮件校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_URL">
            <summary>
            网址校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_ZIP">
            <summary>
            邮编校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_SSN">
            <summary>
            身份证校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_INT">
            <summary>
            整数校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_DECODE_HTML">
            <summary>
            HEML解码校验
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_VALID_DEMICAL">
            <summary>
            浮点数校验（数值校验常量）
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_IS_HTML">
            <summary>
            是否是HTML代码
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT">
            <summary>
            字符、数字、下划线检验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_NUM">
            <summary>
            数字检验
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_CHINESE">
            <summary>
            汉字
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_NOT_LETTER_NUM">
            <summary>
            非字符数字
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_CHINESE_LETTER_NUM">
            <summary>
            汉字字母
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_CHINEST_LETTER_NUM_UNDERLINE">
            <summary>
            汉字字符数字非下划线
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCheckSql.REGEXP_TEXT_CHINEST_LETTER_NUM_LINE">
            <summary>
            汉字字符数字下划线
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckStrSQLV2(System.String)">
            <summary>
            校验给定的字符串含有SQL注入-强检查
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckSqlInjection4Field(System.String,System.String)">
            <summary>
            校验给定的字段值含有SQL注入(Sql Injection)
            </summary>
            <param name="strFieldValue">供检查的字段值</param>
            <param name="strFieldName">字段名</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckStrSQL(System.String)">
            <summary>
            校验给定的字符串含有SQL注入
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckSqlInjection4Insert(System.String)">
            <summary>
            校验给定的SqlInsert语句中是否含有SQL注入
            </summary>
            <param name="strSqlInsert">供检查的SqlInsert语句</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckSqlInjection4Update(System.String)">
            <summary>
            校验给定的SqlUpdate语句中是否含有SQL注入
            </summary>
            <param name="strSqlUpdate">供检查的SqlUpdate语句</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckSqlInjection4Delete(System.String)">
            <summary>
            校验给定的SqlDelete语句中是否含有SQL注入
            </summary>
            <param name="strSqlDelete">供检查的SqlDelete语句</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.GetExcludeStr(System.String)">
            <summary>
            获取组装后的排除串。例如：源串“or|delete”,组合后的串：“[Exclude]or|delete[/Exclude]”
            </summary>
            <param name="strSource">源串</param>
            <returns>以组装后排除串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckStrSQL_Weak(System.String)">
            <summary>
            校验给定的字符串含有SQL注入,弱检查，不检查Select
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.DetailCheckOr(System.String)">
            <summary>
            详细检查'or '
            </summary>
            <param name="??"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckStrSQL_Weak(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            校验给定的字符串含有SQL注入,弱检查，不检查Select
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <param name="lstExclude">排除的检查字符串列表</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckStrScript(System.String)">
            <summary>
            校验给定的字符串含有Html脚本注入
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckFieldLen(System.Object,System.Int32,System.String)">
            <summary>
            校验给定的字段值的字段长度
            </summary>
            <param name="strFieldValue">供检查的字段值</param>
            <param name="intMaxLen">最大长度</param>
            <param name="strFieldName">字段名</param>
            <returns>检查结果，如果不超长就返回TRUE，否则抛错</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckFieldForeignKey(System.Object,System.Int32,System.String)">
            <summary>
            校验给定的字段值作为外键字段长度必须为固定长度
            </summary>
            <param name="strFieldValue">供检查的字段值</param>
            <param name="intFieldLen">字段长度</param>
            <param name="strFieldName">字段名</param>
            <returns>检查结果，如果等于固定长度就返回TRUE，否则抛错</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.CheckFieldNotNull(System.Object,System.String)">
            <summary>
            校验给定的字段值不能为空(Null)
            </summary>
            <param name="strFieldValue">供检查的字段值</param>    
            <param name="strFieldName">字段名</param>
            <returns>检查结果，如果等于非空就返回TRUE，否则抛错</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCheckSql.getStrLen(System.String)">
            <summary>
            获取字符串长度,其中汉字为2个字节,英文为1个字节
            (AutoGCLib.AutoGCPubFuncV6:GengetStrLen)
            </summary>
            <param name = "strTemp">给定的原字符串</param>
            <returns>返回字符串长度</returns>
        </member>
        <member name="T:com.taishsoft.common.clsCommonRegular">
            <summary>
            正则表达式类的摘要说明
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_EMAIL">
            <summary>
            电子邮件校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_URL">
            <summary>
            网址校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_ZIP">
            <summary>
            邮编校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_SSN">
            <summary>
            身份证校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_INT">
            <summary>
            整数校验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_DECODE_HTML">
            <summary>
            HEML解码校验
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_VALID_DEMICAL">
            <summary>
            浮点数校验（数值校验常量）
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_IS_HTML">
            <summary>
            是否是HTML代码
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT">
            <summary>
            字符、数字、下划线检验常量
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_NUM">
            <summary>
            数字检验
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_CHINESE">
            <summary>
            汉字
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_NOT_LETTER_NUM">
            <summary>
            非字符数字
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_CHINESE_LETTER_NUM">
            <summary>
            汉字字母
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_CHINEST_LETTER_NUM_UNDERLINE">
            <summary>
            汉字字符数字非下划线
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsCommonRegular.REGEXP_TEXT_CHINEST_LETTER_NUM_LINE">
            <summary>
            汉字字符数字下划线
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.IsValidEmail(System.String,System.String@)">
            <summary>
            校验给定的值格式与电子邮箱是否相符
            </summary>
            <param name="SrcEmail"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.IsValidZip(System.String,System.String@)">
            <summary>
            校验给定的值格式与邮编是否相符
            </summary>
            <param name="SrcZip"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.IsValidSSN(System.String,System.String@)">
            <summary>
            校验给定的值格式与身份证是否相符
            </summary>
            <param name="SrcSSNField"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.GetUrlFieldError(System.String)">
            <summary>
            判断给定的值格式与URL是否相符
            </summary>
            <param name="ErrorField"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.IsValidDate(System.String,System.String@)">
            <summary>
            判断给定的是否为日期类型
            </summary>
            <param name="SrcDate">给定的字符串</param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.IsValidNumber(System.String,System.String@)">
            <summary>
            判断给定的是否为数值型
            </summary>
            <param name="SrcNumber"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.ReplaceHTML(System.String)">
            <summary>
            去除含有HTML的数据
            </summary>
            <param name="SrcHTML"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.ReplaceDECODEHTML(System.String)">
            <summary>
            去除含有HTML的数据
            </summary>
            <param name="SrcHTML"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.CheckStrSQL_strong(System.String)">
            <summary>
            校验给定的字符串含有SQL注入-强检查
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.CheckStrSQL(System.String)">
            <summary>
            校验给定的字符串含有SQL注入
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.GetExcludeStr(System.String)">
            <summary>
            获取组装后的排除串。例如：源串“or|delete”,组合后的串：“[Exclude]or|delete[/Exclude]”
            </summary>
            <param name="strSource">源串</param>
            <returns>以组装后排除串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.CheckStrSQL_Weak(System.String)">
            <summary>
            校验给定的字符串含有SQL注入,弱检查，不检查Select
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.DetailCheckOr(System.String)">
            <summary>
            详细检查'or '
            </summary>
            <param name="??"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.CheckStrSQL_Weak(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            校验给定的字符串含有SQL注入,弱检查，不检查Select
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <param name="lstExclude">排除的检查字符串列表</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsCommonRegular.CheckStrScript(System.String)">
            <summary>
            校验给定的字符串含有Html脚本注入
            </summary>
            <param name="strSQLWhere">供检查的源字符串</param>
            <returns>检查结果，如果有注入就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="T:com.taishsoft.common.clsDataTypeTrans">
            <summary>
            clsDataTypeTrans 的摘要说明。
            该类主要用于：数据类型转换
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsDataTypeTrans.FloatToStr(System.Single,System.Int32)">
            <summary>
            浮点型-->格式字符串
            </summary>
            <param name="fltValue">浮点型值</param>
            <param name="intPrecision">小数位数</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.common.clsOrderByData">
            <summary>
            专门用于记录排序操作传递参数的数据结构
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsOrderByData.KeyIdLst">
            <summary>
            需要移动记录的关键字列表
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsOrderByData.ClassificationFieldValue">
            <summary>
            分类字段值
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsOrderByData.ClassificationFieldValue2">
            <summary>
            分类字段值2
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsOrderByData.ClassificationFieldValueLst">
            <summary>
            分类字段值列表
            </summary>
        </member>
        <member name="T:com.taishsoft.common.clsShortCollection">
            <summary>
            短整数集合
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsShortCollection.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="intCount"></param>
        </member>
        <member name="P:com.taishsoft.common.clsShortCollection.Item(System.Int32)">
            <summary>
            根据索引（index）获取集合中元素值
            </summary>
            <param name="index">索引</param>
            <returns>集合中元素值</returns>
        </member>
        <member name="P:com.taishsoft.common.clsShortCollection.Count">
            <summary>
            集合中元素个数
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsShortCollection.ToShortArray">
            <summary>
            导出整数集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.common.clsStackTrace">
            <summary>
            系统信息跟踪
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsStackTrace.GetCurrFunction">
            <summary>
            获取当前函数名
            </summary>
            <returns>返回当前函数名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsStackTrace.GetCurrClassFunction">
            <summary>
            获取当前类名、函数名
            </summary>
            <returns>返回当前[类名：函数名]</returns>
        </member>
        <member name="M:com.taishsoft.common.clsStackTrace.GetCurrFunctionByLevel(System.Int32)">
            <summary>
            根据深度获取当前函数名，例如层为1代表上一层函数名，即调用该函数的函数，父函数，层为2代表上两层函数名，即当前函数的父函数的父函数
            </summary>
            <returns>返回上n层的函数名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsStackTrace.GetCurrClassFunctionByLevel(System.Int32)">
            <summary>
            根据深度获取当前类名、函数名，例如层为1代表上一层函数名，即调用该函数的函数，父函数，层为2代表上两层函数名，即当前函数的父函数的父函数
            </summary>
            <returns>返回上n层的[类名：函数名]</returns>
        </member>
        <member name="T:com.taishsoft.common.stuLoginPara_Static">
            <summary>
            根据记录序号范围获取对象列表的参数对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuLoginPara_Static.GetDictParam(com.taishsoft.common.stuLoginPara)">
            <summary>
            根据记录范围获取记录的参数对象获取相关的字典参数
            </summary>
            <param name="objLoginPara">根据范围获取记录的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuLoginPara">
            <summary>
            根据记录序号范围获取对象列表的参数对象
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuLoginPara.EffectiveDate">
            <summary>
            有效日期
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuLoginPara.QxPrjId">
            <summary>
            当前选择的工程Id
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuLoginPara.LoginName">
            <summary>
            条件串
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuLoginPara.UserPassword">
            <summary>
            排序表达式
            </summary>
        </member>
        <member name="T:com.taishsoft.common.stuTextRange_Static">
            <summary>
            文本位置范围(start-line, start-col, end-line, end-col)的参数对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuTextRange_Static.GetDictParam(com.taishsoft.common.stuTextRange)">
            <summary>
            根据记录范围获取记录的参数对象获取相关的字典参数
            </summary>
            <param name="objTextRange">根据范围获取记录的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuTextRange">
            <summary>
            文本位置范围(start-line, start-col, end-line, end-col)的对象
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuTextRange.#ctor(com.taishsoft.common.stuTextPos,com.taishsoft.common.stuTextPos)">
            <summary>
            构造函数
            </summary>
            <param name="objStartPos"></param>
            <param name="objEndPos"></param>
        </member>
        <member name="P:com.taishsoft.common.stuTextRange.StartPos">
            <summary>
            开始位置
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTextRange.EndPos">
            <summary>
            结束位置
            </summary>
        </member>
        <member name="T:com.taishsoft.common.stuTextPos_Static">
            <summary>
            文本位置（Line, Col）对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuTextPos_Static.GetDictParam(com.taishsoft.common.stuTextPos)">
            <summary>
            根据记录范围获取记录的参数对象获取相关的字典参数
            </summary>
            <param name="objTextPos">根据范围获取记录的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuTextPos">
            <summary>
            文本位置（Line, Col）对象
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuTextPos.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="intLine"></param>
            <param name="intCol"></param>
        </member>
        <member name="P:com.taishsoft.common.stuTextPos.Line">
            <summary>
            行
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTextPos.Col">
            <summary>
            列
            </summary>
        </member>
        <member name="T:com.taishsoft.common.stuTopPara_Static">
            <summary>
            获取顶部对象列表的参数对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuTopPara_Static.GetDictParam(com.taishsoft.common.stuTopPara)">
            <summary>
            根据获取顶部对象列表的参数对象获取相关的字典参数
            </summary>
            <param name="objTopPara">获取顶部对象列表的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuTopPara">
            <summary>
            获取顶部对象列表的参数对象
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTopPara.TopSize">
            <summary>
            顶部记录数
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTopPara.WhereCond">
            <summary>
            条件串
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTopPara.OrderBy">
            <summary>
            排序表达式
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTopPara.Exclude">
            <summary>
            排除的检查字符串列表
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuTopPara.IsCheckSQLAttack">
            <summary>
            是否检查SQL攻击
            </summary>
        </member>
        <member name="T:com.taishsoft.common.stuRangePara_Static">
            <summary>
            根据记录序号范围获取对象列表的参数对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuRangePara_Static.GetDictParam(com.taishsoft.common.stuRangePara)">
            <summary>
            根据记录范围获取记录的参数对象获取相关的字典参数
            </summary>
            <param name="objRangePara">根据范围获取记录的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuRangePara">
            <summary>
            根据记录序号范围获取对象列表的参数对象
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuRangePara.MinNum">
            <summary>
            记录范围的最小记录号
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuRangePara.MaxNum">
            <summary>
            记录范围的最大记录号
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuRangePara.WhereCond">
            <summary>
            条件串
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuRangePara.OrderBy">
            <summary>
            排序表达式
            </summary>
        </member>
        <member name="T:com.taishsoft.common.stuPagerPara_Static">
            <summary>
            分页获取对象列表的参数对象-Static
            </summary>
        </member>
        <member name="M:com.taishsoft.common.stuPagerPara_Static.GetDictParam(com.taishsoft.common.stuPagerPara)">
            <summary>
            根据分页获取记录的参数对象获取相关的字典参数
            </summary>
            <param name="objPagerPara">分页获取记录的参数对象</param>
            <returns>获取的相关字典参数</returns>
        </member>
        <member name="T:com.taishsoft.common.stuPagerPara">
            <summary>
            分页获取对象列表的参数对象
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuPagerPara.PageIndex">
            <summary>
            页序号
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuPagerPara.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuPagerPara.WhereCond">
            <summary>
            条件串
            </summary>
        </member>
        <member name="P:com.taishsoft.common.stuPagerPara.OrderBy">
            <summary>
            排序表达式
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsDebugBase_Pub.IsDebug">
            <summary>
            是否Debug,如果Debug许多函数会记录被调用的情况
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsDebugBase_Pub.TraceLevel">
            <summary>
            跟踪等级
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsDebugBase_Pub.LogFile4Debug">
            <summary>
            用于Debug的日志文件名
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsDebugBase_Pub.LogDir4Debug">
            <summary>
            用于Debug的日志目录
            </summary>
        </member>
        <member name="T:com.taishsoft.common.clsLog">
            <summary>
            日志类
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog.LogDir">
            <summary>
            日志目录名
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog.LogFileName">
            <summary>
            日志文件名
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog.LogFullFileName">
            <summary>
            日志的完全文件名，包含目录名。
            姓名：潘以锋
            日期：2010-10-04
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsLog.LogErrorS(System.Exception,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="objException">异常对象</param>
            <param name="strModuleName">模块名称</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog.LogErrorS3(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">错误信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog.LogErrorS2(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">错误信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog.LogInfoS1(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            处理提示信息日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">提示信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog.WriteLog(System.String)">
            <summary>
            写日志内容
            </summary>
            <param name="strLogContent"></param>
        </member>
        <member name="M:com.taishsoft.common.clsLog.WriteDebugLog(System.String)">
            <summary>
            写日志调试内容
            姓名：潘以锋
            日期：2010-10-04
            </summary>
            <param name="strLogContent"></param>
        </member>
        <member name="T:com.taishsoft.common.SqlStatement">
            <summary>
            Sql语句(SqlStatement)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.ConnectString">
            <summary>
            当前所使用的连接串内容
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.SqlStatementId">
            <summary>
            Sql语句Id(说明:;字段类型:char;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.OperateType">
            <summary>
            操作类型(说明:;字段类型:varchar;字段长度:30;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.TabName">
            <summary>
            表名(说明:;字段类型:varchar;字段长度:100;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.SelectText">
            <summary>
            Select文本内容(说明:;字段类型:varchar;字段长度:8000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.FromText">
            <summary>
            From文本内容(说明:;字段类型:varchar;字段长度:8000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.WhereCondition">
            <summary>
            条件串(说明:;字段类型:varchar;字段长度:500;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.GROUPBY">
            <summary>
            分组(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.HavingStr">
            <summary>
            分组过滤(说明:;字段类型:varchar;字段长度:200;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.OrderBy">
            <summary>
            排序(说明:;字段类型:varchar;字段长度:100;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.IntoText">
            <summary>
            Into文本(说明:;字段类型:varchar;字段长度:300;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.ValuesText">
            <summary>
            Values文本(说明:;字段类型:varchar;字段长度:300;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.UpdateText">
            <summary>
            Update文本(说明:;字段类型:varchar;字段长度:300;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.SetText">
            <summary>
            Set文本(说明:;字段类型:varchar;字段长度:300;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.DeleteText">
            <summary>
            Delete文本(说明:;字段类型:varchar;字段长度:300;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.OrderNum4Refer">
            <summary>
            引用序号(说明:;字段类型:int;字段长度:4;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.SqlStatementText">
            <summary>
            Sql语句文本内容(说明:;字段类型:varchar;字段长度:8000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.ErrMsg">
            <summary>
            错误信息(说明:;字段类型:varchar;字段长度:4000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.CreateDate">
            <summary>
            建立日期(说明:;字段类型:varchar;字段长度:20;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.AnalysisDate">
            <summary>
            分析日期(说明:;字段类型:varchar;字段长度:14;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.UpdDate">
            <summary>
            修改日期(说明:;字段类型:varchar;字段长度:20;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.UpdUserId">
            <summary>
            修改用户Id(说明:;字段类型:varchar;字段长度:20;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatement.Memo">
            <summary>
            说明(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.DelSingleQuoteContent(System.String)">
            <summary>
            删除单引号中间的内容。
            </summary>
            <param name="strSqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.AnalysisSqlStatement(System.String)">
            <summary>
            分析Sql语句
            </summary>
            <param name="strSqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.GetMainTabName(System.Collections.Generic.List{com.taishsoft.common.SqlStatementRelaTab})">
            <summary>
            从关系表中获取操作主表
            </summary>
            <param name="arrSqlStatementRelaTabObjLst">关系表对象列表</param>
            <returns>返回主表</returns>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.GetUnionLst(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            合并字符串列表（List《string》），经分隔标志分隔后，分成多个字符串列表，把包含在“（”，“）”中的子字符串合并起来
                                            这些不需要合并
            </summary>
            <param name="lstWord">源字符串列表</param>
            <param name="strJoinChar"></param>
            <returns>合并后的字符串列表</returns>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.GetSqlOperateType(System.String)">
            <summary>
            获取Sql语句的操作类型。即是Select、Insert、Update、Delete等
            </summary>
            <param name="strSqlStatement">Sql语句</param>
            <returns>获取的操作类型</returns>
        </member>
        <member name="M:com.taishsoft.common.SqlStatementAC.FieldAnalysis_From(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            字段分析From部分
            </summary>
            <param name="strText_From">From部分的文本</param>
            <param name="objSqlViewEN">Sql视图对象</param>
            <param name="strPrjId">工程Id</param>
            <param name="strCurrDate14">当前日期</param>
            <param name="strUserId">操作用户Id</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:com.taishsoft.common.SqlStatementRelaTab">
            <summary>
            Sql语句相关表(SqlStatementRelaTab)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.ConnectString">
            <summary>
            当前所使用的连接串内容
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.SqlStatementRelaTabId">
            <summary>
            Sql语句相关表Id(说明:;字段类型:char;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.SqlStatementId">
            <summary>
            Sql语句Id(说明:;字段类型:char;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.TabId">
            <summary>
            表ID(说明:;字段类型:char;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.TabName">
            <summary>
            表名(说明:;字段类型:varchar;字段长度:100;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.TabAliases">
            <summary>
            表别名(说明:;字段类型:varchar;字段长度:100;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.RelaFldId">
            <summary>
            关系字段(说明:;字段类型:char;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.OtherFldId">
            <summary>
            其他表字段(说明:;字段类型:char;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.OtherTabId">
            <summary>
            其他表Id(说明:;字段类型:char;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.SV_RelaTabTypeId">
            <summary>
            Sql视图相关表类型Id(说明:;字段类型:char;字段长度:2;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.TabRelationTypeId">
            <summary>
            表关系类型Id(说明:;字段类型:char;字段长度:2;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.TabRelationText">
            <summary>
            表关系文本(说明:;字段类型:varchar;字段长度:500;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.OrderNum">
            <summary>
            序号(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.PrjId">
            <summary>
            工程ID(说明:;字段类型:char;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.UpdDate">
            <summary>
            修改日期(说明:;字段类型:varchar;字段长度:20;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.UpdUserId">
            <summary>
            修改用户Id(说明:;字段类型:varchar;字段长度:20;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.Memo">
            <summary>
            说明(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.IntTag">
            <summary>
            整型Tag(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.StrTag">
            <summary>
            字符型标签(说明:;字段类型:string;字段长度:1000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.SqlStatementRelaTab.IsCheckProperty">
            <summary>
            是否检查属性(说明:;字段类型:bool;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="T:com.taishsoft.common.clsString">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsString.combineStr(System.String,System.Int32)">
            <summary>
            组装字符串，
            </summary>
            <param name="mStr">原来的字符串</param>
            <param name="count">该字符串的重复次数</param>
            <returns>组装好的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.combineStrS(System.String,System.Int32)">
            <summary>
            组装字符串，
            </summary>
            <param name="mStr">原来的字符串</param>
            <param name="count">该字符串的重复次数</param>
            <returns>组装好的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FstUcase(System.String@)">
            <summary>
            功能:使给定的字符串首字母大写
            </summary>
            <param name="mStr"></param>
        </member>
        <member name="M:com.taishsoft.common.clsString.FstUcase_S(System.String@)">
            <summary>
            把单词的第一个字母变成大写
            </summary>
            <param name="mStr"></param>
        </member>
        <member name="M:com.taishsoft.common.clsString.FirstUcase(System.String)">
            <summary>
            把单词的第一个字母变成大写
            </summary>
            <param name="mStr"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FirstUcaseS(System.String)">
            <summary>
            把单词的第一个字母变成大写
            </summary>
            <param name="mStr"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FstLcase(System.String)">
            <summary>
            把单词的第一个字母变成小写
            </summary>
            <param name="mStr"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FstLcaseS(System.String)">
            <summary>
            把单词的第一个字母变成小写
            </summary>
            <param name="mStr"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FirstLcaseS(System.String)">
            <summary>
            把单词的第一个字母变成小写
            </summary>
            <param name="mStr"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetBinaryS(System.Int32)">
            <summary>
            把一个整型转换成一个二进制的字符串
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsString.FileBackup(System.String)">
            <summary>
            文件备份
            </summary>
            <param name="fName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetDirName_S(System.String)">
            <summary>
            获取目录名
            </summary>
            <param name="strPath"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetUniqueFileName_S(System.String)">
            <summary>
            获取唯一文件名
            </summary>
            <param name="strFileFullName"></param>
            <returns>获取的唯一文件名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetUniqueStrValue_S(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            获取唯一字符串值，如果在已存在的值列表中存在，就在后面加-01,-02,-03等
            </summary>
            <param name="strValue">需要检查的值</param>
            <param name="arrExistValueList">已存在的值列表</param>
            <returns>获取的唯一文件名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.ParentDir_S(System.String)">
            <summary>
            父目录
            </summary>
            <param name="strPath"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.AddExeName(System.String@,System.String)">
            <summary>
            为文件名添加扩展名
            </summary>
            <param name="strFileName"></param>
            <param name="strExeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetSimpleFName(System.String)">
            <summary>
            从带有目录的文件名中获取简单的文件名
            </summary>
            <param name="strFileName">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetSimpleFName_S(System.String)">
            <summary>
            从带有目录的文件名中获取简单的文件名
            </summary>
            <param name="strFileName">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetSimplePath(System.String)">
            <summary>
            从多级目录中获取最后一层目录名
            </summary>
            <param name="strFileName">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetFileExtName(System.String)">
            <summary>
            根据文件名，获取该文件的扩展名
            </summary>
            <param name="strFileName">给定的文件名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetPureFileName(System.String)">
            <summary>
            根据文件名，获取该文件的去除扩展名的纯粹文件名
            </summary>
            <param name="strFileName">给定的文件名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsDate(System.String)">
            <summary>
            判断给定字符串是否是日期型数据
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsBoolean(System.String)">
            <summary>
            判断给定字符串是否是布尔型数据
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsBit(System.String)">
            <summary>
            判断给定字符串是否是Bit型数据
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsDigit(System.String)">
            <summary>
            判断是否是数字
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsLetter(System.String)">
            <summary>
            判断是否是字母
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsFloat(System.String)">
            <summary>
            判断是否是浮点型数值
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsNumeric(System.String)">
            <summary>
            判断是否是整型数值
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getTodayStr(System.Int32)">
            <summary>
            功能：获取当前日期的字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            	4、YYYY年MM月DD日
            	5、YYYY年MM月DD日 星期X
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getCurrMonth(System.Int32)">
            <summary>
            功能：获取当前月的字符串
            月的格式：
               月的字符串的格式有三种：
            	1、YYYYMM。	例如200501
            	2、YYYY-MM-DD	例如2005-01
            	3、YYYY/MM/DD	例如2005/01
            	4、YYYY年MM月DD日
            	5、YYYY年MM月DD日 星期X
            </summary>
            <param name="intFormat">月的格式，共有3种，传入参数0,1，2，3,4
            						参数不同，函数返回值就不同，
            						参见上面的月的格式
            </param>
            <returns>返回当前月的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getTodayStr_S(System.Int32)">
            <summary>
            功能：获取当前日期的字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getCurrMonth_S(System.Int32)">
            <summary>
            功能：获取当前月的字符串
            月的格式：
               月的字符串的格式有三种：
            	1、YYYYMM。	例如200501
            	2、YYYY-MM-DD	例如2005-01
            	3、YYYY/MM/DD	例如2005/01
            </summary>
            <param name="intFormat">月的格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的月的格式
            </param>
            <returns>返回当前月的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.ToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>        
        </member>
        <member name="M:com.taishsoft.common.clsString.ToDBC(System.String)">
             <summary>
             转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:com.taishsoft.common.clsString.ToDBC_S(System.String)">
             <summary>
             转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:com.taishsoft.common.clsString.ToDBC_S160(System.String)">
             <summary>
             转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:com.taishsoft.common.clsString.getStrLenS(System.String)">
            <summary>
            获取字符串的实际字节长度，其中汉字是2个字节，字母是一个字节
            </summary>
            <param name="strTemp">提供的字符串</param>
            <returns>返回的字节长度</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.SplitStringBySplitFlagLst(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            分子串，根据分隔标志列表来分
            </summary>
            <param name="strSourceStr">源串</param>
            <param name="lstSplitFlag">分隔标志列表</param>
            <returns>返回字符串列表，分隔子串的列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FindRelaRightBrackets(System.String,System.Int32)">
            <summary>
            找相应的右括号（Brackets：括号）
            </summary>
            <param name="strValue">字符串值</param>
            <param name="iStartPos">起始位置</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.RemoveEndsBrackets(System.String)">
            <summary>
            去除两端（Ends）的括号（Brackets）
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.Utf8ToUnicode(System.String)">
            <summary>
            
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.Utf8ToGB2312(System.String)">
            <summary>
            
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GB2312ToUtf8(System.String)">
            <summary>
            把gb2312的字符串转换成UTF8的字符串
            </summary>
            <param name="strSource">源字符串</param>
            <returns>转换成的目标字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GB2312ToUtf8Bytes(System.String)">
            <summary>
            把gb2312的字符串转换成UTF8的字节数组
            </summary>
            <param name="strSource">源字符串</param>
            <returns>目标字节数组</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GB2312TOUtf8(System.String)">
            <summary>
            
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetBirthdayByIDNumber(System.String)">
            <summary>
            根据身份证获取出生年月
            </summary>
            <param name="ID">身份证号</param>
            <returns>年月日 如:19990101</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.RemoveStringValueInSingleQuotation(System.String)">
            <summary>
            删除在单引号里的字符串值
            </summary>
            <param name="strSourceStr">源字符串</param>
            <returns>删除字符串值后的内容</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetElementValue(System.String,System.String)">
            <summary>
            获取源字符串的元素值，例如："abcde[ss]111[/ss]", 获取元素"ss"的值，为："111"
            </summary>
            <param name="strSourceStr">源字符串</param>
            <param name="strElementName">元素名</param>
            <returns>获取元素值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.RemoveElementValue(System.String,System.String)">
            <summary>
            从源字符串去除元素值，例如："abcde[ss]111[/ss]44", 去除元素"ss"的值，为："abcde44"
            </summary>
            <param name="strSourceStr">源字符串</param>
            <param name="strElementName">元素名</param>
            <returns>获取元素值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.MakeRandom">
            <summary>
            随机生成n位字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.MakeRandom(System.Int32,System.Int32)">
            <summary>
            随机生成n位字符
            </summary>
            <param name="intNumOfCharacters">字符数</param>
            <param name="intAdditionalSeed">附加种子</param>
            <returns>返回n位字符</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetStringLength(System.String)">
            <summary>
            获得字节块的长度
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsString.ReplaceBothWord(System.Object)">
            <summary>
            屏蔽“号
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetPayStringLength(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            获得指定字符串的长度字符串
            </summary>
            <param name="strOld">字符串</param>
            <param name="intStart">字符串开始获取的位置，U</param>
            <param name="intCount">获得字符的字节数</param>
            <param name="bolSign">是否在返回的后面加"..."</param>
            <returns>返回指定长度的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetString(System.String,System.Boolean)">
            <summary>
            获取字符串后加省略号
            </summary>
            <param name="strOld">原字符串</param>
            <param name="bolSign"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetPayStringLength(System.String,System.String,System.Int32,System.Int32@)">
            <summary>
            指定字符串中指定长度的字符串
            </summary>
            <param name="strOld">原字符串</param>
            <param name="strNow">新字符符串</param>
            <param name="intCount">获得字符的字节数</param>
            <param name="intLength">获取字符串的长度 </param>
            <returns>返回指定长度的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getStrBr(System.String,System.Int32)">
            <summary>
            在字符串中指定长度的字符串中加《br》
            </summary>
            <param name="strBr">字符串</param>
            <param name="intSum" >字符串间隔数</param>
            <returns>字符串中加《br》</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetHostName(System.String)">
            <summary>
            屏蔽“号
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsString.GetHtmlFormString(System.String,System.Int32)">
            <summary>
            对指定长度的字符串进行编码（如果长度超出len，则自动会截取）
            </summary>
            <param name="strSrc">源字符串</param>
            <param name="len">长度</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.CombineArrayList(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            把集合合并起来
            </summary>
            <param name="aryBefore">前一个集合</param>
            <param name="aryEnd">后一个集合</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.CombineArrayList(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            把集合合并起来
            </summary>
            <param name="aryBefore">前一个集合</param>
            <param name="aryEnd">后一个集合</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.ConvertDateTimeFormate(System.String,System.Int32)">
            <summary>
            转换字符的格式
            </summary>
            <param name="SourceDateTime"></param>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.InsertSignOnfixationLengthOfstring(System.String,System.String,System.Int32)">
            <summary>
            要转换的字符串
            </summary>
            <param name="DataofDateTime">源字符串</param>
            <param name="sign">符号 EG:“-”</param>
            <param name="length">子串的长度</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.HtmlEncode(System.String)">
            <summary>
            HTML编码
            </summary>
            <param name="txtstr">源串</param>
            <returns>生成不能进行HTML解释的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.HtmlDecode(System.String)">
            <summary>
            Html代码的解码
            </summary>
            <param name="txtstr">源串</param>
            <returns>生成可以解释的HTML代码</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.FilterSpecilizeString(System.String)">
            <summary>
            过滤特殊的字符
            </summary>
            <param name="SourceData">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.HexStringToByteArray(System.String)">
            <summary>
            把二进制字符串转换成相应的二进制数组
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.ByteArrayToHexString(System.Byte[])">
            <summary>
            把二进制数组转换成字符串
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.SplitWord(System.String)">
            <summary>
            把一段字符串分成一个个单词
            </summary>
            <param name="strSourceString"></param>
            <returns>单词列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.IsSplitChar(System.String)">
            <summary>
            判断字符是否是分隔符
            </summary>
            <param name="strChar"></param>
            <returns>是返回true, 否则返回false</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.CombineListToString(System.Collections.Generic.List{System.String})">
            <summary>
            把字符串列表 组合成一个字符串
            </summary>
            <param name="lstWord">字符串列表</param>
            <returns>组合成的一个字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsString.getHtmlEncodeFromTextCode(System.String)">
            <summary>
            把文本格式，转换为HTML编码格式
            </summary>
            <param name="txtstr">源串</param>
            <returns>生成不能进行HTML解释的字符串</returns>
        </member>
        <member name="T:com.taishsoft.common.clsSysPara_TzPubFunction">
            <summary>
            clsSysPara 的摘要说明。
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.strXmlSpParaFileName">
            <summary>
            用于定义SQL存储过程的XML文件名称
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.strConnectStrName">
            连接串名称
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.bolIsUseConnectStrName">
            <summary>
            是否使用连接串名
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.strUserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.strConnectString">
            <summary>
            连接串
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsSysPara_TzPubFunction.strVersion">
            <summary>
            PubDataBase的版本
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToStr(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToStr_S(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToInt(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToInt_S(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToShort(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToShort_S(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToDate(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToDate_S(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToFloat(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToFloat_S(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToDouble(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToDouble_S(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToBool(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="M:com.taishsoft.common.clsTranslate.TransNullToBool_S(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="T:com.taishsoft.common.clsIntCollection">
            <summary>
            整数集合
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsIntCollection.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="intCount"></param>
        </member>
        <member name="P:com.taishsoft.common.clsIntCollection.Item(System.Int32)">
            <summary>
            根据索引（index）获取集合中元素值
            </summary>
            <param name="index">索引</param>
            <returns>集合中元素值</returns>
        </member>
        <member name="P:com.taishsoft.common.clsIntCollection.Count">
            <summary>
            集合中元素个数
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsIntCollection.ToIntArray">
            <summary>
            导出整数集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.common.clsLog_S">
            <summary>
            日志类
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog_S.LogDir_S">
            <summary>
            日志目录名
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog_S.LogFileName_S">
            <summary>
            日志文件名
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsLog_S.LogFullFileName_S">
            <summary>
            日志的完全文件名，包含目录名。
            姓名：潘以锋
            日期：2010-10-04
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.LogErrorS(System.Exception,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="objException">异常对象</param>
            <param name="strModuleName">模块名称</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.LogErrorS3(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">错误信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.LogInfoS1(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            处理提示信息日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">提示信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.WriteLog(System.String)">
            <summary>
            写日志内容
            </summary>
            <param name="strLogContent"></param>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.WriteDebugLog_S(System.String)">
            <summary>
            写日志调试内容
            姓名：潘以锋
            日期：2010-10-04
            </summary>
            <param name="strLogContent"></param>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.FlushDebugLogByQueue">
            <summary>
            写日志调试内容
            姓名：潘以锋
            日期：2010-10-04
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsLog_S.WriteDebugLogByQueue(System.String)">
            <summary>
            写日志调试内容
            姓名：潘以锋
            日期：2010-10-04
            </summary>
            <param name="strLogContent"></param>
        </member>
        <member name="T:com.taishsoft.common.clsWeekTimesliceBL">
            <summary>
            周时间段(WeekTimeslice)
            数据源类型：SQL表
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceBL.itemXmlNode">
            <summary>
            单项的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceBL.listXmlNode">
            <summary>
            列表的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceBL.itemsXmlNode">
            <summary>
            集合的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceBL.arrWeekTimesliceObjLst_Cache">
            <summary>
            静态的对象列表，用于缓存，针对记录较少，作为参数表可以使用
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceBL.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.#ctor">
            <summary>
            类的构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.IsConflict(System.Collections.Generic.List{com.taishsoft.common.clsWeekTimesliceEN},com.taishsoft.common.clsWeekTimesliceEN)">
            <summary>
            功能：判断被检查的周时间片对象是否与提供的周单片对象列表冲突
            </summary>
            <param name="arrWeekTimesliceObjLst">周时间片对象列表</param>
            <param name="objWeekTimesliceEN_T">被检查的周时间片对象</param>
            <returns>如果存在就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.SerializeObjListToXMLFile(System.Collections.Generic.List{com.taishsoft.common.clsWeekTimesliceEN},System.String)">
            <summary>
            序列化一个对象列表到Xml文件
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="lstWeekTimesliceObjList">需要序列化的对象列表</param>
            <param name="strXmlFile">生成的XML文件</param>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.SerializeObjListToXML(System.Collections.Generic.List{com.taishsoft.common.clsWeekTimesliceEN},System.Xml.XmlWriter)">
            <summary>
            序列化一个对象列表到XmlWriter
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="lstWeekTimesliceObjList">[clsWeekTimesliceEN]对象列表</param>
            <param name="writer">提供的一个XmlWriter对象</param>
            <returns>返回是否成功?</returns>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.SerializeXML(System.Xml.XmlWriter,com.taishsoft.common.clsWeekTimesliceEN)">
            <summary>
            把一个对象序列化到XML中
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="writer">目标：序列化到的XmlWriter</param>
            <param name="objWeekTimesliceEN">数据源：需要序列化的对象</param>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.GetWeekTimesliceObjListFromXmlStr(System.String)">
            <summary>
            从XML串中获取一个对象列表
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="strWeekTimeslicelistXml">提供的一个XML串</param>
            <returns>返回一个[clsWeekTimesliceEN]对象列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.GetWeekTimesliceObjListFromXmlFile(System.String)">
            <summary>
            从XML文件中获取一个对象列表
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="strXmlFileName">提供的一个XML文件</param>
            <returns>返回一个[clsWeekTimesliceEN]对象列表</returns>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.GetWeekTimesliceFromXml(System.Xml.XmlReader)">
            <summary>
            读XmlReader到一个对象
            作者：潘以锋
            日期：2015/08/19
            </summary>
            <param name="reader">提供的数据源：XmlReader</param>
            <returns>返回的一个对象</returns>
        </member>
        <member name="M:com.taishsoft.common.clsWeekTimesliceBL.GetWeekTimesliceFromXmlStr(System.String)">
            <summary>
            读Xml字符串到一个对象
            作者：潘以锋
            日期：2010/10/04
            </summary>
            <param name="strWeekTimesliceObjXmlStr">提供的数据源：表示一个对象的XML串</param>
            <returns>返回的一个对象</returns>
        </member>
        <member name="T:com.taishsoft.common.clsWeekTimesliceEN">
            <summary>
            周时间段(WeekTimeslice)
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_mId">
            <summary>
            常量："mId"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_WeekDayID">
            <summary>
            常量："WeekDayID"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_StartTime">
            <summary>
            常量："StartTime"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_EndTime">
            <summary>
            常量："EndTime"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_Memo">
            <summary>
            常量："Memo"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_IntTag">
            <summary>
            常量："IntTag"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_StrTag">
            <summary>
            常量："StrTag"
            </summary>
        </member>
        <member name="F:com.taishsoft.common.clsWeekTimesliceEN.con_IsCheckProperty">
            <summary>
            常量："IsCheckProperty"
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.ConnectString">
            <summary>
            当前所使用的连接串内容
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.mId">
            <summary>
            流水号(说明:;字段类型:bigint;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.WeekDayID">
            <summary>
            星期代号(说明:;字段类型:char;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.StartTime">
            <summary>
            开始时间(说明:;字段类型:varchar;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.EndTime">
            <summary>
            结束时间(说明:;字段类型:varchar;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.Memo">
            <summary>
            备注(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.IntTag">
            <summary>
            整型Tag(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.StrTag">
            <summary>
            字符型标签(说明:;字段类型:string;字段长度:1000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.common.clsWeekTimesliceEN.IsCheckProperty">
            <summary>
            是否检查属性(说明:;字段类型:bool;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.clsCommFun4BLV3">
            <summary>
            针对业务逻辑层的一些公共函数类，必须经继承后才能使用。
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsCommFun4BLV3.ReFreshCache(System.String,System.String)">
            <summary>
            重新刷新缓存的函数
            </summary>
            <param name="strCacheClassifyField">缓存分类字段</param>       
            <param name="strCacheClassifyField2">缓存分类字段2</param>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.clsCommFun4BLV2">
            <summary>
            针对业务逻辑层的一些公共函数类，必须经继承后才能使用。
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsCommFun4BLV2.ReFreshCache(System.String)">
            <summary>
            重新刷新缓存的函数
            </summary>
            <param name="strCacheClassifyField">缓存分类字段</param>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.clsCommFun4BL">
            <summary>
            针对业务逻辑层的一些公共函数类，必须经继承后才能使用。
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsCommFun4BL.ReFreshCache">
            <summary>
            重新刷新缓存的函数
            </summary>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.OnAddNewRecord">
            <summary>
            用于添加记录时事件代理定义
            </summary>
            <param name="objNewObject4Add">添加的新对象</param>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.OnUpdateRecord">
            <summary>
            用于修改记录(存数据库时)时事件代理定义
            </summary>
            <param name="objObject4Update">修改的对象</param>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.OnDeleteRecord">
            <summary>
            用于删除记录时事件代理定义
            </summary>
            <param name="objKeyId4Delete">删除记录的关键字</param>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase._CurrTabName">
            <summary>
            当前表名，与该类相关的表名
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.htProperty">
            <summary>
            用于记录在修改属性过程中哪些属性被设置过
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.KeyFldName">
            <summary>
            当前表的关键字字段的名称
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.mstrErrMsg_Tz">
            <summary>
            以下是出错信息
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.mintErrNo">
            <summary>
            以下是出错信息号码
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.mstrDispErrMsg">
            <summary>
            
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.mstrModuleName">
            <summary>
            
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.mblnDisposed">
            <summary>
            是否已经释放对象(用于析构函数)
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase.EXCEPTION_MSG">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.#ctor">
            该函数不存在:
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.SetInit">
            <summary>
            设置类的有些属性初始值
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase.ErrNo">
            <summary>
            错误号
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase.DispErrMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase.TabName_Curr">
            <summary>
            当前类(对象)的表名
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase.TabKeyFldName">
            <summary>
            当前类(对象)的表关键字段名
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToStr(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToStr_S(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToInt(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToInt_S(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToShort(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToShort_S(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToDate(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToDate_S(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToFloat(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToFloat_S(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToDouble(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToDouble_S(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToBool(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.TransNullToBool_S(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.LogErrorS(System.Exception,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="objException">异常对象</param>
            <param name="strModuleName">模块名称</param>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase.LogErrorS2(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">错误信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="T:com.taishsoft.comm_db_obj.clsEntityBase2">
            <summary>
            实体对象的基类2
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2._CurrTabName">
            <summary>
            当前表名，与该类相关的表名
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.lstUpdatedFldCol">
            <summary>
            用于记录在修改属性过程中哪些属性被设置过
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.dicFldComparisonOp">
            <summary>
            对象中与条件相关的字段比较运算符
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2.sf_FldComparisonOp">
            <summary>
            对象中与条件相关的字段比较运算符
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.lstKeyFldNames">
            <summary>
            当前对象的关键字名集合
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mstrErrMsg_Tz">
            <summary>
            出错信息
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._KeyId">
            <summary>
            表的关键字
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._NameValue">
            <summary>
            表的名称字段值
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2.sf_UpdFldSetStr">
            <summary>
            系统字段_修改字段集合串      
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mintErrNo">
            <summary>
            错误信息号 0:正常,1:房间号为空,2:学号为空
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._ModuleName">
            <summary>
            当前模块名，即当前类名
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mblnDisposed">
            <summary>
            是否已经释放对象(用于析构函数)
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.EXCEPTION_MSG">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mintIntTag">
            <summary>
            整型Tag
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mstrStrTag">
            <summary>
            字符型标签
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.mbolIsCheckProperty">
            <summary>
            是否检查属性
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.con_IntTag">
            <summary>
            常量:"IntTag"
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:DefPropertyNameConst)
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.con_StrTag">
            <summary>
            常量:"StrTag"
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:DefPropertyNameConst)
            </summary>
        </member>
        <member name="F:com.taishsoft.comm_db_obj.clsEntityBase2.con_IsCheckProperty">
            <summary>
            常量:"IsCheckProperty"
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:DefPropertyNameConst)
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._ConnectString">
            <summary>
            当前所使用的连接串内容
            (AGC_CSV7.BusinessLogicEx.AutoGCPubFuncV6:GenConnectString)
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._IntTag">
            <summary>
            整型Tag(说明:;字段类型:int;字段长度:4;是否可空:False)
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:ToString2)
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._StrTag">
            <summary>
            字符型标签(说明:;字段类型:string;字段长度:1000;是否可空:False)
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:ToString2)
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._Checked">
            <summary>
            用于复选框的是否选择
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._IsCheckProperty">
            <summary>
            是否检查属性(说明:;字段类型:bool;字段长度:1;是否可空:False)
            (AGC_CSV7.BusinessLogicEx.clsPrjTabFldBLEx:ToString2)
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.SetInit">
            <summary>
            给类的有些通用属性进行初始值
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._ErrNo">
            <summary>
            错误号
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._DispErrMsg">
            <summary>
            对外显示的错误信息
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._TabName_Curr">
            <summary>
            当前类(对象)的表名
            </summary>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2._TabKeyFldNames">
            <summary>
            当前类(对象)的表关键字段名
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToStr(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToStr_S(System.Object)">
            <summary>
            把可能为null的对象转换为字符串,如果为NULL就返回空串
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToInt(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToInt_S(System.Object)">
            <summary>
            把可能为null的对象转换为整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToShort(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToShort_S(System.Object)">
            <summary>
            把可能为null的对象转换为短整型,如果为NULL就返回0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的短整型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToDate(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToDate_S(System.Object)">
            <summary>
            把可能为null的对象转换为日期型,如果为NULL就返回#1/1/1900#(最小的日期)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的日期型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToFloat(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToFloat_S(System.Object)">
            <summary>
            把可能为null的对象转换为浮点型,如果为NULL就返回0.0f
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToDouble(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToDouble_S(System.Object)">
            <summary>
            把可能为null的对象转换为双精浮点型,如果为NULL就返回0.0
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的双精浮点型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToBool(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.TransNullToBool_S(System.Object)">
            <summary>
            把可能为null的对象转换为布尔型,如果为NULL就返回假(false)
            </summary>
            <param name="obj">给出的对象</param>
            <returns>返回的布尔型值</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.AddUpdatedFld(System.String)">
            <summary>
            添加已经修改的字段
            </summary>
            <param name="strFldName">字段名</param>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.getsf_UpdFldSetStr">
            <summary>
            获取修改字段的合并串，以“|”分隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.ClearFldUpdateFlag">
            <summary>
            清除字段的修改标志
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.IsUpdated(System.String)">
            <summary>
            检查字段是否修改过。
            </summary>
            <param name="strFldName">字段名</param>
            <returns>返回 true:修改过；false:未修改</returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.ClearUpdateState">
            <summary>
            清除修改状态,即清空存储脏字段信息的lstUpdatedFldCol集合.
            </summary>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.LogErrorS(System.Exception,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="objException">异常对象</param>
            <param name="strModuleName">模块名称</param>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.LogErrorS2(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            处理错误日志的函数
            </summary>
            <param name="strModuleName">模块名称</param>
            <param name="strSource">来源</param>
            <param name="strMessage">错误信息</param>
            <param name="strStackTrace">跟踪信息</param>
            <param name="strTargetSite">目标站点</param>
        </member>
        <member name="P:com.taishsoft.comm_db_obj.clsEntityBase2.Item(System.String)">
            <summary>
            
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.comm_db_obj.clsEntityBase2.SetCondFldValue(System.String,System.String,System.String)">
            <summary>
            为条件设置相关字段值，为自动处理获取条件串做准备
            </summary>
            <param name = "strFldName">字段名</param>
            <param name = "strFldValue">字段值</param>
            <param name = "strComparisonOp">比较运算符</param>
        </member>
        <member name="T:com.taishsoft.datetime.clsDateTime">
            <summary>
            clsDateTime 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.#ctor(System.Int32)">
            <summary>
            构造日期
            </summary>
            <param name="intYear">年</param>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.#ctor(System.Int32,System.Int32)">
            <summary>
            构造日期
            </summary>
            <param name="intYear">年</param>
            <param name="intMonth">月</param>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            构造日期
            </summary>
            <param name="intYear">年</param>
            <param name="intMonth">月</param>
            <param name="intDay">日</param>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstDayOfMonth(System.DateTime)">
            <summary>
            获取当前月的第1天的日期对象
            </summary>
            <param name="objDateTime">提供的日期对象</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstRowColDayOfMonth(System.DateTime)">
            <summary>
            获取当前月的第1行第1列的日期对象
            </summary>
            <param name="objDateTime">提供的日期对象</param>
            <returns>当前月的第1行第1列的日期对象</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstRowColDayOfMonth(System.String)">
            <summary>
            获取当前月的第1行第1列的日期对象
            </summary>
            <param name="strDateStr8">提供的日期串</param>
            <returns>当前月的第1行第1列的日期对象</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstDayOfWeek(System.DateTime)">
            <summary>
            获取当前周的第1天的日期对象
            </summary>
            <param name="objDateTime">提供的日期对象</param>
            <returns>当前周的第1天的日期对象</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstDayOfWeek(System.String)">
            <summary>
            获取当前周的第1天的日期对象
            </summary>
            <param name="strDateStr8">提供的日期串</param>
            <returns>当前周的第1天的日期对象</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetWeekNoByDateObj(System.String)">
            <summary>
            获取所给日期的在年中的周序号
            </summary>
            <param name="strDateStr8">提供的日期字符串</param>
            <returns>在当前年的周序号</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetWeekNoByCurrDate">
            <summary>
            获取当天日期的在年中的周序号
            </summary>
            <returns>当天在当前年的周序号</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetCurrYear">
            <summary>
            获取当前年
            </summary>
            <returns>当前年</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetWeekNoByDateObj(System.DateTime)">
            <summary>
            获取所给日期的在年中的周序号
            </summary>
            <param name="objDateTime">提供的日期对象</param>
            <returns>在当前年的周序号</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetFirstDateByWeekNo(System.Int32,System.Int32)">
            <summary>
            获取所给周序号的周第1天的日期对象
            </summary>
            <param name="intYear">提供的年</param>
            <param name="intWeekNo">提供的周序号</param>
            <returns>所给周序号的周第1天日期对象</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateTimeByDateStr8(System.String)">
            <summary>
            根据日期串获取日期对象
            </summary>
            <param name="strDateStr8">8位日期串</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateTimeByDateStr14(System.String)">
            <summary>
            根据14位日期时间串，获取DateTime
            </summary>
            <param name="strDateStr14">14位日期时间串</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateTime_Sim(System.String)">
            <summary>
            根据标准的日期时间串(19位)获取一个简单化的日期时间串(14位)，例如原串：2020-07-05 12:33:44(19位),简化串：20-07-05 12:33(14位)
            作者:潘以锋
            日期：2020-08-07
            </summary>
            <param name="strDateTime19">标准的日期时间串(19位)</param>
            <returns>简化后的日期时间串(14位)</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateTime_Sim2(System.String)">
            <summary>
            根据标准的日期时间串(19位)获取一个简单化的日期串(8位)，例如原串：2020-07-05 12:33:44(19位),简化串：20-07-05(8位)
            作者:潘以锋
            日期：2020-08-07
            </summary>
            <param name="strDateTime19">标准的日期时间串(19位)</param>
            <returns>简化后的日期时间串(14位)</returns>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateTime.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateTime.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateTime.Day">
            <summary>
            天
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateTime.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateTime.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getTodayStr(System.Int32)">
            <summary>
            功能：获取当前日期的字符串,共8位--更多。
            日期格式：
               日期的字符串的格式有三种：
            	0、YYYYMMDD。	例如20050120
            	1、YYYY-MM-DD	例如2005-01-20
            	2、YYYY/MM/DD	例如2005/01/20
            	3、YYYY年MM月DD日	例如2005年01月20日
            	4、YYYY年MM月DD日W	例如2005年01月20日星期三
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getTodayStr2(System.Int32)">
            <summary>
            功能：获取当前日期时间的字符串，共14位
            日期格式：
               日期的字符串的格式有三种：
            	0、YYYYMMDDHHMMSS。	例如20050120213004
            	1、YYYY-MM-DDHHMMSS	例如2005-01-20213004
            	2、YYYY/MM/DDHHMMSS	例如2005/01/20213004
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getTodayDateTimeStr(System.Int32)">
            <summary>
            功能：获取当前日期时间的字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDDHHMMSS。	例如20050120113005
            	2、YYYY-MM-DD	例如2005-01-20 11:30:05
            	3、YYYY/MM/DD	例如2005/01/20 11:30:05
            </summary>
            <param name="intFormat">日期格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前日期的字符串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getCurrMonth(System.Int32)">
            <summary>
            功能：获取当前月的字符串
            月的格式：
               月的字符串的格式有三种：
            	1、YYYYMM。	例如200501
            	2、YYYY-MM-DD	例如2005-01
            	3、YYYY/MM/DD	例如2005/01
            </summary>
            <param name="intFormat">月的格式，共有3种，传入参数0,1，2
            						参数不同，函数返回值就不同，
            						参见上面的月的格式
            </param>
            <returns>返回当前月的字符串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getCurrMonth">
            <summary>
            功能：获取当前月的数字
            </summary>
            <returns>返回当前月（整型）</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getCurrTime(System.Int32)">
            <summary>
            功能：获取当前时间的字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、HHMMSS。	例如182505
            	2、HH:MM:SS	例如18:25:05
            </summary>
            <param name="intFormat">日期格式，共有2种，传入参数0,1
            						参数不同，函数返回值就不同，
            						参见上面的日期格式
            </param>
            <returns>返回当前时间的字符串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.IsDate(System.String)">
            <summary>
            判断给定字符串是否是日期型数据
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.IsDigit(System.String)">
            <summary>
            判断是否是数字
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.IsFloat(System.String)">
            <summary>
            判断是否是浮点型数值
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.IsNumeric(System.String)">
            <summary>
            判断是否是整型数值
            </summary>
            <param name="strValue">需要判断的字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetUpdDateByFile(System.String)">
            <summary>
            功能:获取所给文件的最后修改日期
            </summary>
            <param name="strFile">所给文件全名</param>
            <returns>返回的8位日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getDateStr(System.DateTime,System.Int32)">
            <summary>
            功能：获取所给标准日期的日期字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            </summary>
            <param name="dtTemp">所给标准日期</param>
            <param name="intFormat">日期格式,0:8位日期,1:10位横杠日期,2:10位斜杠日期</param>
            <returns>返回:指定格式的日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getDateStr(System.String,System.Int32)">
            <summary>
            功能：获取所给日期串的日期字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            	4、YY-MM-DD	    例如05-01-20
            </summary>
            <param name="strDateTimeStr">所给的日期串</param>
            <param name="intFormat">日期格式,0:8位日期,1:10位横杠日期,2:10位斜杠日期，3:8位横杠日期,</param>
            <returns>返回:指定格式的日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.ChangeDateToDate8(System.DateTime)">
            <summary>
            把所给标准日期转换成8位日期
            </summary>
            <param name="dtDate">标准日期</param>
            <returns>8位日期</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.ChangeDateToDate14(System.DateTime)">
            <summary>
            把所给标准日期转换成14位日期时间
            </summary>
            <param name="dtDate">标准日期</param>
            <returns>14位日期时间串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.ChangeDateToDate10(System.String)">
            <summary>
            把8位日期转换成带斜杠"/"的函数
            </summary>
            <param name="strDate">所给的8位日期</param>
            <returns>返回的10位斜杠日期</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.ChangeDateToDate10(System.String,System.Int32)">
            <summary>
            把8位日期转换成带斜杠"/","-"的函数
            </summary>
            <param name="strDate">所给的8位日期</param>
            <param name="intFormat">日期格式,0:8位日期,1:10位横杠日期,2:10位斜杠日期</param>
            <returns>返回的10位斜杠日期</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateStrWithYMD(System.String)">
            <summary>
            把8位日期转换成带斜杠"年月日"的函数
            </summary>
            <param name="strDate">8位标准的日期串</param>
            <returns>带有年月日的标准日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateStrWithYMD2(System.String)">
            <summary>
            把8位日期转换成带斜杠"年月日"的函数,月日前不带“0”
            </summary>
            <param name="strDate">8位标准的日期串</param>
            <returns>带有年月日的标准日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateStrWithYMD">
            <summary>
            把日期转换成带斜杠"年月日"的函数
            </summary>
            <returns>带有年月日的标准日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetDateStr10(System.String)">
            <summary>
            把日期转换成带斜杠"/"的函数
            </summary>
            <returns>返回的10位斜杠日期</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getDateStr(System.Int32)">
            <summary>
            功能：获取当前日期对象的日期字符串
            日期格式：
               日期的字符串的格式有三种：
            	0、YYYYMMDD。	例如20050120
            	1、YYYY-MM-DD	例如2005-01-20
            	2、YYYY/MM/DD	例如2005/01/20
            	3、DD/MM/YYYY	例如01/20/2005
            	4、MM/DD/YYYY	例如20/01/2005
            </summary>
            <param name="intFormat">日期格式,0:8位日期,1:10位横杠日期,2:10位斜杠日期</param>
            <returns>返回:指定格式的日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getDateStr(System.String)">
            <summary>
            功能：获取所给标准日期的日期字符串
            日期格式：
               日期的字符串的格式有三种：
            	1、YYYYMMDD。	例如20050120
            	2、YYYY-MM-DD	例如2005-01-20
            	3、YYYY/MM/DD	例如2005/01/20
            	4、DD/MM/YYYY	例如20/01/2005
            	5、MM/DD/YYYY	例如01/20/2005
            	6、YYYYMM	    例如200501
            	7、YYYY年MM月 	例如2005年01月
            	8、YYYY年M月 	例如2005年1月
            	9、YYYY年MM月DD日	例如2005年01月20日
            	10、YYYY年M月D日	例如2005年1月20日
            </summary>
            <param name="strFormat">日期格式,0:8位日期,1:10位横杠日期,2:10位斜杠日期</param>
            <returns>返回:指定格式的日期串</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getRowColByDate(System.String)">
            <summary>
            获取8位日期串的行（Row，整型）列（Col，整型），用Row*10+Col返回
            </summary>
            <param name="strDate">8位日期串</param>
            <returns>行（Row，整型）列（Col，整型），用Row*10+Col返回</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.GetEnglighOrdinalByNum(System.Int32)">
            <summary>
            序号数字转换成英文
            </summary>
            <param name="intOrdinal">序号数字</param>
            <returns>转换后的英文</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getEnglighMonthByNum(System.Int32)">
            <summary>
            获取英文月，通过数字得到英文月
            </summary>
            <returns>数字月份</returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getEnglighDay_EN">
            <summary>
            获取英文日期, 例如： Novermber 15, 1990
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getEnglighDay_EN2">
            <summary>
            获取英文日期, 例如： Novermber 15, 1990
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getBirthDay_EN">
            <summary>
            获取英文的出生年月, 例如： 5th Novermber , 1990
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getBirthDay_EN2">
            <summary>
            获取英文的出生年月, 例如：  Novermber 24 1990
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.getBirthDay_EN3">
            <summary>
            获取英文的出生年月,其中带逗号 例如：  Novermber 24, 1990
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.CheckYearMonth6(System.String)">
            <summary>
            检查6位年月是否正确
            日期：20140410
            编写人：潘以锋
            </summary>
            <param name="strYearMonth"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.CheckDate8(System.String)">
            <summary>
            检查8位日期是否正确
            日期：20140410
            编写人：潘以锋
            </summary>
            <param name="strDate"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.CheckYear(System.String)">
            <summary>
            检查年是否正确
            日期：20140410
            编写人：潘以锋
            </summary>
            <param name="strYear"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.CheckMonth(System.String)">
            <summary>
            检查月是否正确
            日期：20140410
            编写人：潘以锋
            </summary>
            <param name="strMonth"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateTime.CheckDay(System.String)">
            <summary>
            检查日是否正确
            日期：20140410
            编写人：潘以锋
            </summary>
            <param name="strDay"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.datetime.clsDateRangeBL">
            <summary>
            日期范围(DateRange)
            数据源类型：SQL表
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeBL.itemXmlNode">
            <summary>
            单项的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeBL.listXmlNode">
            <summary>
            列表的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeBL.itemsXmlNode">
            <summary>
            集合的XML结点标签
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeBL.arrDateRangeObjLst_Cache">
            <summary>
            静态的对象列表，用于缓存，针对记录较少，作为参数表可以使用
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeBL.intFindFailCount">
            <summary>
            从缓存中查找失败的次数
            </summary>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateRangeBL.#ctor">
            <summary>
            类的构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.datetime.clsDateRangeBL.IsEffectiveDate(com.taishsoft.datetime.clsDateRangeEN,System.String)">
            <summary>
            功能：判断被检查的日期是否是有效日期，根据日期范围来检查
            </summary>
            <param name="objDateRangeEN">日期范围</param>
            <param name="strDate">被检查的日期(8位日期：20150901)</param>
            <returns>如果是有效日期就返回TRUE，否则返回FALSE</returns>
        </member>
        <member name="T:com.taishsoft.datetime.clsDateRangeEN">
            <summary>
            日期范围(DateRange)
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_mId">
            <summary>
            常量："mId"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_BeginDate">
            <summary>
            常量："BeginDate"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_EndDate">
            <summary>
            常量："EndDate"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_Memo">
            <summary>
            常量："Memo"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_IntTag">
            <summary>
            常量："IntTag"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_StrTag">
            <summary>
            常量："StrTag"
            </summary>
        </member>
        <member name="F:com.taishsoft.datetime.clsDateRangeEN.con_IsCheckProperty">
            <summary>
            常量："IsCheckProperty"
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.ConnectString">
            <summary>
            当前所使用的连接串内容
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.mId">
            <summary>
            流水号(说明:;字段类型:bigint;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.BeginDate">
            <summary>
            开始日期(说明:;字段类型:char;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.EndDate">
            <summary>
            结束日期(说明:;字段类型:char;字段长度:8;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.Memo">
            <summary>
            备注(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.IntTag">
            <summary>
            整型Tag(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.StrTag">
            <summary>
            字符型标签(说明:;字段类型:string;字段长度:1000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.datetime.clsDateRangeEN.IsCheckProperty">
            <summary>
            是否检查属性(说明:;字段类型:bool;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="T:com.taishsoft.dynamiccompiler.clsDynamicCompiler">
            <summary>
            动态编译器
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicCompiler.objCompilerResults">
            <summary>
            当前的编译结果
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicCompiler.objAssembly">
            <summary>
            当前程序集
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicCompiler.mstrClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicCompiler.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicCompiler.NameSpace">
            <summary>
            域名
            </summary>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.AddFunction(com.taishsoft.dynamiccompiler.clsDynamicFunction)">
            <summary>
            添加函数
            </summary>
            <param name="objDynamicFunction"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.AddReferencedAssemblie(System.String)">
            <summary>
            添加引用的程序集
            </summary>
            <param name="strReferencedAssemblie"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.AddUsing(System.String)">
            <summary>
            添加引用
            </summary>
            <param name="strUsing"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.AddDefineClassVar(System.String)">
            <summary>
            添加类变量定义
            </summary>
            <param name="strDefineClassVar"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.ExecFunction(com.taishsoft.dynamiccompiler.clsDynamicFunction)">
            <summary>
            执行函数
            </summary>
            <param name="objDynamicFunction"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.ExecStaticFunction(com.taishsoft.dynamiccompiler.clsDynamicFunction)">
            <summary>
            执行类的静态的方法
            </summary>
            <param name="objDynamicFunction"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicCompiler.ExecInstanceFunction(com.taishsoft.dynamiccompiler.clsDynamicFunction)">
            <summary>
            执行类的实例（对象）方法
            </summary>
            <param name="objDynamicFunction"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.dynamiccompiler.clsDynamicFunction">
            <summary>
            动态函数，从程序集中分析得到的函数
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicFunction.mstrClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.NameSpace">
            <summary>
            域名
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicFunction.mAssemblyFile">
            <summary>
            程序集文件
            </summary>
        </member>
        <member name="F:com.taishsoft.dynamiccompiler.clsDynamicFunction.mAssemblyType">
            <summary>
            程序集类型
            </summary>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicFunction.AddCommandLine(System.String)">
            <summary>
            添加命令行
            </summary>
            <param name="strCommandLine">命令行</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicFunction.AddParameter(System.Object)">
            <summary>
            添加执行的参数
            </summary>
            <param name="strParameter">执行参数</param>
            <returns></returns>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.FunctionName">
            <summary>
            函数名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.FunctionSignature">
            <summary>
            函数签名
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.FunctionContent">
            <summary>
            函数内容
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.ExecReturn">
            <summary>
            执行函数返回值
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.AssemblyType">
            <summary>
            程序集类型，代表某一个类
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.AssemblyFile">
            <summary>
            程序集文件
            </summary>
        </member>
        <member name="P:com.taishsoft.dynamiccompiler.clsDynamicFunction.FuncId">
            <summary>
            函数Id， 关键字
            </summary>
        </member>
        <member name="M:com.taishsoft.dynamiccompiler.clsDynamicFunction.IsExistSameFunction(System.Collections.Generic.Queue{System.Object},com.taishsoft.dynamiccompiler.clsDynamicFunction)">
            <summary>
            在函数对象列表中检查是否存在所给的函数对象
            </summary>
            <param name="arrFunctionObjLst">函数对象列表</param>
            <param name="objDynamicFunction">所给的函数对象</param>
            <returns>存在就返回True,否则就返回False</returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.EncryptXmlDoc(System.Xml.XmlElement)">
            <summary>
            对xml文件进行加密
            </summary>
            <param name="Doc">xml文件名</param>
            <param name="ElementName">所要加密节点名</param>
            <param name="Key">密钥</param>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.getXmlElementEx(System.Xml.XmlDocument,System.String)">
            <summary>
            到XML文档中查找某个结点
            </summary>
            <param name="xmldoc"></param>
            <param name="strNodeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.getXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            到XML文档中查找某个结点
            </summary>
            <param name="xmldoc"></param>
            <param name="strNodeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.EncryptXmlDoc(System.String,System.String)">
            <summary>
            对xml文件进行加密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.EncryptXmlDocEx(System.String,System.String)">
            <summary>
            对xml文件进行加密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.DecryptXmlDoc(System.String,System.String)">
            <summary>
            对xml文件进行解密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.GetConnectStringForEncrypt(System.String,System.String)">
            <summary>
            对xml文件进行解密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.GetConnectStringForEncryptEx(System.String,System.String)">
            <summary>
            对xml文件进行解密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.GetConnectStringForEncrypt(System.String,System.String,System.String)">
            <summary>
            对xml文件进行解密
            </summary>
            <param name="strXmlDocName">xml文件名</param>
            <param name="strNodeName">所要加密节点名</param>
            <param name="strConnStrName">连接串名称</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.LoadXML(System.String)">
            <summary>
            加载xml文档
            </summary>
            <param name="xmlfilename">xml文件名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.encrypt.clsEncrypt.MD5(System.String)">
            <summary>
            MD5加密函数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.CreateFileByString(System.String,System.String)">
            <summary>
            根据文件内容来建立一个文件
            </summary>
            <param name="strFullFileName"></param>
            <param name="strFileContent"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.CreateFileByString(System.String,System.String,System.Text.Encoding)">
            <summary>
            根据文件内容来建立一个文件
            </summary>
            <param name="strFullFileName"></param>
            <param name="strFileContent"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.AppendStringToFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strFullFileName"></param>
            <param name="strFileContent"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetContentFromTextFile(System.String)">
            <summary>
            
            </summary>
            <param name="strFullFileName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetContentFromTextFile_Lines(System.String,System.Int32)">
            <summary>
            获取文本文件的前几行文本
            </summary>
            <param name="strFullFileName">文件标识符</param>
            <param name="intLine">前N行</param>
            <returns>读取的文本</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetContentFromTextFileByRange(System.String,com.taishsoft.common.stuTextRange)">
            <summary>
            获取文本文件的前几行文本
            </summary>
            <param name="strFullFileName">文件标识符</param>
            <param name="objTextRange">文本范围</param>
            <returns>读取的文本</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FindFilePathByFileName(System.String,System.String)">
            <summary>
            从一个目录中去查询一个文件，并返回这个文件的所在目录
            </summary>
            <param name="strFileName">需要查找的文件名</param>
            <param name="strFilePath">查找的目录</param>
            <returns>返回所找到的文件目录名，如果找不到就返回空串。</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FindFilePathByFileName(System.String,System.IO.DirectoryInfo)">
            <summary>
            从一个目录中去查询一个文件，并返回这个文件的所在目录
            </summary>
            <param name="strFileName">需要查找的文件名</param>
            <param name="objDirInfo">查找的目录（DirectoryInfo objDirInfo）</param>
            <returns>返回所找到的文件目录名，如果找不到就返回空串。</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FindFileFromFolder(System.String,System.String)">
            <summary>
            从一个目录中去查询一个文件，并返回这个文件的所在目录
            </summary>
            <param name="strSimpleFileName">需要查找的文件名</param>
            <param name="strFolder">查找的目录</param>
            <returns>返回所找到的文件目录名，如果找不到就返回空串。</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FindFileLstFromFolder(System.String,System.String)">
            <summary>
            从一个目录中去查找一个文件名，并返回这个文件名的所有文件目录列表(含目录)
            </summary>
            <param name="strSimpleFileName">需要查找的文件名</param>
            <param name="strFolder">查找的目录</param>
            <returns>返回所找到的文件目录列表，如果找不到就返回空串。</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FindFileFromFolder(System.IO.DirectoryInfo,System.String)">
            <summary>
            从一个目录中去查询一个文件，并返回这个文件的所在目录
            </summary>
            <param name="strSimpleFileName">需要查找的文件名</param>
            <param name="objDirectoryP">查找的目录（DirectoryInfo objDirInfo）</param>
            <returns>返回所找到的文件目录名，如果找不到就返回空串。</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FileBackup(System.String)">
            <summary>
            文件备份
            </summary>
            <param name="fName">原文件</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.FileBackup(System.String,System.String)">
            <summary>
            文件备份
            </summary>
            <param name="fName"></param>
            <param name="strBackupFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.ParentDir(System.String)">
            <summary>
            获取当前目录的父目录
            </summary>
            <param name="strPath">给定的目录</param>
            <returns>返回父目录</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetDirName_S(System.String)">
            <summary>
            获取当前目录的父目录
            </summary>
            <param name="strPath">给定的目录</param>
            <returns>返回父目录</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.ParentDir_S(System.String)">
            <summary>
            获取当前目录的父目录
            </summary>
            <param name="strPath">给定的目录</param>
            <returns>返回父目录</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.AddExeName(System.String@,System.String)">
            <summary>
            添加扩展名
            </summary>
            <param name="strFileName"></param>
            <param name="strExeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetSimpleFName(System.String)">
            <summary>
            从带有目录的文件名中获取简单的文件名
            </summary>
            <param name="strFileName">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetSimpleFName_S(System.String)">
            <summary>
            从带有目录的文件名中获取简单的文件名
            </summary>
            <param name="strFileName">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFloder(System.String)">
            <summary>
            从带有目录的文件名中获取路径名
            </summary>
            <param name="strFullFileName">带有目录的文件名</param>
            <returns>文件的路径名</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetSimplePath(System.String)">
            <summary>
            从多级目录中获取最后一层目录名
            </summary>
            <param name="strFilePath">带有目录的文件名</param>
            <returns>不带目录的简单的文件名</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileExtName(System.String)">
            <summary>
            根据文件名，获取该文件的扩展名
            </summary>
            <param name="strFileName">给定的文件名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetPureFileName(System.String)">
            <summary>
            根据文件名，获取该文件的去除扩展名的纯粹文件名
            </summary>
            <param name="strFileName">给定的文件名</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileList(System.String)">
            <summary>
            根据文件目录获取文件列表，并且以文件对象列表的方式返回
            </summary>
            <param name="strFolder">文件目录</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileListEx(System.String,com.taishsoft.file.FileCollection)">
            <summary>
            根据文件目录获取文件列表，并且以文件对象列表的方式返回, 包括下面的子目录
            </summary>
            <param name="strFolder">文件目录</param>
            <param name="objFileColl">文件集合</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFolderList(System.String)">
            <summary>
            根据文件目录获取下属文件夹列表，并且以文件对象列表的方式返回
            </summary>
            <param name="strFolder">文件目录</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.IsExists(System.String,System.String)">
            <summary>
            差别在所给文件目录下是否存在所给文件名，并且在所给文件目录的所有子目录进行查找
            </summary>
            <param name="strFolder">文件目录</param>
            <param name="strFileName">文件名,不带目录</param>
            <returns>返回文件是否存在，存在返回True, 否则返回False</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFilePath(System.String,System.String)">
            <summary>
            在所给父目录中获取某文件的路径，并且以文件完整路径方式返回
            </summary>
            <param name="strParentFolder">文件目录</param>
            <param name="strFileName">文件名,不带目录</param>
            <returns>如果找到某文件，返回该文件的完整路径，否则返回空串</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetSameSourceFileLst(System.String,System.String)">
            <summary>
            在所给父目录中获取某文件的同源文件列表，并且以文件列表返回
            </summary>
            <param name="strParentFolder">文件目录</param>
            <param name="strFileName">文件名,不带目录</param>
            <returns>如果找到某文件，返回该文件的完整路径，否则返回空串</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileListByDateDesc(System.String)">
            <summary>
            根据文件目录获取文件列表，并且以文件对象列表的方式返回， 按日期降序
            </summary>
            <param name="strFolder">文件目录</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileListByDateDescEx(System.String,com.taishsoft.file.FileCollection)">
            <summary>
            根据文件目录获取文件列表，并且以文件对象列表的方式返回， 按日期降序
            </summary>
            <param name="strFolder">文件目录</param>
            <param name="objFileColl">文件集合</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetFileList(System.String,System.String)">
            <summary>
            根据文件目录获取文件列表，并且以文件对象列表的方式返回
            </summary>
            <param name="strFolder">文件目录</param>
            <param name="strCreateDate8">建立日期（8位）</param>
            <returns>返回文件对象列表</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetUserFileObjByFile(System.String)">
            <summary>
            根据物理文件信息获取文件对象
            </summary>
            <param name="strFullFileName">物理文件名</param>
            <returns>返回文件对象</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.IsUpdated(System.String)">
            <summary>
            文件在建立之后是否修改过？
            </summary>
            <param name="strFullFileName">文件全名</param>
            <returns>返回是否修改？</returns>
        </member>
        <member name="M:com.taishsoft.file.clsFile.GetContentFromTextFile_Lines(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            获取文本文件的前几行文本
            </summary>
            <param name="strFullFileName">文件标识符</param>
            <param name="intLine">前N行</param>
            <returns>读取的文本</returns>
        </member>
        <member name="T:com.taishsoft.file.SortByFileNameAsc">
            <summary>
            按文件名升序排序
            </summary>
        </member>
        <member name="M:com.taishsoft.file.SortByFileNameAsc.Compare(com.taishsoft.file.UserFile,com.taishsoft.file.UserFile)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.file.SortByFileNameDesc">
            <summary>
            按文件名降序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByUploadDateAsc">
            <summary>
            按上传日期升序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByUploadDateDesc">
            <summary>
            按上传日期降序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByResourceTypeNameDesc">
            <summary>
            按上传日期降序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByExtensionDesc">
            <summary>
            按上传日期降序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByFileSizeAsc">
            <summary>
            按上传日期升序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.SortByFileSizeDesc">
            <summary>
            按文件大小降序排序
            </summary>
        </member>
        <member name="T:com.taishsoft.file.FileCollection">
            <summary>
            文件集合管理类
            注：ObservableCollection是个泛型集合类，往其中添加或去除条目时（或者其中的条目实现了INotifyPropertyChanged的话，在属性变动时），
            它会发出变化通知事件（先执行集合类中的同名属性）。这在做数据绑定时会非常方便，因为UI控件可以使用这些通知来知道自动刷新它们的值，
            而不用开发人员编写代码来显式地这么做。
            </summary>
            
        </member>
        <member name="P:com.taishsoft.file.FileCollection.SortExpression">
            <summary>
            排序表达式
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileCollection._currentUpload">
            <summary>
            已上传的累计（多文件）字节数
            </summary>
            <summary>
            已上传字符数占全部字节数的百分比
            </summary>
            <summary>
            当前正在上传的文件序号
            </summary>
        </member>
        <member name="M:com.taishsoft.file.FileCollection.#ctor">
            <summary>
            上传初始化参数，详情如下：
            MaxFileSizeKB:  File size in KBs.
            MaxUploads:  Maximum number of simultaneous uploads
            FileFilter: File filter, for example ony jpeg use: FileFilter=Jpeg (*.jpg) |*.jpg
            CustomParam: Your custom parameter, anything here will be available in the WCF webservice
            DefaultColor: The default color for the control, for example: LightBlue
            </summary>
            <summary>
            最大上传字节数
            </summary>
            <summary>
            构造方法
            </summary>
            <param name="customParams"></param>
            <param name="maxUploads"></param>
        </member>
        <member name="M:com.taishsoft.file.FileCollection.Add(com.taishsoft.file.UserFile)">
            <summary>
            依次加入所选的上传文件信息
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:com.taishsoft.file.FileCollection.AddByDateDesc(com.taishsoft.file.UserFile)">
            <summary>
            依次加入所选的上传文件信息,按日期降序
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:com.taishsoft.file.FileCollection.item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            单个上传文件属性改变时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:com.taishsoft.file.FileConstants.FileStates">
            <summary>
            可能的状态
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileConstants.FileStates.Pending">
            <summary>
            暂停
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileConstants.FileStates.Uploading">
            <summary>
            上传中
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileConstants.FileStates.Finished">
            <summary>
            结束
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileConstants.FileStates.Deleted">
            <summary>
            移除
            </summary>
        </member>
        <member name="F:com.taishsoft.file.FileConstants.FileStates.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="T:com.taishsoft.file.UserFile">
            <summary>
            上传文件信息类
            </summary>
            
        </member>
        <member name="M:com.taishsoft.file.UserFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.file.UserFile.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strFileName"></param>
        </member>
        <member name="F:com.taishsoft.file.UserFile._fileName">
            <summary>
            上传文件名称
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._dirName">
            <summary>
            目录名称
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._fullDirName">
            <summary>
            完全目录名称
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._isDeleted">
            <summary>
            是否取消上传该文件
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._fileStream">
            <summary>
            上传文件的流信息
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._state">
            <summary>
            当前上传文件状态
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._bytesUploaded">
            <summary>
            当前已上传的字节数（这里与FileCollection中的同名属性意义不同，FileCollection中的是已上传的所有文件的字节总数）
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._fileSize">
            <summary>
            当前文件大小
            </summary>
        </member>
        <member name="F:com.taishsoft.file.UserFile._percentage">
            <summary>
            已上传文件的百分比
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.ResourceTypeName">
            <summary>
            资源类型名
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.Extension">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.IsAccess">
            <summary>
            是否处理
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.UploadDate">
            <summary>
            上传日期
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.FileName">
            <summary>
            上传文件名称
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.State">
            <summary>
            当前上传文件的状态，注意这时使用了NotifyPropertyChanged来通知FileRowControl控件中的FileRowControl_PropertyChanged事件
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.IsDeleted">
            <summary>
            当前上传文件是否已被移除，注意这时使用了NotifyPropertyChanged来通知FileCollection类中的item_PropertyChanged事件
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.FileStream">
            <summary>
            上传文件的流信息
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.FileSize">
            <summary>
            当前文件大小
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.BytesUploaded">
            <summary>
            当前已上传的字节数（这里与FileCollection中的同名属性意义不同，FileCollection中的是已上传的所有文件的字节总数）
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.Percentage">
            <summary>
            已上传文件的百分比（这里与FileCollection中的同名属性意义不同，FileCollection中的是已上传字符数占全部字节数的百分比,该字段的修改事件通知会发给page.xmal中的TotalProgress）
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.DirName">
            <summary>
            目录名称
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.FullDirName">
            <summary>
            完全目录名称
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.LastWriteTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:com.taishsoft.file.UserFile.CreationTime">
            <summary>
            建立时间
            </summary>
        </member>
        <member name="T:com.taishsoft.ftp.FTPclient">
            <summary>
            A wrapper class for .NET 2.0 FTP
            </summary>
            <remarks>
            This class does not hold open an FTP connection but
            instead is stateless: for each FTP request it
            connects, performs the request and disconnects.
            </remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.#ctor">
            <summary>
            Blank constructor
            </summary>
            <remarks>Hostname, username and password must be set manually</remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.#ctor(System.String)">
            <summary>
            Constructor just taking the hostname
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <remarks></remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor taking hostname, username and password
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <param name="Username">Leave blank to use 'anonymous' but set password to your email</param>
            <param name="Password"></param>
            <remarks></remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.ListDirectory(System.String)">
            <summary>
            Return a simple directory listing
            </summary>
            <param name="directory">Directory to list, e.g. /pub</param>
            <returns>A list of filenames and directories as a List(of String)</returns>
            <remarks>For a detailed directory listing, use ListDirectoryDetail</remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.ListDirectoryDetail(System.String)">
            <summary>
            Return a detailed directory listing
            </summary>
            <param name="directory">Directory to list, e.g. /pub/etc</param>
            <returns>An FTPDirectory object</returns>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.GetCredentials">
            <summary>
            Get the credentials from username/password
            </summary>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.GetFullPath(System.String)">
            <summary>
            returns a full path using CurrentDirectory for a relative file reference
            </summary>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.AdjustDir(System.String)">
            <summary>
            Amend an FTP path so that it always starts with /
            </summary>
            <param name="path">Path to adjust</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.GetStringResponse(System.Net.FtpWebRequest)">
            <summary>
            Obtains a response stream as a string
            </summary>
            <param name="ftp">current FTP request</param>
            <returns>String containing response</returns>
            <remarks>FTP servers typically return strings with CR and
            not CRLF. Use respons.Replace(vbCR, vbCRLF) to convert
            to an MSDOS string</remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPclient.GetSize(System.Net.FtpWebRequest)">
            <summary>
            Gets the size of an FTP request
            </summary>
            <param name="ftp"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:com.taishsoft.ftp.FTPclient.Hostname">
            <summary>
            Hostname
            </summary>
            <value></value>
            <remarks>Hostname can be in either the full URL format
            ftp://ftp.myhost.com or just ftp.myhost.com
            </remarks>
        </member>
        <member name="P:com.taishsoft.ftp.FTPclient.Username">
            <summary>
            Username property
            </summary>
            <value></value>
            <remarks>Can be left blank, in which case 'anonymous' is returned</remarks>
        </member>
        <member name="F:com.taishsoft.ftp.FTPclient._currentDirectory">
            <summary>
            The CurrentDirectory value
            </summary>
            <remarks>Defaults to the root '/'</remarks>
        </member>
        <member name="T:com.taishsoft.ftp.FTPfileInfo">
            <summary>
            Represents a file or directory entry from an FTP listing
            </summary>
            <remarks>
            This class is used to parse the results from a detailed
            directory list from FTP. It supports most formats of
            </remarks>
        </member>
        <member name="T:com.taishsoft.ftp.FTPfileInfo.DirectoryEntryTypes">
            <summary>
            Identifies entry as either File or Directory
            </summary>
        </member>
        <member name="M:com.taishsoft.ftp.FTPfileInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor taking a directory listing line and path
            </summary>
            <param name="line">The line returned from the detailed directory list</param>
            <param name="path">Path of the directory</param>
            <remarks></remarks>
        </member>
        <member name="F:com.taishsoft.ftp.FTPfileInfo._ParseFormats">
            <summary>
            List of REGEX formats for different FTP server listing formats
            </summary>
            <remarks>
            The first three are various UNIX/LINUX formats, fourth is for MS FTP
            in detailed mode and the last for MS FTP in 'DOS' mode.
            I wish VB.NET had support for Const arrays like C# but there you go
            </remarks>
        </member>
        <member name="T:com.taishsoft.ftp.FTPdirectory">
            <summary>
            Stores a list of files and directories from an FTP result
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPdirectory.#ctor(System.String,System.String)">
            <summary>
            Constructor: create list from a (detailed) directory string
            </summary>
            <param name="dir">directory listing string</param>
            <param name="path"></param>
            <remarks></remarks>
        </member>
        <member name="M:com.taishsoft.ftp.FTPdirectory.GetFiles(System.String)">
            <summary>
            Filter out only files from directory listing
            </summary>
            <param name="ext">optional file extension filter</param>
            <returns>FTPdirectory listing</returns>
        </member>
        <member name="M:com.taishsoft.ftp.FTPdirectory.GetDirectories">
            <summary>
            Returns a list of only subdirectories
            </summary>
            <returns>FTPDirectory list</returns>
            <remarks></remarks>
        </member>
        <member name="T:com.taishsoft.json.clsJSON">
            <summary>
            专门用于处理C#的类对象与JSON之间的转换问题
            </summary>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetJsonFromObj``1(``0)">
            <summary>
            把一般对象转换成JSON串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="t">对象</param>
            <returns>生成的JSON串</returns>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetJsonFromObjLst``1(System.Collections.Generic.List{``0})">
            <summary>
            把一般对象转换成JSON串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="arrObjLst">对象列表</param>
            <returns>生成的JSON串</returns>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetJsonFromObj2``1(``0)">
            <summary>
            把一般对象转换成JSON串--2
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="t">对象</param>
            <returns>生成的JSON串</returns>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetObjFromJson``1(System.String)">
            <summary>
            根据JSON串生成相应的对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="strJson">JSON串</param>
            <returns>生成的相应的对象</returns>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetObjLstFromJson``1(System.String)">
            <summary>
            根据JSON串生成相应的对象列表
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="strJson">JSON串</param>
            <returns>生成的相应的对象列表</returns>
        </member>
        <member name="M:com.taishsoft.json.clsJSON.GetTestCode">
            <summary>
            获取测试代码
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.json.User">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.json.User.#ctor(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="password"></param>
        </member>
        <member name="P:com.taishsoft.json.User.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.json.User.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.json.User.Password">
            <summary>
            
            </summary>
        </member>
        <member name="T:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml">
            <summary>
            用于语法分析
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.CombineRelaWord">
            <summary>
            合并不应被分开的词
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsStartTag(System.String)">
            <summary>
            判断：是否是开始标签？
            </summary>
            <param name="strTag">所给标签</param>
            <returns>是否是开始标签？</returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsStartTag4Element(System.String)">
            <summary>
            判断：是否是开始标签？
            </summary>
            <param name="strTag">所给标签</param>
            <returns>是否是开始标签？</returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsEndTag4Element(System.String)">
            <summary>
            判断：是否是开始标签？
            </summary>
            <param name="strTag">所给标签</param>
            <returns>是否是开始标签？</returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsEndTag(System.String)">
            <summary>
            判断：是否是结束标签？
            </summary>
            <param name="strTag">所给标签</param>
            <returns>是否是结束标签？</returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsMatch(System.String,System.String)">
            <summary>
            判断两个元素标签是否匹配
            </summary>
            <param name="strStartTag"></param>
            <param name="strEndTag"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.IsMatch4Element(com.taishsoft.lexicalAnalysis.clsWord_LA,com.taishsoft.lexicalAnalysis.clsWord_LA)">
            <summary>
            判断元素的标签以及名称是否匹配
            </summary>
            <param name="objStartTag"></param>
            <param name="objEndTag"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysis4Xml.GeneAndroidXmlScript(System.Collections.Generic.List{com.taishsoft.util.clsNodeObj})">
            <summary>
            生成安卓的XML脚本
            </summary>
            <param name="arrNodeObj"></param>
            <returns></returns>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.Code_In">
            <summary>
            输入需要分析的代码
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.CodeLines">
            <summary>
            代码行
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnSearch_Location(com.taishsoft.lexicalAnalysis.clsWord_LA,System.String[])">
            <summary>
            查找字符编码在相关表中的位置
            </summary>
            <param name="objWord">词</param>
            <param name="sstrWord"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnSearch_Location(com.taishsoft.lexicalAnalysis.clsWord_LA,System.Collections.Generic.List{System.String})">
            <summary>
            查找字符编码在相关表中的位置
            </summary>
            <param name="objWord">词</param>
            <param name="sstrWord"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnInsertId(com.taishsoft.lexicalAnalysis.clsWord_LA,System.String[]@)">
            <summary>
            插入新的标识符
            </summary>
            <param name="objWord"></param>
            <param name="sstrIDentifier">标识符表</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnInsertId(com.taishsoft.lexicalAnalysis.clsWord_LA,System.Collections.Generic.List{System.String})">
            <summary>
            插入新的标识符
            </summary>
            <param name="objWord"></param>
            <param name="sstrIDentifier">标识符表</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnPretreatment">
            <summary>
            预处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.IsOperator(System.String)">
            <summary>
            是否是操作符
            </summary>
            <param name="strWord"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.IsCommunity_character(System.String)">
            <summary>
            是否是分隔符
            </summary>
            <param name="strWord">一个词</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.analyze(System.String,System.String@)">
            <summary>
            词法分析
            </summary>
            <param name="strCode_In">输入的代码，分析前的代码</param>
            <param name="strCode_Out">输出的代码，已经分析后生成的代码</param>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.PrevWord">
            <summary>
            前一个单词，排除无效的单词
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetPrevWord(System.Collections.Generic.List{com.taishsoft.lexicalAnalysis.clsWord_LA},System.Int32)">
            <summary>
            前一个单词，排除无效的单词
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.CurrWord">
            <summary>
            前一个单词，排除无效的单词
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetCurrWord(System.Collections.Generic.List{com.taishsoft.lexicalAnalysis.clsWord_LA},System.Int32)">
            <summary>
            前一个单词，排除无效的单词
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.NextWord">
            <summary>
            下一个单词，排除无效的单词
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetNextWord(System.Collections.Generic.List{com.taishsoft.lexicalAnalysis.clsWord_LA},System.Int32)">
            <summary>
            下一个单词，排除无效的单词
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnAnalyzeV3">
            <summary>
            词法分析
            </summary>
            <param name="strCode_In">输入的代码，分析前的代码</param>
            <param name="strCode_Out">输出的代码，已经分析后生成的代码</param>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.InsertWordToReleTab(com.taishsoft.lexicalAnalysis.clsWord_LA)">
            <summary>
            把单词根据类型插入到相关表中
            </summary>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnJudgeType(com.taishsoft.lexicalAnalysis.clsWord_LA)">
            <summary>
            类型判断liexingpanduan
            </summary>
            <param name="strWord">分解后一个词</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnJudgeTypeIgnoreCase(com.taishsoft.lexicalAnalysis.clsWord_LA)">
            <summary>
            类型判断liexingpanduan
            </summary>
            <param name="strWord">分解后一个词</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetCurrChar">
            <summary>
            获取当前字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetNextChar">
            <summary>
            获取下一个字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetPrevChar">
            <summary>
            获取前一字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnAccessLetterAt">
            <summary>
            处理字符@
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.fnAccessStringConst4SingleQuote">
            <summary>
            针对单引号的字符常量
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.lexicalAnalysis.clsLexicalAnalysisBase.GetSubObjLst(System.Collections.Generic.List{com.taishsoft.lexicalAnalysis.clsWord_LA},System.Int32,System.Int32)">
            <summary>
            获取单词列表的子列表
            </summary>
            <param name="parrObjLst">源对象列表</param>
            <param name="intStartIndex">开始序号</param>
            <param name="intEndIndex">结束序号</param>
            <returns>单词列表的子列表</returns>
        </member>
        <member name="T:com.taishsoft.lexicalAnalysis.clsWord_LA">
            <summary>
            词法分析-词表
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsWord_LA.Word">
            <summary>
            词
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsWord_LA.WordType">
            <summary>
            词类型
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsWord_LA.Location">
            <summary>
            词类型位置
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsWord_LA.InEffect">
            <summary>
            单词是否有效
            </summary>
        </member>
        <member name="P:com.taishsoft.lexicalAnalysis.clsWord_LA.Index">
            <summary>
            当前词的序号
            </summary>
        </member>
        <!-- 对于成员“P:com.taishsoft.lexicalAnalysis.clsWord_LA.Tag”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:com.taishsoft.lexicalAnalysis.clsWord_LA.TagName”忽略有格式错误的 XML 注释 -->
        <member name="T:com.taishsoft.lexicalAnalysis.tzEnvirmentStatus">
            <summary>
            环境状态
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzEnvirmentStatus.CodeConst">
            <summary>
            代码常量
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzEnvirmentStatus.CodeScript">
            <summary>
            代码脚本
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.ReserveWord">
            <summary>
            保留字
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.SystemType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.SystemVariable">
            <summary>
            系统变量
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.SystemObjectProperty">
            <summary>
            系统对象属性
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.NameSpaces">
            <summary>
            系统域名
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.ContextKeyword">
            <summary>
            上下文关键字
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Operators">
            <summary>
            操作符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Delimiter">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.ElementDelimiter">
            <summary>
            Xml元素分隔符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.UserClass">
            <summary>
            用户类
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Property">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.UDSpaceName">
            <summary>
            用户定义域名
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Variable">
            <summary>
            变量
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Function">
            <summary>
            函数
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.IDentifier">
            <summary>
            标识符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.CodeRegion">
            <summary>
            代码区域
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.Const">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.CodeConst">
            <summary>
            代码常量,可以直接输出到
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzWordType.UnKnown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.IsEmptyReturn">
            <summary>
            空格、回车等
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.Slash">
            <summary>
            "/"
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.DoubleQuotes">
            <summary>
            双引号
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.SingleQuotes">
            <summary>
            单引号
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.LetterDollar">
            <summary>
            字母$
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.LetterAt">
            <summary>
            字母@
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.HashSign">
            <summary>
            字母#
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.Delimiter">
            <summary>
            分隔符、界符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.XmlTags_Start">
            <summary>
            Xml标签开始符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.XmlTags_End">
            <summary>
            Xml标签结束符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.Operators">
            <summary>
            运算符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.SpecialOperators">
            <summary>
            特殊运算符
            </summary>
        </member>
        <member name="F:com.taishsoft.lexicalAnalysis.tzFirstCharType.Null">
            <summary>
            其他未处理字符
            </summary>
        </member>
        <member name="T:com.taishsoft.math.clsMath_Edu">
            <summary>
            有关教育方面的数学计算
            </summary>
        </member>
        <member name="M:com.taishsoft.math.clsMath_Edu.StandardDeviation(System.Double[],System.Int32)">
            <summary>
            求标准差（Standard Deviation）
            </summary>
            <param name="arrNums">数组</param>
            <param name="intCount">数据个数</param>
            <returns>方差</returns>
        </member>
        <member name="T:com.taishsoft.net.clsFTP">
            <summary>
            专门处理FTP的类
            </summary>
        </member>
        <member name="T:com.taishsoft.net.clsFTPClient">
            <summary>
            面向客户端的FTP类
            </summary>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DownloadBak(System.String,System.Uri)">
            <summary>
            下载函数
            </summary>
            <param name="destinationFile"></param>
            <param name="downloadUri"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.Download(System.String,System.String,System.String,System.String)">
            <summary>
            Ftp下载函数
            </summary>
            <param name="strFilePath">本地的目录路径</param>
            <param name="destinationFile">本地的目标文件名, 不能带有目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="strFtpFileName">FTP服务器上的文件名</param>
            <returns>FTP下载状态</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DownloadDir(System.String,System.String,System.String)">
            <summary>
            下载整个子目录，包括下属子目录和文件
            </summary>
            <param name="strFilePath">本地的目录路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="strFtpFilePath">FTP服务器上的目录路径</param>
            <returns>下载状态</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.Download(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            下载函数，静态函数
            </summary>
            <param name="strFilePath">本地的目录路径</param>
            <param name="strFtpFileName">FTP服务器上的文件名</param>
            <param name="destinationFile">本地的目标文件名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.Download2(System.String,System.String,System.String,System.String)">
            <summary>
            下载函数，
            </summary>
            <param name="strFilePath">本地的目录路径</param>
            <param name="strFtpFileName">FTP服务器上的文件名</param>
            <param name="destinationFile">本地的目标文件名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UploadFile(System.String,System.String,System.String)">
            <summary>
            上传文件，同名传到FTP上
            </summary>
            <param name="strSouFullFileName">本地的源文件名，带完全目录</param>
            <param name="strFtpFolderName">FTP服务器上目录路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>FTP状态</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.Rename(System.String,System.String,System.String,System.String)">
            <summary>
            上传文件，同名传到FTP上
            </summary>
            <param name="strSouFullFileName">本地的源文件名，带完全目录</param>
            <param name="strFtpFolderName">FTP服务器上目录路径</param>
            <param name="newFilename">FTP上新文件名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>FTP状态</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UploadFile(System.String,System.String,System.String,System.String)">
            <summary>
            上传文件，在服务器上可以改名
            </summary>
            <param name="strSouFullFileName">本地的源文件名，带完全目录</param>
            <param name="strFtpFolderName">FTP服务器上目录路径</param>
            <param name="strFtpFileName">FTP服务器上目标文件名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>FTP状态</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UpLoadDir(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            上传整个目录，静态函数
            </summary>
            <param name="strFilesDir">本地的源目录名</param>
            <param name="strFtpDir">FTP服务器上目标路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
            <returns>上传是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UpLoadDir(System.String,System.String,System.String)">
            <summary>
            上传整个目录
            </summary>
            <param name="strFilesDir">本地的源目录名</param>
            <param name="strFtpDir">FTP服务器上目标路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>上传是否成功？</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.CreateDirectory(System.String,System.String,System.String,System.String)">
            <summary>
            创建目录，静态函数
            </summary>
            <param name="FolderName">目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.MakeDirectory(System.String,System.String)">
            <summary>
            创建目录
            </summary>
            <param name="FolderName">目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UploadSmall(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            上传文件，另一种方式。该文件可能是小文件
            </summary>
            <param name="strSouFullFileName">本地的源文件名，带完全目录</param>
            <param name="strFtpFolderName">FTP服务器上目标路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.GetFileList(System.String,System.String,System.String,System.String)">
            <summary>
            获取FTP服务器目录列表，静态函数
            </summary>
            <param name="strFolderName">FTP服务器上路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
            <returns>返回的目录列表，用字符串数组表示</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.GetFileListDetails(System.String,System.String)">
            <summary>
            获取目录文件详细列表（包括文件和目录）
            </summary>
            <param name="strFolderName">FTP服务器上路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>返回的目录列表，用字符串数组表示</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.GetFileList(System.String,System.String)">
            <summary>
            获取FTP服务器目录列表
            </summary>
            <param name="strFolderName">FTP服务器上路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>返回的目录列表，用字符串数组表示</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.UploadFtp(System.Web.HttpPostedFile,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            上传文件，同名传到FTP上
            </summary>
            <param name="sHttpPostedFile"></param>
            <param name="filename">FTP服务器上目标文件名</param>
            <param name="FolderName">FTP服务器上目标路径</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">用户名</param>
            <param name="ftpPwd">口令</param>        
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.CheckFileOrPath(System.String,System.String,System.String,System.String)">
            <summary>
            检查目录或者文件名是否存在，静态函数
            </summary>
            <param name="strFolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
            <returns>是否存在？</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.CheckFileOrPath(System.String,System.String,System.String)">
            <summary>
            检查目录或者文件名是否存在
            </summary>
            <param name="strFolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <returns>是否存在？</returns>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DeleteFtpFile(System.String[],System.String,System.String,System.String,System.String)">
            <summary>
            删除FTP上的多个文件，静态函数
            </summary>
            <param name="strFileNameLst">需要删除的文件名列表</param>
            <param name="FolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
            <param name="ftpUserName">FTP 用户名</param>
            <param name="ftpPwd">FTP 口令</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DeleteFtpFile(System.String[],System.String,System.String)">
            <summary>
            删除FTP上的多个文件
            </summary>
            <param name="strFileNameLst">需要删除的文件名列表</param>
            <param name="FolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DeleteFtpFile(System.String,System.String,System.String)">
            <summary>
            删除FTP上的单个文件
            </summary>
            <param name="strFileName">需要删除的文件名</param>
            <param name="FolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>
        </member>
        <member name="M:com.taishsoft.net.clsFTPClient.DeleteFtpFolder(System.String,System.String)">
            <summary>
            删除FTP上的单个目录
            </summary>
            <param name="strFolderName">文件名或者目录名</param>
            <param name="ftpServerIP">FTP服务器地址</param>    
        </member>
        <member name="P:com.taishsoft.net.clsFTPClient.UserName">
            <summary>
            ftp用户名
            </summary>
        </member>
        <member name="P:com.taishsoft.net.clsFTPClient.Password">
            <summary>
            ftp口令
            </summary>
        </member>
        <member name="P:com.taishsoft.net.clsFTPClient.IsAnonymousUser">
            <summary>
            是否匿名？
            </summary>
        </member>
        <member name="T:com.taishsoft.table.clsTableDataBL">
            <summary>
            表数据(TableData)
            数据源类型：SQL表
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataBL.arrTableDataObjLst">
            <summary>
            静态的对象列表，用于缓存，针对记录较少，作为参数表可以使用
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataBL.RowNum">
            <summary>
            表行数
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataBL.ColNum">
            <summary>
            表列数
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataBL.MyOrderWay">
            <summary>
            排序方式，以行为主序，还是以列为主序
            </summary>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.#ctor">
            <summary>
            类的构造函数
            </summary>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.AddTableDataObj(System.Int32,System.Int32,System.String)">
            <summary>
            添加新的表单元格对象到对象列表中, 提供单元格的行列序号
            </summary>
            <param name="intRow">行</param>
            <param name="intCol">列</param>
            <param name="strCellContent">单元格数据</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.AddTableDataObjEx(System.Int32,System.Int32,System.String)">
            <summary>
            添加新的表单元格对象到对象列表中, 提供单元格的行列序号，如果表数据列表存在相同行列单元格数据，就把数据合并
            </summary>
            <param name="intRow">行</param>
            <param name="intCol">列</param>
            <param name="strCellContent">单元格数据</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.AddTableDataObj(System.Int32,System.String)">
            <summary>
            添加新的表单元格对象到对象列表中, 提供单元格的序号
            </summary>
            <param name="intIndex">单元格的序号</param>
            <param name="strCellContent">单元格数据</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.AddTableDataObjEx(System.Int32,System.String)">
            <summary>
            添加新的表单元格对象到对象列表中, 提供单元格的序号，如果表数据列表存在相同行列单元格数据，就把数据合并
            </summary>
            <param name="intIndex">单元格的序号</param>
            <param name="strCellContent">单元格数据</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.CopyFrom(com.taishsoft.table.clsTableDataEN)">
            <summary>
            添加新的表单元格对象到对象列表中
            </summary>
            <param name="objTableDataEN_S">行</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetTableDataObj(System.Int32,System.Int32)">
            <summary>
            从表单元格对象列表中，找到某行、列的单元格对象
            </summary>
            <param name="intRow">行</param>
            <param name="intCol">列</param>
            <returns>表单元格对象</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.CheckSameAsUp">
            <summary>
            检查同上
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.CopyTo(com.taishsoft.table.clsTableDataBL)">
            <summary>
            
            </summary>
            <param name="objTableData_T"></param>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetPosition_RowCol(System.Int32)">
            <summary>
            获取某序号(index)点的当前行列位置
            </summary>
            <param name="intIndex">点序号</param>
            <returns>序号点的行列位置</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetIndexByPosition_RowCol(com.taishsoft.util.clsPosition)">
            <summary>
            根据单元格的行列位置获取其序号(index)
            </summary>
            <param name="objPosition">序号点的行列位置</param>
            <returns>序号(index)</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetIndexByPosition_RowCol(System.Int32,System.Int32)">
            <summary>
            根据单元格的行列位置获取其序号(index)
            </summary>
            <param name="iRow">行号</param>
            <param name="iCol">列号</param>
            <returns>序号(index)</returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetIsHaveData4Col">
            <summary>
            获取有数据的列，用数组形式返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataBL.GetIsHaveData4Row">
            <summary>
            获取有数据的行，用数组形式返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.table.clsTableDataEN">
            <summary>
            表数据(TableData)
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.CurrTabName_S">
            <summary>
            当前表名，与该类相关的表名
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.CurrTabKeyFldName_S">
            <summary>
            当前表中的关键字名称，与该类相关的表中关键字名
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintAttributeCount">
            <summary>
            属性个数
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.AttributeName">
            <summary>
            属性名称数组
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mlngmId">
            <summary>
            流水号
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintRowNo">
            <summary>
            行号
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintColNo">
            <summary>
            列号
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mstrMyOrderWay">
            <summary>
            主序方式
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintCellIndex">
            <summary>
            单元格序号
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mstrCellContent">
            <summary>
            单元格内容
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintColSpan">
            <summary>
            列跨数
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintRowSpan">
            <summary>
            行跨数
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mbolIsSameAsUp">
            <summary>
            是否同上
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mbolIsSameAsLeft">
            <summary>
            是否同左
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintDownSameNum">
            <summary>
            向下相同数
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mintRightSameNum">
            <summary>
            向右相同数
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.mstrMemo">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_mId">
            <summary>
            常量："mId"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_RowNo">
            <summary>
            常量："RowNo"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_ColNo">
            <summary>
            常量："ColNo"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_MyOrderWay">
            <summary>
            常量："MyOrderWay"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_CellIndex">
            <summary>
            常量："CellIndex"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_CellContent">
            <summary>
            常量："CellContent"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_ColSpan">
            <summary>
            常量："ColSpan"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_RowSpan">
            <summary>
            常量："RowSpan"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_IsSameAsUp">
            <summary>
            常量："IsSameAsUp"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_IsSameAsLeft">
            <summary>
            常量："IsSameAsLeft"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_DownSameNum">
            <summary>
            常量："DownSameNum"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_RightSameNum">
            <summary>
            常量："RightSameNum"
            </summary>
        </member>
        <member name="F:com.taishsoft.table.clsTableDataEN.con_Memo">
            <summary>
            常量："Memo"
            </summary>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataEN.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataEN.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="lngmId"></param>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.AttributeCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.Item(System.String)">
            <summary>
            
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="intIndex"></param>
            <returns></returns>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.mId">
            <summary>
            流水号(说明:;字段类型:bigint;字段长度:8;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.RowNo">
            <summary>
            行号(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.ColNo">
            <summary>
            列号(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.MyOrderWay">
            <summary>
            主序方式(说明:;字段类型:varchar;字段长度:20;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.CellIndex">
            <summary>
            单元格序号(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.CellContent">
            <summary>
            单元格内容(说明:;字段类型:varchar;字段长度:4000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.ColSpan">
            <summary>
            列跨数(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.RowSpan">
            <summary>
            行跨数(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.IsSameAsUp">
            <summary>
            是否同上(说明:;字段类型:bit;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.IsSameAsLeft">
            <summary>
            是否同左(说明:;字段类型:bit;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.DownSameNum">
            <summary>
            向下相同数(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.RightSameNum">
            <summary>
            向右相同数(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.Memo">
            <summary>
            备注(说明:;字段类型:varchar;字段长度:1000;是否可空:True)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.IntTag">
            <summary>
            整型Tag(说明:;字段类型:int;字段长度:4;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.StrTag">
            <summary>
            字符型标签(说明:;字段类型:string;字段长度:1000;是否可空:False)
            </summary>
        </member>
        <member name="P:com.taishsoft.table.clsTableDataEN.IsCheckProperty">
            <summary>
            是否检查属性(说明:;字段类型:bool;字段长度:1;是否可空:False)
            </summary>
        </member>
        <member name="M:com.taishsoft.table.clsTableDataEN.GetDispData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.clsListItem">
            <summary>
            下拉框对象类
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsListItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsListItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <param name="strText"></param>
        </member>
        <member name="F:com.taishsoft.util.clsListItem.con_Value">
            <summary>
            常量:"Value"
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsListItem.con_Text">
            <summary>
            常量:"Text"
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsListItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsListItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsListItem.GetTrueOrFalseLst">
            <summary>
            获取“正确”、“错误”的选项列表。（"T", "正确"||"F", "错误"）
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.clsListItem.GetTrueOrFalseLst_EN">
            <summary>
            获取“True”、“False”的选项列表。（"T", "True"||"F", "False"）
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.clsListItem.GetYesOrNoLst">
            <summary>
            获取“是”、“否”的选项列表。（"Y", "是"||"N", "否"）
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.clsRange">
            <summary>
            表示范围的类
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsRange.StartPos">
            <summary>
            开始位置
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsRange.Index">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsRange.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsRanking">
            <summary>
            用于排名的类
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsRanking.CalcRanking(com.taishsoft.util.IRankObj[])">
            <summary>
            计算排名
            </summary>
            <param name="arrObjExLst">需要排名的数组</param>
        </member>
        <member name="T:com.taishsoft.util.IBindTreeView">
            <summary>
            用于父窗口中的树（TreeView）。
            </summary>
        </member>
        <member name="T:com.taishsoft.util.IFindPKaoEduCls">
            <summary>
            查找考试班的接口。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IFindPKaoEduCls.FindPKaoEduCls(System.Int32)">
            <summary>
            查找考试班
            </summary>
            <param name="intNum">时间片序号</param>
        </member>
        <member name="M:com.taishsoft.util.IFindPKaoEduCls.CancelPKao4EduCls(System.Int32)">
            <summary>
            取消教师从考试班的排考
            </summary>
            <param name="intNum">时间片序号</param>
        </member>
        <member name="M:com.taishsoft.util.IFindPKaoEduCls.CancelXunkao(System.Int32,System.Int16)">
            <summary>
            取消巡考
            </summary>
            <param name="intNum">时间片序号</param>
            <param name="shtWeekSeq">考试周</param>
        </member>
        <member name="M:com.taishsoft.util.IFindPKaoEduCls.ArrangeXunkao(System.Int32)">
            <summary>
            安排巡考
            </summary>
            <param name="intNum">时间片序号</param>
        </member>
        <member name="T:com.taishsoft.util.IPKaoSetValueToDS">
            <summary>
            ISetValueToDS 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPKaoSetValueToDS.SetDSValue(System.Int32,System.Int32,System.String,System.String,System.String,System.Int16,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strMenuName"></param>
            <param name="Value"></param>
            <param name="strReservedMemo">预留备注</param>
            <param name="strWeekStatusId">周状态Id</param>
            <param name="strCustomerWeek">用户自定义周</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <param name="intPKaoWeeksNumPerSchoolTerm">学期排课周数</param>
            <param name="intWeeksNumPerSchoolTerm">学期周数</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IPKaoGetWeekValueFromDS">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPKaoGetWeekValueFromDS.GetDGValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPKaoGetWeekValueFromDS.GetDGValue_IsShowContextMenu(System.Int32,System.Int32,System.String,System.Int16,System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strid_PKaoEduClass">排考教学班流水号</param>
            <param name="shtWeekSeq">考试周</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <param name="strSchoolYear">学年</param>
            <param name="strSchoolTerm">学期</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPKaoGetWeekValueFromDS.GetDGValue_IsCanSelected(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strValue"></param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IPk2GetWeekValueFromDS">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPk2GetWeekValueFromDS.GetDGValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPk2GetWeekValueFromDS.GetDGValue_IsShowContextMenu(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strid_EduClassTask"></param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <param name="strSchoolYear">学年</param>
            <param name="strSchoolTerm">学期</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPk2GetWeekValueFromDS.GetDGValue_IsCanSelected(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strValue"></param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IPk2SetValueToDS">
            <summary>
            ISetValueToDS 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPk2SetValueToDS.SetDSValue(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="strMenuName"></param>
            <param name="Value"></param>
            <param name="strReservedMemo">预留备注</param>
            <param name="strWeekStatusId">周状态Id</param>
            <param name="strCustomerWeek">用户自定义周</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <param name="intPk2WeeksNumPerSchoolTerm">学期排课周数</param>
            <param name="intWeeksNumPerSchoolTerm">学期周数</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IPk2GetMemoInfo">
            <summary>
            GetMemoInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPk2GetMemoInfo.GetMemoInfo(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取备注的值
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="Value">获取的值</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPk2GetMemoInfo.GetMemoInfos(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取备注的值
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="Value">获取的值</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IPKaoGetMemoInfo">
            <summary>
            GetMemoInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IPKaoGetMemoInfo.GetMemoInfo(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取备注的值
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="Value">获取的值</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IPKaoGetMemoInfo.GetMemoInfos(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取备注的值
            </summary>
            <param name="intRow">周序号</param>
            <param name="intCol">每日的节次</param>
            <param name="Value">获取的值</param>
            <param name="intTimesliceNumPerDay">每日排课的时间片</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IRankObj">
            <summary>
            用于排名的对象
            </summary>
        </member>
        <member name="P:com.taishsoft.util.IRankObj.Score">
            <summary>
            成绩
            </summary>
        </member>
        <member name="P:com.taishsoft.util.IRankObj.Percentile">
            <summary>
            百分比
            </summary>
        </member>
        <member name="P:com.taishsoft.util.IRankObj.Ranking">
            <summary>
            排名
            </summary>
        </member>
        <member name="T:com.taishsoft.util.ISetStudentInfo">
            <summary>
            ISetTeacherInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetStudentInfo.SetStudentInfo(System.String)">
            <summary>
            
            </summary>
            <param name="strId_Stu">学生流水号</param>
        </member>
        <member name="T:com.taishsoft.util.OrderWay">
            <summary>
            
            </summary>
        </member>
        <member name="F:com.taishsoft.util.OrderWay.RowMainOrder">
            <summary>
            以行为主序
            </summary>
        </member>
        <member name="F:com.taishsoft.util.OrderWay.ColMainOrder">
            <summary>
            以列为主序
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsPosition">
            <summary>
            行列位置，包括行号、列号
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsPosition.iRow">
            <summary>
            行号
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsPosition.iCol">
            <summary>
            列号
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsBiDimDistribute">
            <summary>
            clsBiDimDistribute 的摘要说明。
            主要用于二维控件的分布，例如一组控件，一行3列显示
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.IsCalcRowHeightByWeights">
            <summary>
            是否通过权限来计算行高
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.IsCalcColWidthByWeights">
            <summary>
            是否通过权限来计算列宽
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.TotalTableHeight">
            <summary>
            总的表高
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.TotalTableWidth">
            <summary>
            总的表宽
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.HeightWeights">
            <summary>
            行高权重
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.WidthWeights">
            <summary>
            列宽权重
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.MinHeights">
            <summary>
            最小行高
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.MinWidths">
            <summary>
            最小列宽
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.UnitRowHeight">
            <summary>
            每单位行高
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.UnitColWidth">
            <summary>
            每单位列宽
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.CalcRowHeight">
            <summary>
            计算后的行高
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.CalcColWidth">
            <summary>
            每单位列宽
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.MyOrderWay">
            <summary>
            排序方式，以行为主序，还是以列为主序
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.StartX">
            <summary>
            起始位置X，用户提供
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.StartY">
            <summary>
            起始位置Y，用户提供
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.ColWidth">
            <summary>
            列宽，用户提供
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.ColNum">
            <summary>
            列数，用户提供
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.RowNum">
            <summary>
            行数，通过计算得到
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsBiDimDistribute.Index">
            <summary>
            当前序号，序号从0开始
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.GetPosition(System.Int32)">
            <summary>
            获取某序号(index)点的当前位置
            </summary>
            <param name="intIndex">点序号</param>
            <returns>序号点的位置</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.GetPosition_RowCol(System.Int32)">
            <summary>
            获取某序号(index)点的当前行列位置
            </summary>
            <param name="intIndex">点序号</param>
            <returns>序号点的行列位置</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.CalcRowHeightSum4First_n_Terms(System.Int32)">
            <summary>
            计算前N项行高和
            </summary>
            <param name="intN">前N项</param>
            <returns>行高和</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.CalcColWidthSum4First_n_Terms(System.Int32)">
            <summary>
            计算前N项列宽和
            </summary>
            <param name="intN">前N项</param>
            <returns>行高和</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.GetCtlHeigh(System.Int32)">
            <summary>
            获取用户控件的高度，根据内部的子控件数
            </summary>
            <param name="intCtlNum">子控件数</param>
            <returns>用户控件的高度</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.GetCtlWidth">
            <summary>
            获取用户控件的宽度，根据内部的控件列数
            </summary>
            <returns>用户控件的宽度</returns>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.CalcRowHeightByWeights">
            <summary>
            通过权重来计算行高和列宽
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsBiDimDistribute.CalcColWidthByWeights">
            <summary>
            通过权重来计算行高和列宽
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsCboObject">
            <summary>
            下拉框对象类
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsCboObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsCboObject.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <param name="strText"></param>
        </member>
        <member name="P:com.taishsoft.util.clsCboObject.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsCboObject.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsCboObject.con_Text">
            <summary>
            常量:"Text"
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsCboObject.con_Value">
            <summary>
            常量:"Value"
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsExportField">
            <summary>
            Bind_TrueOrFalse 的摘要说明。
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsExportField.strFieldEnglishName">
            <summary>
            类的英文名
            </summary>
        </member>
        <member name="F:com.taishsoft.util.clsExportField.strFieldChineseName">
            <summary>
            字段中文名
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsExportField.#ctor">
            <summary>
            导出字段的构造函数
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsExportField.FieldEnglishName">
            <summary>
            类的英文名
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsExportField.FieldChineseName">
            <summary>
            字段中文名
            </summary>
        </member>
        <member name="T:com.taishsoft.util.clsListViewSorter">
            <summary>
            mySorter 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsListViewSorter.#ctor">
            <summary>
            ListView排序er
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsListViewSorter.SortColumn">
            <summary>
            指定进行排序的列
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsListViewSorter.SortOrder">
            <summary>
            指定按升序或降序进行排序
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsListViewSorter.Compare(System.Object,System.Object)">
            <summary>
            比较方法
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.clsNodeObj">
            <summary>
            clsNodeObj 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsNodeObj.#ctor">
            <summary>
            类的构造函数
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsNodeObj.Id">
            <summary>
            Node对象的Id
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsNodeObj.Name">
            <summary>
            Node对象的名称
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsNodeObj.AddNodeObj(com.taishsoft.util.clsNodeObj)">
            <summary>
            在子对象列表中添加新的对象
            </summary>
            <param name="myNodeObj"></param>
        </member>
        <member name="M:com.taishsoft.util.clsNodeObj.IsExistNodeObj(System.String)">
            <summary>
            根据Id判断该对象在子列表中是否存在？
            </summary>
            <param name="strId">所给的Node对象Id</param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.clsNodeObj.AddAttribute(System.String,System.String)">
            <summary>
            向属性哈希表中添加属性
            </summary>
            <param name="strKeyName"></param>
            <param name="strValue"></param>
        </member>
        <member name="P:com.taishsoft.util.clsNodeObj.NodeType">
            <summary>
            结点类型
            </summary>
        </member>
        <member name="P:com.taishsoft.util.clsNodeObj.Item(System.String)">
            <summary>
            操作类的自身信息
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.clsQueryModel">
            <summary>
            clsNodeObj 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsQueryModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:com.taishsoft.util.clsQueryModel.AddAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strKeyName"></param>
            <param name="strValue"></param>
        </member>
        <member name="P:com.taishsoft.util.clsQueryModel.Item(System.String)">
            <summary>
            
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.clsQueryModel.setProperty(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="strAttributeName"></param>
            <param name="objValue"></param>
        </member>
        <member name="M:com.taishsoft.util.clsQueryModel.getProperty(System.String)">
            <summary>
            
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IBindListView">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IBindListView.BindListView">
            <summary>
            绑定ListView
            </summary>
        </member>
        <member name="T:com.taishsoft.util.IFindClm">
            <summary>
            IFindClm 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IFindClm.AutoFindClm(System.Int32)">
            <summary>
            自动发现教室
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="M:com.taishsoft.util.IFindClm.ManuFindClm(System.Int32)">
            <summary>
            手动发现教室
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="M:com.taishsoft.util.IFindClm.DelFindClm(System.Int32)">
            <summary>
            删除发现教室
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="T:com.taishsoft.util.IGetMemoInfo">
            <summary>
            GetMemoInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IGetMemoInfo.GetMemoInfo(System.Int32,System.Int32,System.String)">
            <summary>
            获取某行、列的备注信息
            </summary>
            <param name="intRow"></param>
            <param name="intCol"></param>
            <param name="Value"></param>
        </member>
        <member name="M:com.taishsoft.util.IGetMemoInfo.GetMemoInfos(System.Int32,System.Int32,System.String)">
            <summary>
            获取某行、列的备注信息
            </summary>
            <param name="intRow"></param>
            <param name="intCol"></param>
            <param name="Value"></param>
        </member>
        <member name="T:com.taishsoft.util.IGetValueFromDialog">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IGetValueFromDialog.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="strValue">设置的值</param>
        </member>
        <member name="T:com.taishsoft.util.IGetValueFromDialog2">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IGetValueFromDialog2.SetValue(System.String,System.String)">
            <summary>
            设置值，利用接口的可能有多个字段
            </summary>
            <param name="strFieldName">字段名称</param>
            <param name="strFieldValue">字段值</param>
        </member>
        <member name="T:com.taishsoft.util.IGetArrayValueFromDialog">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IGetArrayValueFromDialog.SetValue(System.String,System.Collections.ArrayList)">
            <summary>
            设置值，利用接口的可能有多个字段
            </summary>
            <param name="strFieldName">字段名称</param>
            <param name="arrValue">多个字段值</param>
        </member>
        <member name="T:com.taishsoft.util.IGetWeekValueFromDS">
            <summary>
            IBindListView 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IGetWeekValueFromDS.GetDGValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="intRow"></param>
            <param name="intCol"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IGetWeekValueFromDS.GetDGValue_IsShowContextMenu(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="intRow"></param>
            <param name="intCol"></param>
            <param name="strid_EduClassTask"></param>
            <returns></returns>
        </member>
        <member name="M:com.taishsoft.util.IGetWeekValueFromDS.GetDGValue_IsCanSelected(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="intRow"></param>
            <param name="intCol"></param>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.INotifyEditEnd">
            <summary>
            INotifyEditEnd 的功能是通知结束编辑（添加、修改）。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.INotifyEditEnd.NotifyEditEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:com.taishsoft.util.ISetAdminCls">
            <summary>
            ISetTeacherInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetAdminCls.SetAdminCls(System.String)">
            <summary>
            
            </summary>
            <param name="id_PkAdminClass"></param>
        </member>
        <member name="T:com.taishsoft.util.ISetClassRoom">
            <summary>
            ISetClassRoom 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetClassRoom.SetClassRoom(System.String,System.Int32)">
            <summary>
            设置教室
            </summary>
            <param name="id_ClassRoom">教室流水号</param>
            <param name="intNum">序号</param>
        </member>
        <member name="T:com.taishsoft.util.ISetPkEduCls">
            <summary>
            ISetPkEduCls 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetPkEduCls.SetPkEduCls(System.String)">
            <summary>
            
            </summary>
            <param name="id_EduClass"></param>
        </member>
        <member name="T:com.taishsoft.util.ISetTeacherInfo">
            <summary>
            ISetTeacherInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetTeacherInfo.SetTeacherInfo(System.String)">
            <summary>
            
            </summary>
            <param name="id_Teacher"></param>
        </member>
        <member name="T:com.taishsoft.util.ISetValueToDS">
            <summary>
            ISetValueToDS 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.ISetValueToDS.SetDSValue(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            设置DS的值
            </summary>
            <param name="intRow">行</param>
            <param name="intCol">列</param>
            <param name="strMenuName">菜单</param>
            <param name="Value">值</param>
            <param name="Memo">备注</param>
            <returns></returns>
        </member>
        <member name="T:com.taishsoft.util.IShceGroup">
            <summary>
            IShceGroup 的摘要说明。
            </summary>
        </member>
        <member name="M:com.taishsoft.util.IShceGroup.GaoShceGroup(System.Int32)">
            <summary>
            高ShceGroup
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="M:com.taishsoft.util.IShceGroup.ZhongShceGroup(System.Int32)">
            <summary>
            中ShceGroup
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="M:com.taishsoft.util.IShceGroup.DiShceGroup(System.Int32)">
            <summary>
            低ShceGroup
            </summary>
            <param name="intNum"></param>
        </member>
        <member name="M:com.taishsoft.util.IShceGroup.DelShceGroup(System.Int32)">
            <summary>
            删除ShceGroup
            </summary>
            <param name="intNum"></param>
        </member>
    </members>
</doc>
